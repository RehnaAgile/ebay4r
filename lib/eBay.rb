require 'xsd/qname'

# {urn:ebay:apis:eBLBaseComponents}AddDisputeRequestType
class AddDisputeRequestType
  @@schema_type = "AddDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeExplanation", ["DisputeExplanationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeExplanation")]],
    ["disputeReason", ["DisputeReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeReason")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :disputeExplanation
  attr_accessor :disputeReason
  attr_accessor :itemID
  attr_accessor :transactionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, disputeExplanation = nil, disputeReason = nil, itemID = nil, transactionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @disputeExplanation = disputeExplanation
    @disputeReason = disputeReason
    @itemID = itemID
    @transactionID = transactionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseType
class AddDisputeResponseType
  @@schema_type = "AddDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, disputeID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseRequestType
class AddDisputeResponseRequestType
  @@schema_type = "AddDisputeResponseRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["messageText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageText")]],
    ["disputeActivity", ["DisputeActivityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeActivity")]],
    ["shippingCarrierUsed", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCarrierUsed")]],
    ["shipmentTrackNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackNumber")]],
    ["shippingTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTime")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :messageText
  attr_accessor :disputeActivity
  attr_accessor :shippingCarrierUsed
  attr_accessor :shipmentTrackNumber
  attr_accessor :shippingTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, disputeID = nil, messageText = nil, disputeActivity = nil, shippingCarrierUsed = nil, shipmentTrackNumber = nil, shippingTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @disputeID = disputeID
    @messageText = messageText
    @disputeActivity = disputeActivity
    @shippingCarrierUsed = shippingCarrierUsed
    @shipmentTrackNumber = shipmentTrackNumber
    @shippingTime = shippingTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseResponseType
class AddDisputeResponseResponseType
  @@schema_type = "AddDisputeResponseResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemRequestType
class AddItemRequestType
  @@schema_type = "AddItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemResponseType
class AddItemResponseType
  @@schema_type = "AddItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemRequestType
class AddLiveAuctionItemRequestType
  @@schema_type = "AddLiveAuctionItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemResponseType
class AddLiveAuctionItemResponseType
  @@schema_type = "AddLiveAuctionItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerRequestType
class AddMemberMessageAAQToPartnerRequestType
  @@schema_type = "AddMemberMessageAAQToPartnerRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memberMessage", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerResponseType
class AddMemberMessageAAQToPartnerResponseType
  @@schema_type = "AddMemberMessageAAQToPartnerResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQRequestType
class AddMemberMessageRTQRequestType
  @@schema_type = "AddMemberMessageRTQRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memberMessage", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQResponseType
class AddMemberMessageRTQResponseType
  @@schema_type = "AddMemberMessageRTQResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestType
class AddMemberMessagesAAQToBidderRequestType
  @@schema_type = "AddMemberMessagesAAQToBidderRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["addMemberMessagesAAQToBidderRequestContainer", ["AddMemberMessagesAAQToBidderRequestContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddMemberMessagesAAQToBidderRequestContainer")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, addMemberMessagesAAQToBidderRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderRequestContainer = addMemberMessagesAAQToBidderRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseType
class AddMemberMessagesAAQToBidderResponseType
  @@schema_type = "AddMemberMessagesAAQToBidderResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["addMemberMessagesAAQToBidderResponseContainer", ["AddMemberMessagesAAQToBidderResponseContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddMemberMessagesAAQToBidderResponseContainer")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, addMemberMessagesAAQToBidderResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderResponseContainer = addMemberMessagesAAQToBidderResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderRequestType
class AddOrderRequestType
  @@schema_type = "AddOrderRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["order", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :order

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, order = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @order = order
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderResponseType
class AddOrderResponseType
  @@schema_type = "AddOrderResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :orderID
  attr_accessor :createdTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, orderID = nil, createdTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @orderID = orderID
    @createdTime = createdTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemRequestType
class AddSecondChanceItemRequestType
  @@schema_type = "AddSecondChanceItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["recipientBidderUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientBidderUserID")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["copyEmailToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmailToSeller")]],
    ["duration", ["SecondChanceOfferDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["sellerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerMessage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :copyEmailToSeller
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :site
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, recipientBidderUserID = nil, buyItNowPrice = nil, copyEmailToSeller = nil, duration = nil, itemID = nil, site = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @copyEmailToSeller = copyEmailToSeller
    @duration = duration
    @itemID = itemID
    @site = site
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemResponseType
class AddSecondChanceItemResponseType
  @@schema_type = "AddSecondChanceItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :fees
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, fees = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @fees = fees
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionRequestType
class AddToItemDescriptionRequestType
  @@schema_type = "AddToItemDescriptionRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :description

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, description = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @description = description
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionResponseType
class AddToItemDescriptionResponseType
  @@schema_type = "AddToItemDescriptionResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListRequestType
class AddToWatchListRequestType
  @@schema_type = "AddToWatchListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListResponseType
class AddToWatchListResponseType
  @@schema_type = "AddToWatchListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchListCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListCount")]],
    ["watchListMaximum", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListMaximum")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemRequestType
class AddTransactionConfirmationItemRequestType
  @@schema_type = "AddTransactionConfirmationItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["verifyEligibilityOnly", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VerifyEligibilityOnly")]],
    ["recipientPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientPostalCode")]],
    ["recipientRelationType", ["RecipientRelationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientRelationType")]],
    ["negotiatedPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NegotiatedPrice")]],
    ["listingDuration", ["SecondChanceOfferDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["comments", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Comments")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :recipientUserID
  attr_accessor :verifyEligibilityOnly
  attr_accessor :recipientPostalCode
  attr_accessor :recipientRelationType
  attr_accessor :negotiatedPrice
  attr_accessor :listingDuration
  attr_accessor :itemID
  attr_accessor :comments

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, recipientUserID = nil, verifyEligibilityOnly = nil, recipientPostalCode = nil, recipientRelationType = nil, negotiatedPrice = nil, listingDuration = nil, itemID = nil, comments = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @recipientUserID = recipientUserID
    @verifyEligibilityOnly = verifyEligibilityOnly
    @recipientPostalCode = recipientPostalCode
    @recipientRelationType = recipientRelationType
    @negotiatedPrice = negotiatedPrice
    @listingDuration = listingDuration
    @itemID = itemID
    @comments = comments
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemResponseType
class AddTransactionConfirmationItemResponseType
  @@schema_type = "AddTransactionConfirmationItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApproveLiveAuctionBiddersRequestType
class ApproveLiveAuctionBiddersRequestType
  @@schema_type = "ApproveLiveAuctionBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["bidApproval", ["BidApprovalArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidApproval")]],
    ["approveAllPending", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApproveAllPending")]],
    ["allApprovedBiddingLimit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllApprovedBiddingLimit")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :userCatalogID
  attr_accessor :bidApproval
  attr_accessor :approveAllPending
  attr_accessor :allApprovedBiddingLimit

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, userCatalogID = nil, bidApproval = nil, approveAllPending = nil, allApprovedBiddingLimit = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @userCatalogID = userCatalogID
    @bidApproval = bidApproval
    @approveAllPending = approveAllPending
    @allApprovedBiddingLimit = allApprovedBiddingLimit
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApproveLiveAuctionBiddersResponseType
class ApproveLiveAuctionBiddersResponseType
  @@schema_type = "ApproveLiveAuctionBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderUpdateStatus", ["LiveAuctionApprovalStatusArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderUpdateStatus")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidderUpdateStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidderUpdateStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidderUpdateStatus = bidderUpdateStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleRequestType
class CompleteSaleRequestType
  @@schema_type = "CompleteSaleRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["feedbackInfo", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackInfo")]],
    ["shipped", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Shipped")]],
    ["paid", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Paid")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :feedbackInfo
  attr_accessor :shipped
  attr_accessor :paid

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, transactionID = nil, feedbackInfo = nil, shipped = nil, paid = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @feedbackInfo = feedbackInfo
    @shipped = shipped
    @paid = paid
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleResponseType
class CompleteSaleResponseType
  @@schema_type = "CompleteSaleResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesRequestType
class DeleteMyMessagesRequestType
  @@schema_type = "DeleteMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, alertIDs = nil, messageIDs = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesResponseType
class DeleteMyMessagesResponseType
  @@schema_type = "DeleteMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemRequestType
class EndItemRequestType
  @@schema_type = "EndItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["endingReason", ["EndReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndingReason")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :sellerInventoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, endingReason = nil, sellerInventoryID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @endingReason = endingReason
    @sellerInventoryID = sellerInventoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemResponseType
class EndItemResponseType
  @@schema_type = "EndItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenRequestType
class FetchTokenRequestType
  @@schema_type = "FetchTokenRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["secretID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecretID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :secretID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, secretID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @secretID = secretID
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenResponseType
class FetchTokenResponseType
  @@schema_type = "FetchTokenResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["hardExpirationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, eBayAuthToken = nil, hardExpirationTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @eBayAuthToken = eBayAuthToken
    @hardExpirationTime = hardExpirationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountRequestType
class GetAccountRequestType
  @@schema_type = "GetAccountRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["accountHistorySelection", ["AccountHistorySelectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountHistorySelection")]],
    ["invoiceDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceDate")]],
    ["beginDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BeginDate")]],
    ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndDate")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["excludeBalance", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeBalance")]],
    ["excludeSummary", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeSummary")]],
    ["accountEntrySortType", ["AccountEntrySortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntrySortType")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :accountHistorySelection
  attr_accessor :invoiceDate
  attr_accessor :beginDate
  attr_accessor :endDate
  attr_accessor :pagination
  attr_accessor :excludeBalance
  attr_accessor :excludeSummary
  attr_accessor :accountEntrySortType
  attr_accessor :currency

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, accountHistorySelection = nil, invoiceDate = nil, beginDate = nil, endDate = nil, pagination = nil, excludeBalance = nil, excludeSummary = nil, accountEntrySortType = nil, currency = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @accountHistorySelection = accountHistorySelection
    @invoiceDate = invoiceDate
    @beginDate = beginDate
    @endDate = endDate
    @pagination = pagination
    @excludeBalance = excludeBalance
    @excludeSummary = excludeSummary
    @accountEntrySortType = accountEntrySortType
    @currency = currency
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountResponseType
class GetAccountResponseType
  @@schema_type = "GetAccountResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["accountID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountID")]],
    ["accountSummary", ["AccountSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountSummary")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["accountEntries", ["AccountEntriesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntries")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreEntries", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreEntries")]],
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :accountID
  attr_accessor :accountSummary
  attr_accessor :currency
  attr_accessor :accountEntries
  attr_accessor :paginationResult
  attr_accessor :hasMoreEntries
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, accountID = nil, accountSummary = nil, currency = nil, accountEntries = nil, paginationResult = nil, hasMoreEntries = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @accountID = accountID
    @accountSummary = accountSummary
    @currency = currency
    @accountEntries = accountEntries
    @paginationResult = paginationResult
    @hasMoreEntries = hasMoreEntries
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsRequestType
class GetAdFormatLeadsRequestType
  @@schema_type = "GetAdFormatLeadsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsResponseType
class GetAdFormatLeadsResponseType
  @@schema_type = "GetAdFormatLeadsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["adFormatLead", ["AdFormatLeadType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatLead")]],
    ["adFormatLeadCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatLeadCount")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :adFormatLead
  attr_accessor :adFormatLeadCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, adFormatLead = [], adFormatLeadCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @adFormatLead = adFormatLead
    @adFormatLeadCount = adFormatLeadCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersRequestType
class GetAllBiddersRequestType
  @@schema_type = "GetAllBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["callMode", ["GetAllBiddersModeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallMode")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :callMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, callMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @callMode = callMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersResponseType
class GetAllBiddersResponseType
  @@schema_type = "GetAllBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidArray", ["OfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidArray")]],
    ["highBidder", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighBidder")]],
    ["highestBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighestBid")]],
    ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :highBidder
  attr_accessor :highestBid
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidArray = nil, highBidder = nil, highestBid = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidArray = bidArray
    @highBidder = highBidder
    @highestBid = highestBid
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesRequestType
class GetApiAccessRulesRequestType
  @@schema_type = "GetApiAccessRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesResponseType
class GetApiAccessRulesResponseType
  @@schema_type = "GetApiAccessRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["apiAccessRule", ["ApiAccessRuleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApiAccessRule")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :apiAccessRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, apiAccessRule = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @apiAccessRule = apiAccessRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSRequestType
class GetAttributesCSRequestType
  @@schema_type = "GetAttributesCSRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeSetID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["includeCategoryMappingDetails", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCategoryMappingDetails")]],
    ["digitalDelivery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDelivery")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID
  attr_accessor :includeCategoryMappingDetails
  attr_accessor :digitalDelivery

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, attributeSystemVersion = nil, attributeSetID = [], includeCategoryMappingDetails = nil, digitalDelivery = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
    @includeCategoryMappingDetails = includeCategoryMappingDetails
    @digitalDelivery = digitalDelivery
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSResponseType
class GetAttributesCSResponseType
  @@schema_type = "GetAttributesCSResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeData")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, attributeData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeData = attributeData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLRequestType
class GetAttributesXSLRequestType
  @@schema_type = "GetAttributesXSLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLResponseType
class GetAttributesXSLResponseType
  @@schema_type = "GetAttributesXSLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["xSLFile", ["XSLFileType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "XSLFile")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersRequestType
class GetBestOffersRequestType
  @@schema_type = "GetBestOffersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["bestOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["bestOfferStatus", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferStatus")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :bestOfferStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, bestOfferID = nil, bestOfferStatus = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @bestOfferStatus = bestOfferStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersResponseType
class GetBestOffersResponseType
  @@schema_type = "GetBestOffersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bestOfferArray", ["BestOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferArray")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bestOfferArray
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bestOfferArray = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bestOfferArray = bestOfferArray
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListRequestType
class GetBidderListRequestType
  @@schema_type = "GetBidderListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["activeItemsOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveItemsOnly")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["granularityLevel", ["GranularityLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GranularityLevel")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :activeItemsOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :userID
  attr_accessor :granularityLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, activeItemsOnly = nil, endTimeFrom = nil, endTimeTo = nil, userID = nil, granularityLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @activeItemsOnly = activeItemsOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @userID = userID
    @granularityLevel = granularityLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListResponseType
class GetBidderListResponseType
  @@schema_type = "GetBidderListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidder", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Bidder")]],
    ["bidItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidItemArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidder
  attr_accessor :bidItemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidder = nil, bidItemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidder = bidder
    @bidItemArray = bidItemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesRequestType
class GetCategoriesRequestType
  @@schema_type = "GetCategoriesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categorySiteID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategorySiteID")]],
    ["categoryParent", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParent")]],
    ["levelLimit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LevelLimit")]],
    ["viewAllNodes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewAllNodes")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categorySiteID
  attr_accessor :categoryParent
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categorySiteID = nil, categoryParent = [], levelLimit = nil, viewAllNodes = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categorySiteID = categorySiteID
    @categoryParent = categoryParent
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesResponseType
class GetCategoriesResponseType
  @@schema_type = "GetCategoriesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["categoryCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryCount")]],
    ["updateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpdateTime")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]],
    ["reservePriceInclusive", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePriceInclusive")]],
    ["reservePriceAllowed", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePriceAllowed")]],
    ["minimumReservePrice", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["reduceReserveInclusive", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReduceReserveInclusive")]],
    ["reduceReserveAllowed", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReduceReserveAllowed")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryArray
  attr_accessor :categoryCount
  attr_accessor :updateTime
  attr_accessor :categoryVersion
  attr_accessor :reservePriceInclusive
  attr_accessor :reservePriceAllowed
  attr_accessor :minimumReservePrice
  attr_accessor :currency
  attr_accessor :reduceReserveInclusive
  attr_accessor :reduceReserveAllowed

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryArray = nil, categoryCount = nil, updateTime = nil, categoryVersion = nil, reservePriceInclusive = nil, reservePriceAllowed = nil, minimumReservePrice = nil, currency = nil, reduceReserveInclusive = nil, reduceReserveAllowed = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryArray = categoryArray
    @categoryCount = categoryCount
    @updateTime = updateTime
    @categoryVersion = categoryVersion
    @reservePriceInclusive = reservePriceInclusive
    @reservePriceAllowed = reservePriceAllowed
    @minimumReservePrice = minimumReservePrice
    @currency = currency
    @reduceReserveInclusive = reduceReserveInclusive
    @reduceReserveAllowed = reduceReserveAllowed
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSRequestType
class GetCategory2CSRequestType
  @@schema_type = "GetCategory2CSRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :attributeSystemVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = nil, attributeSystemVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @attributeSystemVersion = attributeSystemVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSResponseType
class GetCategory2CSResponseType
  @@schema_type = "GetCategory2CSResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["mappedCategoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MappedCategoryArray")]],
    ["unmappedCategoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnmappedCategoryArray")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["siteWideCharacteristicSets", ["SiteWideCharacteristicsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteWideCharacteristicSets")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :mappedCategoryArray
  attr_accessor :unmappedCategoryArray
  attr_accessor :attributeSystemVersion
  attr_accessor :siteWideCharacteristicSets

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, mappedCategoryArray = nil, unmappedCategoryArray = nil, attributeSystemVersion = nil, siteWideCharacteristicSets = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @mappedCategoryArray = mappedCategoryArray
    @unmappedCategoryArray = unmappedCategoryArray
    @attributeSystemVersion = attributeSystemVersion
    @siteWideCharacteristicSets = siteWideCharacteristicSets
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2FinanceOfferRequestType
class GetCategory2FinanceOfferRequestType
  @@schema_type = "GetCategory2FinanceOfferRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = nil, lastModifiedDate = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedDate = lastModifiedDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2FinanceOfferResponseType
class GetCategory2FinanceOfferResponseType
  @@schema_type = "GetCategory2FinanceOfferResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["categoryFinanceOfferArray", ["CategoryFinanceOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryFinanceOfferArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :count
  attr_accessor :categoryFinanceOfferArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, count = nil, categoryFinanceOfferArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @count = count
    @categoryFinanceOfferArray = categoryFinanceOfferArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesRequestType
class GetCategoryFeaturesRequestType
  @@schema_type = "GetCategoryFeaturesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["levelLimit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LevelLimit")]],
    ["viewAllNodes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewAllNodes")]],
    ["featureID", ["FeatureIDCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeatureID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes
  attr_accessor :featureID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = nil, levelLimit = nil, viewAllNodes = nil, featureID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
    @featureID = featureID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesResponseType
class GetCategoryFeaturesResponseType
  @@schema_type = "GetCategoryFeaturesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]],
    ["updateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpdateTime")]],
    ["category", ["CategoryFeatureType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["siteDefaults", ["SiteDefaultsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteDefaults")]],
    ["featureDefinitions", ["FeatureDefinitionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeatureDefinitions")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion
  attr_accessor :updateTime
  attr_accessor :category
  attr_accessor :siteDefaults
  attr_accessor :featureDefinitions

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryVersion = nil, updateTime = nil, category = [], siteDefaults = nil, featureDefinitions = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
    @updateTime = updateTime
    @category = category
    @siteDefaults = siteDefaults
    @featureDefinitions = featureDefinitions
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsRequestType
class GetCategoryListingsRequestType
  @@schema_type = "GetCategoryListingsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["adFormat", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormat")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["itemTypeFilter", ["ItemTypeFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTypeFilter")]],
    ["storesFixedPrice", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoresFixedPrice")]],
    ["searchType", ["CategoryListingsSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["orderBy", ["CategoryListingsOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderBy")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["searchLocation", ["SearchLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocation")]],
    ["proximitySearch", ["ProximitySearchType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearch")]],
    ["includeGetItFastItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeGetItFastItems")]],
    ["paymentMethod", ["PaymentMethodSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["includeCondition", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCondition")]],
    ["includeFeedback", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFeedback")]],
    ["localSearchPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalSearchPostalCode")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :categoryID
  attr_accessor :adFormat
  attr_accessor :currency
  attr_accessor :itemTypeFilter
  attr_accessor :storesFixedPrice
  attr_accessor :searchType
  attr_accessor :orderBy
  attr_accessor :pagination
  attr_accessor :searchLocation
  attr_accessor :proximitySearch
  attr_accessor :includeGetItFastItems
  attr_accessor :paymentMethod
  attr_accessor :includeCondition
  attr_accessor :includeFeedback
  attr_accessor :localSearchPostalCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, motorsGermanySearchable = nil, categoryID = nil, adFormat = nil, currency = nil, itemTypeFilter = nil, storesFixedPrice = nil, searchType = nil, orderBy = nil, pagination = nil, searchLocation = nil, proximitySearch = nil, includeGetItFastItems = nil, paymentMethod = nil, includeCondition = nil, includeFeedback = nil, localSearchPostalCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @categoryID = categoryID
    @adFormat = adFormat
    @currency = currency
    @itemTypeFilter = itemTypeFilter
    @storesFixedPrice = storesFixedPrice
    @searchType = searchType
    @orderBy = orderBy
    @pagination = pagination
    @searchLocation = searchLocation
    @proximitySearch = proximitySearch
    @includeGetItFastItems = includeGetItFastItems
    @paymentMethod = paymentMethod
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
    @localSearchPostalCode = localSearchPostalCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsResponseType
class GetCategoryListingsResponseType
  @@schema_type = "GetCategoryListingsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["category", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["subCategories", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubCategories")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["buyingGuideDetails", ["BuyingGuideDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideDetails")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemArray
  attr_accessor :category
  attr_accessor :subCategories
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :buyingGuideDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemArray = nil, category = nil, subCategories = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, buyingGuideDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemArray = itemArray
    @category = category
    @subCategories = subCategories
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @buyingGuideDetails = buyingGuideDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsRequestType
class GetCategoryMappingsRequestType
  @@schema_type = "GetCategoryMappingsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsResponseType
class GetCategoryMappingsResponseType
  @@schema_type = "GetCategoryMappingsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryMapping", ["CategoryMappingType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryMapping")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryMapping
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryMapping = [], categoryVersion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryMapping = categoryMapping
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenRequestType
class GetChallengeTokenRequestType
  @@schema_type = "GetChallengeTokenRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenResponseType
class GetChallengeTokenResponseType
  @@schema_type = "GetChallengeTokenResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["challengeToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChallengeToken")]],
    ["imageChallengeURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ImageChallengeURL")]],
    ["audioChallengeURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AudioChallengeURL")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :imageChallengeURL
  attr_accessor :audioChallengeURL

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, challengeToken = nil, imageChallengeURL = nil, audioChallengeURL = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @imageChallengeURL = imageChallengeURL
    @audioChallengeURL = audioChallengeURL
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesRequestType
class GetCharitiesRequestType
  @@schema_type = "GetCharitiesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["charityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityName")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["charityRegion", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityRegion")]],
    ["charityDomain", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityDomain")]],
    ["includeDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeDescription")]],
    ["matchType", ["StringMatchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MatchType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :charityID
  attr_accessor :charityName
  attr_accessor :query
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :includeDescription
  attr_accessor :matchType

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, charityID = nil, charityName = nil, query = nil, charityRegion = nil, charityDomain = nil, includeDescription = nil, matchType = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @charityID = charityID
    @charityName = charityName
    @query = query
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @includeDescription = includeDescription
    @matchType = matchType
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesResponseType
class GetCharitiesResponseType
  @@schema_type = "GetCharitiesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["charity", ["CharityInfoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Charity")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :charity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, charity = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @charity = charity
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsRequestType
class GetContextualKeywordsRequestType
  @@schema_type = "GetContextualKeywordsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["encoding", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Encoding")]],
    ["categoryID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :uRL
  attr_accessor :encoding
  attr_accessor :categoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, uRL = nil, encoding = nil, categoryID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @uRL = uRL
    @encoding = encoding
    @categoryID = categoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsResponseType
class GetContextualKeywordsResponseType
  @@schema_type = "GetContextualKeywordsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["contextSearchAsset", ["ContextSearchAssetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContextSearchAsset")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :contextSearchAsset

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, contextSearchAsset = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @contextSearchAsset = contextSearchAsset
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsRequestType
class GetCrossPromotionsRequestType
  @@schema_type = "GetCrossPromotionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["promotionViewMode", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionViewMode")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :promotionMethod
  attr_accessor :promotionViewMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, promotionMethod = nil, promotionViewMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @promotionMethod = promotionMethod
    @promotionViewMode = promotionViewMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsResponseType
class GetCrossPromotionsResponseType
  @@schema_type = "GetCrossPromotionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["crossPromotion", ["CrossPromotionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotion")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :crossPromotion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, crossPromotion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @crossPromotion = crossPromotion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesRequestType
class GetDescriptionTemplatesRequestType
  @@schema_type = "GetDescriptionTemplatesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["lastModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedTime")]],
    ["motorVehicles", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorVehicles")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedTime
  attr_accessor :motorVehicles

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = nil, lastModifiedTime = nil, motorVehicles = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedTime = lastModifiedTime
    @motorVehicles = motorVehicles
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesResponseType
class GetDescriptionTemplatesResponseType
  @@schema_type = "GetDescriptionTemplatesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["descriptionTemplate", ["DescriptionTemplateType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescriptionTemplate")]],
    ["layoutTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LayoutTotal")]],
    ["obsoleteLayoutID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ObsoleteLayoutID")]],
    ["obsoleteThemeID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ObsoleteThemeID")]],
    ["themeGroup", ["ThemeGroupType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeGroup")]],
    ["themeTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeTotal")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :descriptionTemplate
  attr_accessor :layoutTotal
  attr_accessor :obsoleteLayoutID
  attr_accessor :obsoleteThemeID
  attr_accessor :themeGroup
  attr_accessor :themeTotal

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, descriptionTemplate = [], layoutTotal = nil, obsoleteLayoutID = [], obsoleteThemeID = [], themeGroup = [], themeTotal = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @descriptionTemplate = descriptionTemplate
    @layoutTotal = layoutTotal
    @obsoleteLayoutID = obsoleteLayoutID
    @obsoleteThemeID = obsoleteThemeID
    @themeGroup = themeGroup
    @themeTotal = themeTotal
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeRequestType
class GetDisputeRequestType
  @@schema_type = "GetDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, disputeID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeResponseType
class GetDisputeResponseType
  @@schema_type = "GetDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dispute", ["DisputeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Dispute")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dispute

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, dispute = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dispute = dispute
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackRequestType
class GetFeedbackRequestType
  @@schema_type = "GetFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :pagination
  attr_accessor :userID
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, pagination = nil, userID = nil, feedbackID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @pagination = pagination
    @userID = userID
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackResponseType
class GetFeedbackResponseType
  @@schema_type = "GetFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackDetailArray", ["FeedbackDetailArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetailArray")]],
    ["feedbackDetailItemTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetailItemTotal")]],
    ["feedbackSummary", ["FeedbackSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackSummary")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :feedbackDetailArray
  attr_accessor :feedbackDetailItemTotal
  attr_accessor :feedbackSummary
  attr_accessor :feedbackScore

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, feedbackDetailArray = nil, feedbackDetailItemTotal = nil, feedbackSummary = nil, feedbackScore = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @feedbackDetailArray = feedbackDetailArray
    @feedbackDetailItemTotal = feedbackDetailItemTotal
    @feedbackSummary = feedbackSummary
    @feedbackScore = feedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFinanceOffersRequestType
class GetFinanceOffersRequestType
  @@schema_type = "GetFinanceOffersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :financeOfferID
  attr_accessor :lastModifiedDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, financeOfferID = nil, lastModifiedDate = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @financeOfferID = financeOfferID
    @lastModifiedDate = lastModifiedDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFinanceOffersResponseType
class GetFinanceOffersResponseType
  @@schema_type = "GetFinanceOffersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["financeOfferArray", ["FinanceOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :count
  attr_accessor :financeOfferArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, count = nil, financeOfferArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @count = count
    @financeOfferArray = financeOfferArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersRequestType
class GetHighBiddersRequestType
  @@schema_type = "GetHighBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersResponseType
class GetHighBiddersResponseType
  @@schema_type = "GetHighBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidArray", ["OfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidArray")]],
    ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidArray = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidArray = bidArray
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRequestType
class GetItemRequestType
  @@schema_type = "GetItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["includeExpressRequirements", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeExpressRequirements")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]],
    ["includeCrossPromotion", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCrossPromotion")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :includeExpressRequirements
  attr_accessor :includeWatchCount
  attr_accessor :includeCrossPromotion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, includeExpressRequirements = nil, includeWatchCount = nil, includeCrossPromotion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @includeExpressRequirements = includeExpressRequirements
    @includeWatchCount = includeWatchCount
    @includeCrossPromotion = includeCrossPromotion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemResponseType
class GetItemResponseType
  @@schema_type = "GetItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsRequestType
class GetItemRecommendationsRequestType
  @@schema_type = "GetItemRecommendationsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["getRecommendationsRequestContainer", ["GetRecommendationsRequestContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetRecommendationsRequestContainer")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, getRecommendationsRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @getRecommendationsRequestContainer = getRecommendationsRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsResponseType
class GetItemRecommendationsResponseType
  @@schema_type = "GetItemRecommendationsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["getRecommendationsResponseContainer", ["GetRecommendationsResponseContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetRecommendationsResponseContainer")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, getRecommendationsResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @getRecommendationsResponseContainer = getRecommendationsResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingRequestType
class GetItemShippingRequestType
  @@schema_type = "GetItemShippingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["quantitySold", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantitySold")]],
    ["destinationPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DestinationPostalCode")]],
    ["destinationCountryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DestinationCountryCode")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :quantitySold
  attr_accessor :destinationPostalCode
  attr_accessor :destinationCountryCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, quantitySold = nil, destinationPostalCode = nil, destinationCountryCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @quantitySold = quantitySold
    @destinationPostalCode = destinationPostalCode
    @destinationCountryCode = destinationCountryCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingResponseType
class GetItemShippingResponseType
  @@schema_type = "GetItemShippingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :shippingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, shippingDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @shippingDetails = shippingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsRequestType
class GetItemTransactionsRequestType
  @@schema_type = "GetItemTransactionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["includeFinalValueFee", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFinalValueFee")]],
    ["includeContainingOrder", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeContainingOrder")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :transactionID
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, modTimeFrom = nil, modTimeTo = nil, transactionID = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @transactionID = transactionID
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsResponseType
class GetItemTransactionsResponseType
  @@schema_type = "GetItemTransactionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreTransactions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreTransactions")]],
    ["transactionsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedTransactionCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedTransactionCountActual")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :item
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, item = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @item = item
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackRequestType
class GetItemsAwaitingFeedbackRequestType
  @@schema_type = "GetItemsAwaitingFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["sort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :sort
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, sort = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @sort = sort
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackResponseType
class GetItemsAwaitingFeedbackResponseType
  @@schema_type = "GetItemsAwaitingFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemsAwaitingFeedback", ["PaginatedTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsAwaitingFeedback")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemsAwaitingFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemsAwaitingFeedback = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemsAwaitingFeedback = itemsAwaitingFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionBiddersRequestType
class GetLiveAuctionBiddersRequestType
  @@schema_type = "GetLiveAuctionBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["bidderStatus", ["BidderStatusCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderStatus")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :userCatalogID
  attr_accessor :bidderStatus
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, userCatalogID = nil, bidderStatus = [], pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @userCatalogID = userCatalogID
    @bidderStatus = bidderStatus
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionBiddersResponseType
class GetLiveAuctionBiddersResponseType
  @@schema_type = "GetLiveAuctionBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderDetails", ["BidderDetailArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderDetails")]],
    ["totalPending", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalPending")]],
    ["totalApproved", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalApproved")]],
    ["totalDenied", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalDenied")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidderDetails
  attr_accessor :totalPending
  attr_accessor :totalApproved
  attr_accessor :totalDenied
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidderDetails = nil, totalPending = nil, totalApproved = nil, totalDenied = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidderDetails = bidderDetails
    @totalPending = totalPending
    @totalApproved = totalApproved
    @totalDenied = totalDenied
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsRequestType
class GetLiveAuctionCatalogDetailsRequestType
  @@schema_type = "GetLiveAuctionCatalogDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsResponseType
class GetLiveAuctionCatalogDetailsResponseType
  @@schema_type = "GetLiveAuctionCatalogDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["liveAuctionCatalog", ["LiveAuctionCatalogType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionCatalog")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :liveAuctionCatalog

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, liveAuctionCatalog = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @liveAuctionCatalog = liveAuctionCatalog
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesRequestType
class GetMemberMessagesRequestType
  @@schema_type = "GetMemberMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["mailMessageType", ["MessageTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MailMessageType")]],
    ["messageStatus", ["MessageStatusTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStatus")]],
    ["displayToPublic", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayToPublic")]],
    ["startCreationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartCreationTime")]],
    ["endCreationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndCreationTime")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["memberMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessageID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :mailMessageType
  attr_accessor :messageStatus
  attr_accessor :displayToPublic
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime
  attr_accessor :pagination
  attr_accessor :memberMessageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, mailMessageType = nil, messageStatus = nil, displayToPublic = nil, startCreationTime = nil, endCreationTime = nil, pagination = nil, memberMessageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @mailMessageType = mailMessageType
    @messageStatus = messageStatus
    @displayToPublic = displayToPublic
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
    @pagination = pagination
    @memberMessageID = memberMessageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesResponseType
class GetMemberMessagesResponseType
  @@schema_type = "GetMemberMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["memberMessage", ["MemberMessageExchangeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :memberMessage
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, memberMessage = nil, paginationResult = nil, hasMoreItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @memberMessage = memberMessage
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesRequestType
class GetMyMessagesRequestType
  @@schema_type = "GetMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]],
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, alertIDs = nil, messageIDs = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesResponseType
class GetMyMessagesResponseType
  @@schema_type = "GetMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["summary", ["MyMessagesSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Summary")]],
    ["alerts", ["MyMessagesAlertArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Alerts")]],
    ["messages", ["MyMessagesMessageArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Messages")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :summary
  attr_accessor :alerts
  attr_accessor :messages

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, summary = nil, alerts = nil, messages = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @summary = summary
    @alerts = alerts
    @messages = messages
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRequestType
class GetMyeBayRequestType
  @@schema_type = "GetMyeBayRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["biddingSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingSort")]],
    ["lostSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostSort")]],
    ["maxItemsPerList", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxItemsPerList")]],
    ["maxItemAgeInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxItemAgeInDays")]],
    ["watchSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchSort")]],
    ["wonSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonSort")]],
    ["favoriteSearches", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffers")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :biddingSort
  attr_accessor :lostSort
  attr_accessor :maxItemsPerList
  attr_accessor :maxItemAgeInDays
  attr_accessor :watchSort
  attr_accessor :wonSort
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffers

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, biddingSort = nil, lostSort = nil, maxItemsPerList = nil, maxItemAgeInDays = nil, watchSort = nil, wonSort = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffers = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @biddingSort = biddingSort
    @lostSort = lostSort
    @maxItemsPerList = maxItemsPerList
    @maxItemAgeInDays = maxItemAgeInDays
    @watchSort = watchSort
    @wonSort = wonSort
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffers = secondChanceOffers
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayResponseType
class GetMyeBayResponseType
  @@schema_type = "GetMyeBayResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["biddingItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingItemArray")]],
    ["lostItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostItemArray")]],
    ["watchItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchItemArray")]],
    ["wonItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonItemArray")]],
    ["favoriteSearches", ["MyeBayFavoriteSearchListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBayFavoriteSellerListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffers", ["MyeBaySecondChanceOfferListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffers")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :biddingItemArray
  attr_accessor :lostItemArray
  attr_accessor :watchItemArray
  attr_accessor :wonItemArray
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffers

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, biddingItemArray = nil, lostItemArray = nil, watchItemArray = nil, wonItemArray = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffers = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @biddingItemArray = biddingItemArray
    @lostItemArray = lostItemArray
    @watchItemArray = watchItemArray
    @wonItemArray = wonItemArray
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffers = secondChanceOffers
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingRequestType
class GetMyeBayBuyingRequestType
  @@schema_type = "GetMyeBayBuyingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchList")]],
    ["bidList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidList")]],
    ["bestOfferList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferList")]],
    ["wonList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonList")]],
    ["lostList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostList")]],
    ["favoriteSearches", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffer", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingResponseType
class GetMyeBayBuyingResponseType
  @@schema_type = "GetMyeBayBuyingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingSummary", ["BuyingSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingSummary")]],
    ["watchList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchList")]],
    ["bidList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidList")]],
    ["bestOfferList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferList")]],
    ["wonList", ["PaginatedOrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonList")]],
    ["lostList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostList")]],
    ["favoriteSearches", ["MyeBayFavoriteSearchListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBayFavoriteSellerListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffer", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :buyingSummary
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, buyingSummary = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @buyingSummary = buyingSummary
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersRequestType
class GetMyeBayRemindersRequestType
  @@schema_type = "GetMyeBayRemindersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingReminders", ["ReminderCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingReminders")]],
    ["sellingReminders", ["ReminderCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingReminders")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, buyingReminders = nil, sellingReminders = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersResponseType
class GetMyeBayRemindersResponseType
  @@schema_type = "GetMyeBayRemindersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingReminders", ["RemindersType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingReminders")]],
    ["sellingReminders", ["RemindersType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingReminders")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, buyingReminders = nil, sellingReminders = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingRequestType
class GetMyeBaySellingRequestType
  @@schema_type = "GetMyeBaySellingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["scheduledList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduledList")]],
    ["activeList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveList")]],
    ["soldList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldList")]],
    ["unsoldList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsoldList")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingResponseType
class GetMyeBaySellingResponseType
  @@schema_type = "GetMyeBaySellingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["sellingSummary", ["SellingSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingSummary")]],
    ["scheduledList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduledList")]],
    ["activeList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveList")]],
    ["soldList", ["PaginatedOrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldList")]],
    ["unsoldList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsoldList")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :sellingSummary
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, sellingSummary = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @sellingSummary = sellingSummary
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesRequestType
class GetNotificationPreferencesRequestType
  @@schema_type = "GetNotificationPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["preferenceLevel", ["NotificationRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PreferenceLevel")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :preferenceLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, preferenceLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @preferenceLevel = preferenceLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesResponseType
class GetNotificationPreferencesResponseType
  @@schema_type = "GetNotificationPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDeliveryPreferences", ["ApplicationDeliveryPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDeliveryPreferences")]],
    ["userDeliveryPreferenceArray", ["NotificationEnableArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDeliveryPreferenceArray")]],
    ["userData", ["NotificationUserDataType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserData")]],
    ["eventProperty", ["NotificationEventPropertyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventProperty")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageRequestType
class GetNotificationsUsageRequestType
  @@schema_type = "GetNotificationsUsageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, startTime = nil, endTime = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageResponseType
class GetNotificationsUsageResponseType
  @@schema_type = "GetNotificationsUsageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["notificationDetailsArray", ["NotificationDetailsArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationDetailsArray")]],
    ["markUpMarkDownHistory", ["MarkUpMarkDownHistoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MarkUpMarkDownHistory")]],
    ["notificationStatistics", ["NotificationStatisticsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationStatistics")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :notificationDetailsArray
  attr_accessor :markUpMarkDownHistory
  attr_accessor :notificationStatistics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, startTime = nil, endTime = nil, notificationDetailsArray = nil, markUpMarkDownHistory = nil, notificationStatistics = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @notificationDetailsArray = notificationDetailsArray
    @markUpMarkDownHistory = markUpMarkDownHistory
    @notificationStatistics = notificationStatistics
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsRequestType
class GetOrderTransactionsRequestType
  @@schema_type = "GetOrderTransactionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemTransactionIDArray", ["ItemTransactionIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTransactionIDArray")]],
    ["orderIDArray", ["OrderIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderIDArray")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemTransactionIDArray
  attr_accessor :orderIDArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemTransactionIDArray = nil, orderIDArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemTransactionIDArray = itemTransactionIDArray
    @orderIDArray = orderIDArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsResponseType
class GetOrderTransactionsResponseType
  @@schema_type = "GetOrderTransactionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["orderArray", ["OrderArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :orderArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, orderArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @orderArray = orderArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersRequestType
class GetOrdersRequestType
  @@schema_type = "GetOrdersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["orderIDArray", ["OrderIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderIDArray")]],
    ["createTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreateTimeFrom")]],
    ["createTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreateTimeTo")]],
    ["orderRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderRole")]],
    ["orderStatus", ["OrderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderStatus")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :orderIDArray
  attr_accessor :createTimeFrom
  attr_accessor :createTimeTo
  attr_accessor :orderRole
  attr_accessor :orderStatus
  attr_accessor :listingType
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, orderIDArray = nil, createTimeFrom = nil, createTimeTo = nil, orderRole = nil, orderStatus = nil, listingType = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @orderIDArray = orderIDArray
    @createTimeFrom = createTimeFrom
    @createTimeTo = createTimeTo
    @orderRole = orderRole
    @orderStatus = orderStatus
    @listingType = listingType
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersResponseType
class GetOrdersResponseType
  @@schema_type = "GetOrdersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreOrders", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreOrders")]],
    ["orderArray", ["OrderArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderArray")]],
    ["ordersPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrdersPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedOrderCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedOrderCountActual")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreOrders
  attr_accessor :orderArray
  attr_accessor :ordersPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedOrderCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreOrders = nil, orderArray = nil, ordersPerPage = nil, pageNumber = nil, returnedOrderCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreOrders = hasMoreOrders
    @orderArray = orderArray
    @ordersPerPage = ordersPerPage
    @pageNumber = pageNumber
    @returnedOrderCountActual = returnedOrderCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsRequestType
class GetPictureManagerDetailsRequestType
  @@schema_type = "GetPictureManagerDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["folderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["pictureURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["pictureManagerDetailLevel", ["PictureManagerDetailLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetailLevel")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :pictureURL
  attr_accessor :pictureManagerDetailLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, folderID = nil, pictureURL = nil, pictureManagerDetailLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @folderID = folderID
    @pictureURL = pictureURL
    @pictureManagerDetailLevel = pictureManagerDetailLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsResponseType
class GetPictureManagerDetailsResponseType
  @@schema_type = "GetPictureManagerDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pictureManagerDetails", ["PictureManagerDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetails")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, pictureManagerDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsRequestType
class GetPictureManagerOptionsRequestType
  @@schema_type = "GetPictureManagerOptionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsResponseType
class GetPictureManagerOptionsResponseType
  @@schema_type = "GetPictureManagerOptionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["subscription", ["PictureManagerSubscriptionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subscription")]],
    ["pictureType", ["PictureManagerPictureDisplayType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :subscription
  attr_accessor :pictureType

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, subscription = [], pictureType = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @subscription = subscription
    @pictureType = pictureType
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsRequestType
class GetPopularKeywordsRequestType
  @@schema_type = "GetPopularKeywordsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["includeChildCategories", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeChildCategories")]],
    ["maxKeywordsRetrieved", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxKeywordsRetrieved")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :includeChildCategories
  attr_accessor :maxKeywordsRetrieved
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = [], includeChildCategories = nil, maxKeywordsRetrieved = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @includeChildCategories = includeChildCategories
    @maxKeywordsRetrieved = maxKeywordsRetrieved
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsResponseType
class GetPopularKeywordsResponseType
  @@schema_type = "GetPopularKeywordsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :hasMore

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, categoryArray = nil, hasMore = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @hasMore = hasMore
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersRequestType
class GetProductFamilyMembersRequestType
  @@schema_type = "GetProductFamilyMembersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSearch", ["ProductSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearch")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersResponseType
class GetProductFamilyMembersResponseType
  @@schema_type = "GetProductFamilyMembersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dataElementSets", ["DataElementSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementSets")]],
    ["productSearchResult", ["ProductSearchResultType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchResult")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderRequestType
class GetProductFinderRequestType
  @@schema_type = "GetProductFinderRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productFinderID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, attributeSystemVersion = nil, productFinderID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderID = productFinderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderResponseType
class GetProductFinderResponseType
  @@schema_type = "GetProductFinderResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productFinderData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderData")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, productFinderData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderData = productFinderData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLRequestType
class GetProductFinderXSLRequestType
  @@schema_type = "GetProductFinderXSLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLResponseType
class GetProductFinderXSLResponseType
  @@schema_type = "GetProductFinderXSLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["xSLFile", ["XSLFileType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "XSLFile")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageRequestType
class GetProductSearchPageRequestType
  @@schema_type = "GetProductSearchPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeSetID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, attributeSystemVersion = nil, attributeSetID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageResponseType
class GetProductSearchPageResponseType
  @@schema_type = "GetProductSearchPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productSearchPage", ["ProductSearchPageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchPage")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productSearchPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, productSearchPage = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productSearchPage = productSearchPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsRequestType
class GetProductSearchResultsRequestType
  @@schema_type = "GetProductSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSearch", ["ProductSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearch")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsResponseType
class GetProductSearchResultsResponseType
  @@schema_type = "GetProductSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dataElementSets", ["DataElementSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementSets")]],
    ["productSearchResult", ["ProductSearchResultType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchResult")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesRequestType
class GetProductSellingPagesRequestType
  @@schema_type = "GetProductSellingPagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["useCase", ["ProductUseCaseCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseCase")]],
    ["product", ["ProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Product")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :useCase
  attr_accessor :product

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, useCase = nil, product = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @useCase = useCase
    @product = product
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesResponseType
class GetProductSellingPagesResponseType
  @@schema_type = "GetProductSellingPagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSellingPagesData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSellingPagesData")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :productSellingPagesData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, productSellingPagesData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @productSellingPagesData = productSellingPagesData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesRequestType
class GetPromotionRulesRequestType
  @@schema_type = "GetPromotionRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :storeCategoryID
  attr_accessor :promotionMethod

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, storeCategoryID = nil, promotionMethod = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @storeCategoryID = storeCategoryID
    @promotionMethod = promotionMethod
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesResponseType
class GetPromotionRulesResponseType
  @@schema_type = "GetPromotionRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["promotionRuleArray", ["PromotionRuleArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRuleArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, promotionRuleArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestType
class GetRecommendationsRequestType
  @@schema_type = "GetRecommendationsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["listingFlow", ["ListingFlowCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingFlow")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["recommendationEngine", ["RecommendationEngineCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecommendationEngine")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :externalProductID
  attr_accessor :modifiedFields
  attr_accessor :recommendationEngine
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, listingFlow = nil, item = nil, externalProductID = nil, modifiedFields = [], recommendationEngine = [], query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @listingFlow = listingFlow
    @item = item
    @externalProductID = externalProductID
    @modifiedFields = modifiedFields
    @recommendationEngine = recommendationEngine
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseType
class GetRecommendationsResponseType
  @@schema_type = "GetRecommendationsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["listingAnalyzerRecommendations", ["ListingAnalyzerRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingAnalyzerRecommendations")]],
    ["sIFFTASRecommendations", ["SIFFTASRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SIFFTASRecommendations")]],
    ["pricingRecommendations", ["PricingRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PricingRecommendations")]],
    ["attributeRecommendations", ["AttributeRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeRecommendations")]],
    ["productRecommendations", ["ProductRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductRecommendations")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetReturnURLRequestType
class GetReturnURLRequestType
  @@schema_type = "GetReturnURLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetReturnURLResponseType
class GetReturnURLResponseType
  @@schema_type = "GetReturnURLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDisplayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDisplayName")]],
    ["authenticationEntryArray", ["AuthenticationEntryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntryArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :applicationDisplayName
  attr_accessor :authenticationEntryArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, applicationDisplayName = nil, authenticationEntryArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @applicationDisplayName = applicationDisplayName
    @authenticationEntryArray = authenticationEntryArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRuNameRequestType
class GetRuNameRequestType
  @@schema_type = "GetRuNameRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["clientUseCase", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ClientUseCase")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :clientUseCase

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, clientUseCase = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @clientUseCase = clientUseCase
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRuNameResponseType
class GetRuNameResponseType
  @@schema_type = "GetRuNameResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["ruName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuName")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :ruName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, ruName = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @ruName = ruName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsRequestType
class GetSearchResultsRequestType
  @@schema_type = "GetSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["searchFlags", ["SearchFlagsCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchFlags")]],
    ["priceRangeFilter", ["PriceRangeFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PriceRangeFilter")]],
    ["proximitySearch", ["ProximitySearchType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearch")]],
    ["itemTypeFilter", ["ItemTypeFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTypeFilter")]],
    ["searchType", ["SearchTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["userIdFilter", ["UserIdFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIdFilter")]],
    ["searchLocationFilter", ["SearchLocationFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocationFilter")]],
    ["storeSearchFilter", ["SearchStoreFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreSearchFilter")]],
    ["order", ["SearchSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["searchRequest", ["SearchRequestType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchRequest")]],
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["categories", ["RequestCategoriesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Categories")]],
    ["totalOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalOnly")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["includeGetItFastItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeGetItFastItems")]],
    ["storesFixedPrice", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoresFixedPrice")]],
    ["paymentMethod", ["PaymentMethodSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["granularityLevel", ["GranularityLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GranularityLevel")]],
    ["expandSearch", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpandSearch")]],
    ["lot", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Lot")]],
    ["adFormat", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormat")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["quantityOperator", ["QuantityOperatorCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityOperator")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["digitalDelivery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDelivery")]],
    ["includeCondition", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCondition")]],
    ["includeFeedback", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFeedback")]],
    ["charityID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["localSearchPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalSearchPostalCode")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :query
  attr_accessor :categoryID
  attr_accessor :searchFlags
  attr_accessor :priceRangeFilter
  attr_accessor :proximitySearch
  attr_accessor :itemTypeFilter
  attr_accessor :searchType
  attr_accessor :userIdFilter
  attr_accessor :searchLocationFilter
  attr_accessor :storeSearchFilter
  attr_accessor :order
  attr_accessor :pagination
  attr_accessor :searchRequest
  attr_accessor :productID
  attr_accessor :externalProductID
  attr_accessor :categories
  attr_accessor :totalOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :includeGetItFastItems
  attr_accessor :storesFixedPrice
  attr_accessor :paymentMethod
  attr_accessor :granularityLevel
  attr_accessor :expandSearch
  attr_accessor :lot
  attr_accessor :adFormat
  attr_accessor :quantity
  attr_accessor :quantityOperator
  attr_accessor :sellerBusinessType
  attr_accessor :digitalDelivery
  attr_accessor :includeCondition
  attr_accessor :includeFeedback
  attr_accessor :charityID
  attr_accessor :localSearchPostalCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, motorsGermanySearchable = nil, query = nil, categoryID = nil, searchFlags = [], priceRangeFilter = nil, proximitySearch = nil, itemTypeFilter = nil, searchType = nil, userIdFilter = nil, searchLocationFilter = nil, storeSearchFilter = nil, order = nil, pagination = nil, searchRequest = nil, productID = nil, externalProductID = nil, categories = nil, totalOnly = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, includeGetItFastItems = nil, storesFixedPrice = nil, paymentMethod = nil, granularityLevel = nil, expandSearch = nil, lot = nil, adFormat = nil, quantity = nil, quantityOperator = nil, sellerBusinessType = nil, digitalDelivery = nil, includeCondition = nil, includeFeedback = nil, charityID = nil, localSearchPostalCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @query = query
    @categoryID = categoryID
    @searchFlags = searchFlags
    @priceRangeFilter = priceRangeFilter
    @proximitySearch = proximitySearch
    @itemTypeFilter = itemTypeFilter
    @searchType = searchType
    @userIdFilter = userIdFilter
    @searchLocationFilter = searchLocationFilter
    @storeSearchFilter = storeSearchFilter
    @order = order
    @pagination = pagination
    @searchRequest = searchRequest
    @productID = productID
    @externalProductID = externalProductID
    @categories = categories
    @totalOnly = totalOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @includeGetItFastItems = includeGetItFastItems
    @storesFixedPrice = storesFixedPrice
    @paymentMethod = paymentMethod
    @granularityLevel = granularityLevel
    @expandSearch = expandSearch
    @lot = lot
    @adFormat = adFormat
    @quantity = quantity
    @quantityOperator = quantityOperator
    @sellerBusinessType = sellerBusinessType
    @digitalDelivery = digitalDelivery
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
    @charityID = charityID
    @localSearchPostalCode = localSearchPostalCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsResponseType
class GetSearchResultsResponseType
  @@schema_type = "GetSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["searchResultItemArray", ["SearchResultItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultItemArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["buyingGuideDetails", ["BuyingGuideDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideDetails")]],
    ["storeExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreExpansionArray")]],
    ["internationalExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalExpansionArray")]],
    ["filterRemovedExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FilterRemovedExpansionArray")]],
    ["allCategoriesExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllCategoriesExpansionArray")]],
    ["spellingSuggestion", ["SpellingSuggestionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SpellingSuggestion")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :searchResultItemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :buyingGuideDetails
  attr_accessor :storeExpansionArray
  attr_accessor :internationalExpansionArray
  attr_accessor :filterRemovedExpansionArray
  attr_accessor :allCategoriesExpansionArray
  attr_accessor :spellingSuggestion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, searchResultItemArray = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, categoryArray = nil, buyingGuideDetails = nil, storeExpansionArray = nil, internationalExpansionArray = nil, filterRemovedExpansionArray = nil, allCategoriesExpansionArray = nil, spellingSuggestion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @searchResultItemArray = searchResultItemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @buyingGuideDetails = buyingGuideDetails
    @storeExpansionArray = storeExpansionArray
    @internationalExpansionArray = internationalExpansionArray
    @filterRemovedExpansionArray = filterRemovedExpansionArray
    @allCategoriesExpansionArray = allCategoriesExpansionArray
    @spellingSuggestion = spellingSuggestion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsExpressRequestType
class GetSearchResultsExpressRequestType
  @@schema_type = "GetSearchResultsExpressRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["externalProductIDType", ["ExternalProductCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductIDType")]],
    ["externalProductIDValue", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductIDValue")]],
    ["productReferenceID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductReferenceID")]],
    ["departmentName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DepartmentName")]],
    ["aisleName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AisleName")]],
    ["productTypeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductTypeName")]],
    ["histogramSort", ["ExpressHistogramSortCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HistogramSort")]],
    ["itemSort", ["ExpressItemSortCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemSort")]],
    ["productSort", ["ExpressProductSortCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSort")]],
    ["highestPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighestPrice")]],
    ["lowestPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LowestPrice")]],
    ["condition", ["ConditionSelectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Condition")]],
    ["sellerID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerID")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["histogramDetails", ["ExpressDetailLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HistogramDetails")]],
    ["productDetails", ["ExpressDetailLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductDetails")]],
    ["itemDetails", ["ExpressDetailLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemDetails")]],
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :query
  attr_accessor :externalProductIDType
  attr_accessor :externalProductIDValue
  attr_accessor :productReferenceID
  attr_accessor :departmentName
  attr_accessor :aisleName
  attr_accessor :productTypeName
  attr_accessor :histogramSort
  attr_accessor :itemSort
  attr_accessor :productSort
  attr_accessor :highestPrice
  attr_accessor :lowestPrice
  attr_accessor :condition
  attr_accessor :sellerID
  attr_accessor :postalCode
  attr_accessor :histogramDetails
  attr_accessor :productDetails
  attr_accessor :itemDetails
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, query = nil, externalProductIDType = nil, externalProductIDValue = nil, productReferenceID = nil, departmentName = nil, aisleName = nil, productTypeName = nil, histogramSort = nil, itemSort = nil, productSort = nil, highestPrice = nil, lowestPrice = nil, condition = nil, sellerID = nil, postalCode = nil, histogramDetails = nil, productDetails = nil, itemDetails = nil, entriesPerPage = nil, pageNumber = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @query = query
    @externalProductIDType = externalProductIDType
    @externalProductIDValue = externalProductIDValue
    @productReferenceID = productReferenceID
    @departmentName = departmentName
    @aisleName = aisleName
    @productTypeName = productTypeName
    @histogramSort = histogramSort
    @itemSort = itemSort
    @productSort = productSort
    @highestPrice = highestPrice
    @lowestPrice = lowestPrice
    @condition = condition
    @sellerID = sellerID
    @postalCode = postalCode
    @histogramDetails = histogramDetails
    @productDetails = productDetails
    @itemDetails = itemDetails
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsExpressResponseType
class GetSearchResultsExpressResponseType
  @@schema_type = "GetSearchResultsExpressResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["histogram", ["DomainHistogramType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Histogram")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["productArray", ["ProductArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductArray")]],
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["hasMoreEntries", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreEntries")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :histogram
  attr_accessor :itemArray
  attr_accessor :productArray
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreEntries

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, histogram = nil, itemArray = nil, productArray = nil, entriesPerPage = nil, pageNumber = nil, hasMoreEntries = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @histogram = histogram
    @itemArray = itemArray
    @productArray = productArray
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
    @hasMoreEntries = hasMoreEntries
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsRequestType
class GetSellerEventsRequestType
  @@schema_type = "GetSellerEventsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["startTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeFrom")]],
    ["startTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeTo")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["newItemFilter", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewItemFilter")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :newItemFilter
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, userID = nil, startTimeFrom = nil, startTimeTo = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, modTimeTo = nil, newItemFilter = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @userID = userID
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @newItemFilter = newItemFilter
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsResponseType
class GetSellerEventsResponseType
  @@schema_type = "GetSellerEventsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["timeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeTo")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :timeTo
  attr_accessor :itemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, timeTo = nil, itemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @timeTo = timeTo
    @itemArray = itemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListRequestType
class GetSellerListRequestType
  @@schema_type = "GetSellerListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["motorsDealerUsers", ["UserIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsDealerUsers")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["sort", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["startTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeFrom")]],
    ["startTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["granularityLevel", ["GranularityLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GranularityLevel")]],
    ["sKUArray", ["SKUArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SKUArray")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :motorsDealerUsers
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :sort
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :pagination
  attr_accessor :granularityLevel
  attr_accessor :sKUArray
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, userID = nil, motorsDealerUsers = nil, endTimeFrom = nil, endTimeTo = nil, sort = nil, startTimeFrom = nil, startTimeTo = nil, pagination = nil, granularityLevel = nil, sKUArray = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @userID = userID
    @motorsDealerUsers = motorsDealerUsers
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @sort = sort
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @pagination = pagination
    @granularityLevel = granularityLevel
    @sKUArray = sKUArray
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListResponseType
class GetSellerListResponseType
  @@schema_type = "GetSellerListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedItemCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedItemCountActual")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedItemCountActual
  attr_accessor :seller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreItems = nil, itemArray = nil, itemsPerPage = nil, pageNumber = nil, returnedItemCountActual = nil, seller = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemArray = itemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @returnedItemCountActual = returnedItemCountActual
    @seller = seller
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsRequestType
class GetSellerPaymentsRequestType
  @@schema_type = "GetSellerPaymentsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paymentStatus", ["RCSPaymentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentStatus")]],
    ["paymentTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentTimeFrom")]],
    ["paymentTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :paymentStatus
  attr_accessor :paymentTimeFrom
  attr_accessor :paymentTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, paymentStatus = nil, paymentTimeFrom = nil, paymentTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @paymentStatus = paymentStatus
    @paymentTimeFrom = paymentTimeFrom
    @paymentTimeTo = paymentTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsResponseType
class GetSellerPaymentsResponseType
  @@schema_type = "GetSellerPaymentsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMorePayments", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMorePayments")]],
    ["sellerPayment", ["SellerPaymentType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPayment")]],
    ["paymentsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedPaymentCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedPaymentCountActual")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMorePayments
  attr_accessor :sellerPayment
  attr_accessor :paymentsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedPaymentCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMorePayments = nil, sellerPayment = [], paymentsPerPage = nil, pageNumber = nil, returnedPaymentCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMorePayments = hasMorePayments
    @sellerPayment = sellerPayment
    @paymentsPerPage = paymentsPerPage
    @pageNumber = pageNumber
    @returnedPaymentCountActual = returnedPaymentCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsRequestType
class GetSellerTransactionsRequestType
  @@schema_type = "GetSellerTransactionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["includeFinalValueFee", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFinalValueFee")]],
    ["includeContainingOrder", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeContainingOrder")]],
    ["sKUArray", ["SKUArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SKUArray")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder
  attr_accessor :sKUArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil, sKUArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
    @sKUArray = sKUArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsResponseType
class GetSellerTransactionsResponseType
  @@schema_type = "GetSellerTransactionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreTransactions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreTransactions")]],
    ["transactionsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedTransactionCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedTransactionCountActual")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :seller
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, seller = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @seller = seller
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreRequestType
class GetStoreRequestType
  @@schema_type = "GetStoreRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryStructureOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryStructureOnly")]],
    ["rootCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RootCategoryID")]],
    ["levelLimit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LevelLimit")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryStructureOnly
  attr_accessor :rootCategoryID
  attr_accessor :levelLimit

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryStructureOnly = nil, rootCategoryID = nil, levelLimit = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryStructureOnly = categoryStructureOnly
    @rootCategoryID = rootCategoryID
    @levelLimit = levelLimit
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreResponseType
class GetStoreResponseType
  @@schema_type = "GetStoreResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["store", ["StoreType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Store")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, store = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusRequestType
class GetStoreCategoryUpdateStatusRequestType
  @@schema_type = "GetStoreCategoryUpdateStatusRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["taskID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaskID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :taskID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, taskID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @taskID = taskID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusResponseType
class GetStoreCategoryUpdateStatusResponseType
  @@schema_type = "GetStoreCategoryUpdateStatusResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["status", ["TaskStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageRequestType
class GetStoreCustomPageRequestType
  @@schema_type = "GetStoreCustomPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :pageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, pageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @pageID = pageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageResponseType
class GetStoreCustomPageResponseType
  @@schema_type = "GetStoreCustomPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPageArray", ["StoreCustomPageArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPageArray")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :customPageArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, customPageArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @customPageArray = customPageArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsRequestType
class GetStoreOptionsRequestType
  @@schema_type = "GetStoreOptionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsResponseType
class GetStoreOptionsResponseType
  @@schema_type = "GetStoreOptionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["basicThemeArray", ["StoreThemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BasicThemeArray")]],
    ["advancedThemeArray", ["StoreThemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdvancedThemeArray")]],
    ["logoArray", ["StoreLogoArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoArray")]],
    ["subscriptionArray", ["StoreSubscriptionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionArray")]],
    ["maxCategories", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxCategories")]],
    ["maxCategoryLevels", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxCategoryLevels")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :basicThemeArray
  attr_accessor :advancedThemeArray
  attr_accessor :logoArray
  attr_accessor :subscriptionArray
  attr_accessor :maxCategories
  attr_accessor :maxCategoryLevels

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, basicThemeArray = nil, advancedThemeArray = nil, logoArray = nil, subscriptionArray = nil, maxCategories = nil, maxCategoryLevels = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @basicThemeArray = basicThemeArray
    @advancedThemeArray = advancedThemeArray
    @logoArray = logoArray
    @subscriptionArray = subscriptionArray
    @maxCategories = maxCategories
    @maxCategoryLevels = maxCategoryLevels
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesRequestType
class GetStorePreferencesRequestType
  @@schema_type = "GetStorePreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesResponseType
class GetStorePreferencesResponseType
  @@schema_type = "GetStorePreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["storePreferences", ["StorePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorePreferences")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, storePreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesRequestType
class GetSuggestedCategoriesRequestType
  @@schema_type = "GetSuggestedCategoriesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesResponseType
class GetSuggestedCategoriesResponseType
  @@schema_type = "GetSuggestedCategoriesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["suggestedCategoryArray", ["SuggestedCategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedCategoryArray")]],
    ["categoryCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryCount")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :suggestedCategoryArray
  attr_accessor :categoryCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, suggestedCategoryArray = nil, categoryCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @suggestedCategoryArray = suggestedCategoryArray
    @categoryCount = categoryCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableRequestType
class GetTaxTableRequestType
  @@schema_type = "GetTaxTableRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableResponseType
class GetTaxTableResponseType
  @@schema_type = "GetTaxTableResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["lastUpdateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastUpdateTime")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :lastUpdateTime
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, lastUpdateTime = nil, taxTable = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @lastUpdateTime = lastUpdateTime
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserRequestType
class GetUserRequestType
  @@schema_type = "GetUserRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["includeExpressRequirements", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeExpressRequirements")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :userID
  attr_accessor :includeExpressRequirements

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, userID = nil, includeExpressRequirements = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @userID = userID
    @includeExpressRequirements = includeExpressRequirements
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserResponseType
class GetUserResponseType
  @@schema_type = "GetUserResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["user", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "User")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :user

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, user = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @user = user
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsRequestType
class GetUserContactDetailsRequestType
  @@schema_type = "GetUserContactDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["contactID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContactID")]],
    ["requesterID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RequesterID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :contactID
  attr_accessor :requesterID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, contactID = nil, requesterID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @contactID = contactID
    @requesterID = requesterID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsResponseType
class GetUserContactDetailsResponseType
  @@schema_type = "GetUserContactDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["contactAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContactAddress")]],
    ["registrationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationDate")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :contactAddress
  attr_accessor :registrationDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, userID = nil, contactAddress = nil, registrationDate = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @userID = userID
    @contactAddress = contactAddress
    @registrationDate = registrationDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesRequestType
class GetUserDisputesRequestType
  @@schema_type = "GetUserDisputesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeFilterType", ["DisputeFilterTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterType")]],
    ["disputeSortType", ["DisputeSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeSortType")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :disputeFilterType
  attr_accessor :disputeSortType
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, disputeFilterType = nil, disputeSortType = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @disputeFilterType = disputeFilterType
    @disputeSortType = disputeSortType
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesResponseType
class GetUserDisputesResponseType
  @@schema_type = "GetUserDisputesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["startingDisputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartingDisputeID")]],
    ["endingDisputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndingDisputeID")]],
    ["disputeArray", ["DisputeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["disputeFilterCount", ["DisputeFilterCountType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterCount")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :startingDisputeID
  attr_accessor :endingDisputeID
  attr_accessor :disputeArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :disputeFilterCount
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, startingDisputeID = nil, endingDisputeID = nil, disputeArray = nil, itemsPerPage = nil, pageNumber = nil, disputeFilterCount = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @startingDisputeID = startingDisputeID
    @endingDisputeID = endingDisputeID
    @disputeArray = disputeArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @disputeFilterCount = disputeFilterCount
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesRequestType
class GetUserPreferencesRequestType
  @@schema_type = "GetUserPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["showBidderNoticePreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowBidderNoticePreferences")]],
    ["showCombinedPaymentPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowCombinedPaymentPreferences")]],
    ["showCrossPromotionPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowCrossPromotionPreferences")]],
    ["showSellerPaymentPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowSellerPaymentPreferences")]],
    ["showEndOfAuctionEmailPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowEndOfAuctionEmailPreferences")]],
    ["showSellerFavoriteItemPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowSellerFavoriteItemPreferences")]],
    ["showeBxOptInPreference", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShoweBxOptInPreference")]],
    ["showProStoresPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowProStoresPreferences")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :showBidderNoticePreferences
  attr_accessor :showCombinedPaymentPreferences
  attr_accessor :showCrossPromotionPreferences
  attr_accessor :showSellerPaymentPreferences
  attr_accessor :showEndOfAuctionEmailPreferences
  attr_accessor :showSellerFavoriteItemPreferences
  attr_accessor :showeBxOptInPreference
  attr_accessor :showProStoresPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, showBidderNoticePreferences = nil, showCombinedPaymentPreferences = nil, showCrossPromotionPreferences = nil, showSellerPaymentPreferences = nil, showEndOfAuctionEmailPreferences = nil, showSellerFavoriteItemPreferences = nil, showeBxOptInPreference = nil, showProStoresPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @showBidderNoticePreferences = showBidderNoticePreferences
    @showCombinedPaymentPreferences = showCombinedPaymentPreferences
    @showCrossPromotionPreferences = showCrossPromotionPreferences
    @showSellerPaymentPreferences = showSellerPaymentPreferences
    @showEndOfAuctionEmailPreferences = showEndOfAuctionEmailPreferences
    @showSellerFavoriteItemPreferences = showSellerFavoriteItemPreferences
    @showeBxOptInPreference = showeBxOptInPreference
    @showProStoresPreferences = showProStoresPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesResponseType
class GetUserPreferencesResponseType
  @@schema_type = "GetUserPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderNoticePreferences", ["BidderNoticePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderNoticePreferences")]],
    ["combinedPaymentPreferences", ["CombinedPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPreferences")]],
    ["crossPromotionPreferences", ["CrossPromotionPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionPreferences")]],
    ["sellerPaymentPreferences", ["SellerPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentPreferences")]],
    ["sellerFavoriteItemPreferences", ["SellerFavoriteItemPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerFavoriteItemPreferences")]],
    ["endOfAuctionEmailPreferences", ["EndOfAuctionEmailPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndOfAuctionEmailPreferences")]],
    ["eBxOptInPreference", "EBxOptInPreferenceType"],
    ["expressPreferences", ["ExpressPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressPreferences")]],
    ["proStoresPreference", ["ProStoresCheckoutPreferenceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProStoresPreference")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :eBxOptInPreference
  attr_accessor :expressPreferences
  attr_accessor :proStoresPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, eBxOptInPreference = nil, expressPreferences = nil, proStoresPreference = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @eBxOptInPreference = eBxOptInPreference
    @expressPreferences = expressPreferences
    @proStoresPreference = proStoresPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostRequestType
class GetWantItNowPostRequestType
  @@schema_type = "GetWantItNowPostRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostResponseType
class GetWantItNowPostResponseType
  @@schema_type = "GetWantItNowPostResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["wantItNowPost", ["WantItNowPostType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPost")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, wantItNowPost = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @wantItNowPost = wantItNowPost
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsRequestType
class GetWantItNowSearchResultsRequestType
  @@schema_type = "GetWantItNowSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["searchInDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchInDescription")]],
    ["searchWorldwide", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchWorldwide")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :query
  attr_accessor :searchInDescription
  attr_accessor :searchWorldwide
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, categoryID = nil, query = nil, searchInDescription = nil, searchWorldwide = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @categoryID = categoryID
    @query = query
    @searchInDescription = searchInDescription
    @searchWorldwide = searchWorldwide
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsResponseType
class GetWantItNowSearchResultsResponseType
  @@schema_type = "GetWantItNowSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["wantItNowPostArray", ["WantItNowPostArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPostArray")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPostArray
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, wantItNowPostArray = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @wantItNowPostArray = wantItNowPostArray
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsRequestType
class GeteBayDetailsRequestType
  @@schema_type = "GeteBayDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["detailName", ["DetailNameCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailName")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :detailName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, detailName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @detailName = detailName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsResponseType
class GeteBayDetailsResponseType
  @@schema_type = "GeteBayDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["countryDetails", ["CountryDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryDetails")]],
    ["currencyDetails", ["CurrencyDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrencyDetails")]],
    ["dispatchTimeMaxDetails", ["DispatchTimeMaxDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DispatchTimeMaxDetails")]],
    ["paymentOptionDetails", ["PaymentOptionDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOptionDetails")]],
    ["regionDetails", ["RegionDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionDetails")]],
    ["shippingLocationDetails", ["ShippingLocationDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingLocationDetails")]],
    ["shippingServiceDetails", ["ShippingServiceDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceDetails")]],
    ["siteDetails", ["SiteDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteDetails")]],
    ["taxJurisdiction", ["TaxJurisdictionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxJurisdiction")]],
    ["uRLDetails", ["URLDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLDetails")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :countryDetails
  attr_accessor :currencyDetails
  attr_accessor :dispatchTimeMaxDetails
  attr_accessor :paymentOptionDetails
  attr_accessor :regionDetails
  attr_accessor :shippingLocationDetails
  attr_accessor :shippingServiceDetails
  attr_accessor :siteDetails
  attr_accessor :taxJurisdiction
  attr_accessor :uRLDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, countryDetails = [], currencyDetails = [], dispatchTimeMaxDetails = [], paymentOptionDetails = [], regionDetails = [], shippingLocationDetails = [], shippingServiceDetails = [], siteDetails = [], taxJurisdiction = [], uRLDetails = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @countryDetails = countryDetails
    @currencyDetails = currencyDetails
    @dispatchTimeMaxDetails = dispatchTimeMaxDetails
    @paymentOptionDetails = paymentOptionDetails
    @regionDetails = regionDetails
    @shippingLocationDetails = shippingLocationDetails
    @shippingServiceDetails = shippingServiceDetails
    @siteDetails = siteDetails
    @taxJurisdiction = taxJurisdiction
    @uRLDetails = uRLDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeRequestType
class GeteBayOfficialTimeRequestType
  @@schema_type = "GeteBayOfficialTimeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeResponseType
class GeteBayOfficialTimeResponseType
  @@schema_type = "GeteBayOfficialTimeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundRequestType
class IssueRefundRequestType
  @@schema_type = "IssueRefundRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["refundReason", ["RefundReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundReason")]],
    ["refundType", ["RefundTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundType")]],
    ["refundAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundAmount")]],
    ["refundMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundMessage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :refundReason
  attr_accessor :refundType
  attr_accessor :refundAmount
  attr_accessor :refundMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, transactionID = nil, refundReason = nil, refundType = nil, refundAmount = nil, refundMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @refundReason = refundReason
    @refundType = refundType
    @refundAmount = refundAmount
    @refundMessage = refundMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundResponseType
class IssueRefundResponseType
  @@schema_type = "IssueRefundResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["refundFromSeller", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundFromSeller")]],
    ["totalRefundToBuyer", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalRefundToBuyer")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, refundFromSeller = nil, totalRefundToBuyer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackRequestType
class LeaveFeedbackRequestType
  @@schema_type = "LeaveFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["targetUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUser")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :transactionID
  attr_accessor :targetUser

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, commentText = nil, commentType = nil, transactionID = nil, targetUser = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @commentText = commentText
    @commentType = commentType
    @transactionID = transactionID
    @targetUser = targetUser
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackResponseType
class LeaveFeedbackResponseType
  @@schema_type = "LeaveFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, feedbackID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferRequestType
class PlaceOfferRequestType
  @@schema_type = "PlaceOfferRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["offer", ["OfferType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Offer")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["blockOnWarning", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BlockOnWarning")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :offer
  attr_accessor :itemID
  attr_accessor :blockOnWarning

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, offer = nil, itemID = nil, blockOnWarning = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @offer = offer
    @itemID = itemID
    @blockOnWarning = blockOnWarning
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferResponseType
class PlaceOfferResponseType
  @@schema_type = "PlaceOfferResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["sellingStatus", ["SellingStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingStatus")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :sellingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, sellingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @sellingStatus = sellingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemRequestType
class RelistItemRequestType
  @@schema_type = "RelistItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["deletedField", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeletedField")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :modifiedFields
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil, modifiedFields = [], deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
    @modifiedFields = modifiedFields
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemResponseType
class RelistItemResponseType
  @@schema_type = "RelistItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, startTime = nil, endTime = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListRequestType
class RemoveFromWatchListRequestType
  @@schema_type = "RemoveFromWatchListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["removeAllItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RemoveAllItems")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :removeAllItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = [], removeAllItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @removeAllItems = removeAllItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListResponseType
class RemoveFromWatchListResponseType
  @@schema_type = "RemoveFromWatchListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchListCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListCount")]],
    ["watchListMaximum", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListMaximum")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferRequestType
class RespondToBestOfferRequestType
  @@schema_type = "RespondToBestOfferRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["bestOfferID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["action", ["BestOfferActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["sellerResponse", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerResponse")]],
    ["counterOfferPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CounterOfferPrice")]],
    ["counterOfferQuantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CounterOfferQuantity")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :action
  attr_accessor :sellerResponse
  attr_accessor :counterOfferPrice
  attr_accessor :counterOfferQuantity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, bestOfferID = [], action = nil, sellerResponse = nil, counterOfferPrice = nil, counterOfferQuantity = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @action = action
    @sellerResponse = sellerResponse
    @counterOfferPrice = counterOfferPrice
    @counterOfferQuantity = counterOfferQuantity
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferResponseType
class RespondToBestOfferResponseType
  @@schema_type = "RespondToBestOfferResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["respondToBestOffer", ["BestOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RespondToBestOffer")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :respondToBestOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, respondToBestOffer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @respondToBestOffer = respondToBestOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackRequestType
class RespondToFeedbackRequestType
  @@schema_type = "RespondToFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["targetUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUserID")]],
    ["responseType", ["FeedbackResponseCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseType")]],
    ["responseText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseText")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :targetUserID
  attr_accessor :responseType
  attr_accessor :responseText

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, feedbackID = nil, itemID = nil, transactionID = nil, targetUserID = nil, responseType = nil, responseText = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @targetUserID = targetUserID
    @responseType = responseType
    @responseText = responseText
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackResponseType
class RespondToFeedbackResponseType
  @@schema_type = "RespondToFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostRequestType
class RespondToWantItNowPostRequestType
  @@schema_type = "RespondToWantItNowPostRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostResponseType
class RespondToWantItNowPostResponseType
  @@schema_type = "RespondToWantItNowPostResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusRequestType
class ReviseCheckoutStatusRequestType
  @@schema_type = "ReviseCheckoutStatusRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["paymentMethodUsed", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethodUsed")]],
    ["checkoutStatus", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["shippingService", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["checkoutMethod", ["CheckoutMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutMethod")]],
    ["insuranceType", ["InsuranceSelectedCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceType")]],
    ["paymentStatus", ["RCSPaymentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentStatus")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["buyerID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerID")]],
    ["shippingInsuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingInsuranceCost")]],
    ["salesTax", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["shippingCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCost")]],
    ["encryptedID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EncryptedID")]],
    ["externalTransaction", ["ExternalTransactionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["multipleSellerPaymentID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MultipleSellerPaymentID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :amountPaid
  attr_accessor :paymentMethodUsed
  attr_accessor :checkoutStatus
  attr_accessor :shippingService
  attr_accessor :shippingIncludedInTax
  attr_accessor :checkoutMethod
  attr_accessor :insuranceType
  attr_accessor :paymentStatus
  attr_accessor :adjustmentAmount
  attr_accessor :shippingAddress
  attr_accessor :buyerID
  attr_accessor :shippingInsuranceCost
  attr_accessor :salesTax
  attr_accessor :shippingCost
  attr_accessor :encryptedID
  attr_accessor :externalTransaction
  attr_accessor :multipleSellerPaymentID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, transactionID = nil, orderID = nil, amountPaid = nil, paymentMethodUsed = nil, checkoutStatus = nil, shippingService = nil, shippingIncludedInTax = nil, checkoutMethod = nil, insuranceType = nil, paymentStatus = nil, adjustmentAmount = nil, shippingAddress = nil, buyerID = nil, shippingInsuranceCost = nil, salesTax = nil, shippingCost = nil, encryptedID = nil, externalTransaction = nil, multipleSellerPaymentID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @amountPaid = amountPaid
    @paymentMethodUsed = paymentMethodUsed
    @checkoutStatus = checkoutStatus
    @shippingService = shippingService
    @shippingIncludedInTax = shippingIncludedInTax
    @checkoutMethod = checkoutMethod
    @insuranceType = insuranceType
    @paymentStatus = paymentStatus
    @adjustmentAmount = adjustmentAmount
    @shippingAddress = shippingAddress
    @buyerID = buyerID
    @shippingInsuranceCost = shippingInsuranceCost
    @salesTax = salesTax
    @shippingCost = shippingCost
    @encryptedID = encryptedID
    @externalTransaction = externalTransaction
    @multipleSellerPaymentID = multipleSellerPaymentID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusResponseType
class ReviseCheckoutStatusResponseType
  @@schema_type = "ReviseCheckoutStatusResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemRequestType
class ReviseItemRequestType
  @@schema_type = "ReviseItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["deletedField", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeletedField")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :modifiedFields
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil, modifiedFields = [], deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
    @modifiedFields = modifiedFields
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemResponseType
class ReviseItemResponseType
  @@schema_type = "ReviseItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseLiveAuctionItemRequestType
class ReviseLiveAuctionItemRequestType
  @@schema_type = "ReviseLiveAuctionItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["deletedField", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeletedField")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :modifiedFields
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil, modifiedFields = [], deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
    @modifiedFields = modifiedFields
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseLiveAuctionItemResponseType
class ReviseLiveAuctionItemResponseType
  @@schema_type = "ReviseLiveAuctionItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesRequestType
class ReviseMyMessagesRequestType
  @@schema_type = "ReviseMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["flagged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Flagged")]],
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :messageIDs
  attr_accessor :alertIDs
  attr_accessor :read
  attr_accessor :flagged
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, messageIDs = nil, alertIDs = nil, read = nil, flagged = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @messageIDs = messageIDs
    @alertIDs = alertIDs
    @read = read
    @flagged = flagged
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesResponseType
class ReviseMyMessagesResponseType
  @@schema_type = "ReviseMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersRequestType
class ReviseMyMessagesFoldersRequestType
  @@schema_type = "ReviseMyMessagesFoldersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["operation", ["MyMessagesFolderOperationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Operation")]],
    ["folderID", ["SOAP::SOAPLong[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :operation
  attr_accessor :folderID
  attr_accessor :folderName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, operation = nil, folderID = [], folderName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @operation = operation
    @folderID = folderID
    @folderName = folderName
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersResponseType
class ReviseMyMessagesFoldersResponseType
  @@schema_type = "ReviseMyMessagesFoldersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeRequestType
class SellerReverseDisputeRequestType
  @@schema_type = "SellerReverseDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["disputeResolutionReason", ["DisputeResolutionReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionReason")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :disputeResolutionReason

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, disputeID = nil, disputeResolutionReason = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @disputeID = disputeID
    @disputeResolutionReason = disputeResolutionReason
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeResponseType
class SellerReverseDisputeResponseType
  @@schema_type = "SellerReverseDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceRequestType
class SendInvoiceRequestType
  @@schema_type = "SendInvoiceRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["internationalShippingServiceOptions", ["InternationalShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalShippingServiceOptions")]],
    ["shippingServiceOptions", ["ShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceOptions")]],
    ["salesTax", ["SalesTaxType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["insuranceFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceFee")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["payPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalEmailAddress")]],
    ["checkoutInstructions", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutInstructions")]],
    ["emailCopyToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCopyToSeller")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :internationalShippingServiceOptions
  attr_accessor :shippingServiceOptions
  attr_accessor :salesTax
  attr_accessor :insuranceOption
  attr_accessor :insuranceFee
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :checkoutInstructions
  attr_accessor :emailCopyToSeller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, transactionID = nil, orderID = nil, internationalShippingServiceOptions = [], shippingServiceOptions = [], salesTax = nil, insuranceOption = nil, insuranceFee = nil, paymentMethods = [], payPalEmailAddress = nil, checkoutInstructions = nil, emailCopyToSeller = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @internationalShippingServiceOptions = internationalShippingServiceOptions
    @shippingServiceOptions = shippingServiceOptions
    @salesTax = salesTax
    @insuranceOption = insuranceOption
    @insuranceFee = insuranceFee
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @checkoutInstructions = checkoutInstructions
    @emailCopyToSeller = emailCopyToSeller
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceResponseType
class SendInvoiceResponseType
  @@schema_type = "SendInvoiceResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesRequestType
class SetNotificationPreferencesRequestType
  @@schema_type = "SetNotificationPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDeliveryPreferences", ["ApplicationDeliveryPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDeliveryPreferences")]],
    ["userDeliveryPreferenceArray", ["NotificationEnableArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDeliveryPreferenceArray")]],
    ["userData", ["NotificationUserDataType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserData")]],
    ["eventProperty", ["NotificationEventPropertyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventProperty")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesResponseType
class SetNotificationPreferencesResponseType
  @@schema_type = "SetNotificationPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsRequestType
class SetPictureManagerDetailsRequestType
  @@schema_type = "SetPictureManagerDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pictureManagerDetails", ["PictureManagerDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetails")]],
    ["action", ["PictureManagerActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, pictureManagerDetails = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsResponseType
class SetPictureManagerDetailsResponseType
  @@schema_type = "SetPictureManagerDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionRulesRequestType
class SetPromotionRulesRequestType
  @@schema_type = "SetPromotionRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["operationType", ["OperationTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OperationType")]],
    ["promotionRuleArray", ["PromotionRuleArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRuleArray")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :operationType
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, operationType = nil, promotionRuleArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @operationType = operationType
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionRulesResponseType
class SetPromotionRulesResponseType
  @@schema_type = "SetPromotionRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetReturnURLRequestType
class SetReturnURLRequestType
  @@schema_type = "SetReturnURLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["authenticationEntry", ["AuthenticationEntryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntry")]],
    ["applicationDisplayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDisplayName")]],
    ["action", ["ModifyActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :authenticationEntry
  attr_accessor :applicationDisplayName
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, authenticationEntry = nil, applicationDisplayName = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @authenticationEntry = authenticationEntry
    @applicationDisplayName = applicationDisplayName
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetReturnURLResponseType
class SetReturnURLResponseType
  @@schema_type = "SetReturnURLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreRequestType
class SetStoreRequestType
  @@schema_type = "SetStoreRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["store", ["StoreType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Store")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, store = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreResponseType
class SetStoreResponseType
  @@schema_type = "SetStoreResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesRequestType
class SetStoreCategoriesRequestType
  @@schema_type = "SetStoreCategoriesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["action", ["StoreCategoryUpdateActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["itemDestinationCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemDestinationCategoryID")]],
    ["destinationParentCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DestinationParentCategoryID")]],
    ["storeCategories", ["StoreCustomCategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategories")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :action
  attr_accessor :itemDestinationCategoryID
  attr_accessor :destinationParentCategoryID
  attr_accessor :storeCategories

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, action = nil, itemDestinationCategoryID = nil, destinationParentCategoryID = nil, storeCategories = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @action = action
    @itemDestinationCategoryID = itemDestinationCategoryID
    @destinationParentCategoryID = destinationParentCategoryID
    @storeCategories = storeCategories
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesResponseType
class SetStoreCategoriesResponseType
  @@schema_type = "SetStoreCategoriesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["taskID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaskID")]],
    ["status", ["TaskStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :taskID
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, taskID = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @taskID = taskID
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageRequestType
class SetStoreCustomPageRequestType
  @@schema_type = "SetStoreCustomPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPage", ["StoreCustomPageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, customPage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageResponseType
class SetStoreCustomPageResponseType
  @@schema_type = "SetStoreCustomPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPage", ["StoreCustomPageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, customPage = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesRequestType
class SetStorePreferencesRequestType
  @@schema_type = "SetStorePreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["storePreferences", ["StorePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorePreferences")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, storePreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesResponseType
class SetStorePreferencesResponseType
  @@schema_type = "SetStorePreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableRequestType
class SetTaxTableRequestType
  @@schema_type = "SetTaxTableRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, taxTable = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableResponseType
class SetTaxTableResponseType
  @@schema_type = "SetTaxTableResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesRequestType
class SetUserNotesRequestType
  @@schema_type = "SetUserNotesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["action", ["SetUserNotesActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["noteText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NoteText")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :action
  attr_accessor :noteText

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, itemID = nil, action = nil, noteText = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @itemID = itemID
    @action = action
    @noteText = noteText
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesResponseType
class SetUserNotesResponseType
  @@schema_type = "SetUserNotesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesRequestType
class SetUserPreferencesRequestType
  @@schema_type = "SetUserPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderNoticePreferences", ["BidderNoticePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderNoticePreferences")]],
    ["combinedPaymentPreferences", ["CombinedPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPreferences")]],
    ["crossPromotionPreferences", ["CrossPromotionPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionPreferences")]],
    ["sellerPaymentPreferences", ["SellerPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentPreferences")]],
    ["sellerFavoriteItemPreferences", ["SellerFavoriteItemPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerFavoriteItemPreferences")]],
    ["endOfAuctionEmailPreferences", ["EndOfAuctionEmailPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndOfAuctionEmailPreferences")]],
    ["eBxOptInPreference", "EBxOptInPreferenceType"],
    ["expressPreferences", ["ExpressPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressPreferences")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :eBxOptInPreference
  attr_accessor :expressPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, eBxOptInPreference = nil, expressPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @eBxOptInPreference = eBxOptInPreference
    @expressPreferences = expressPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesResponseType
class SetUserPreferencesResponseType
  @@schema_type = "SetUserPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputRequestType
class ValidateChallengeInputRequestType
  @@schema_type = "ValidateChallengeInputRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["challengeToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChallengeToken")]],
    ["userInput", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserInput")]],
    ["keepTokenValid", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "KeepTokenValid")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :userInput
  attr_accessor :keepTokenValid

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, challengeToken = nil, userInput = nil, keepTokenValid = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @userInput = userInput
    @keepTokenValid = keepTokenValid
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputResponseType
class ValidateChallengeInputResponseType
  @@schema_type = "ValidateChallengeInputResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["validToken", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValidToken")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :validToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, validToken = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @validToken = validToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationRequestType
class ValidateTestUserRegistrationRequestType
  @@schema_type = "ValidateTestUserRegistrationRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["registrationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationDate")]],
    ["subscribeSA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSA")]],
    ["subscribeSAPro", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSAPro")]],
    ["subscribeSM", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSM")]],
    ["subscribeSMPro", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSMPro")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :feedbackScore
  attr_accessor :registrationDate
  attr_accessor :subscribeSA
  attr_accessor :subscribeSAPro
  attr_accessor :subscribeSM
  attr_accessor :subscribeSMPro

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, feedbackScore = nil, registrationDate = nil, subscribeSA = nil, subscribeSAPro = nil, subscribeSM = nil, subscribeSMPro = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @feedbackScore = feedbackScore
    @registrationDate = registrationDate
    @subscribeSA = subscribeSA
    @subscribeSAPro = subscribeSAPro
    @subscribeSM = subscribeSM
    @subscribeSMPro = subscribeSMPro
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationResponseType
class ValidateTestUserRegistrationResponseType
  @@schema_type = "ValidateTestUserRegistrationResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemRequestType
class VerifyAddItemRequestType
  @@schema_type = "VerifyAddItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["includeExpressRequirements", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeExpressRequirements")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :includeExpressRequirements
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, item = nil, includeExpressRequirements = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @item = item
    @includeExpressRequirements = includeExpressRequirements
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemResponseType
class VerifyAddItemResponseType
  @@schema_type = "VerifyAddItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["expressListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressListing")]],
    ["expressItemRequirements", ["ExpressItemRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressItemRequirements")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :expressListing
  attr_accessor :expressItemRequirements
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, expressListing = nil, expressItemRequirements = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @expressListing = expressListing
    @expressItemRequirements = expressItemRequirements
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemRequestType
class VerifyAddSecondChanceItemRequestType
  @@schema_type = "VerifyAddSecondChanceItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["recipientBidderUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientBidderUserID")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["copyEmailToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmailToSeller")]],
    ["duration", ["SecondChanceOfferDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["sellerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerMessage")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :copyEmailToSeller
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :site
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil, recipientBidderUserID = nil, buyItNowPrice = nil, copyEmailToSeller = nil, duration = nil, itemID = nil, site = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @copyEmailToSeller = copyEmailToSeller
    @duration = duration
    @itemID = itemID
    @site = site
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemResponseType
class VerifyAddSecondChanceItemResponseType
  @@schema_type = "VerifyAddSecondChanceItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, fees = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @fees = fees
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractRequestType
class AbstractRequestType
  @@schema_type = "AbstractRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["warningLevel", ["WarningLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WarningLevel")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :warningLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, warningLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @warningLevel = warningLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractResponseType
class AbstractResponseType
  @@schema_type = "AbstractResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CustomSecurityHeaderType
class CustomSecurityHeaderType
  @@schema_type = "CustomSecurityHeaderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["credentials", ["UserIdPasswordType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Credentials")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationWarning
  attr_accessor :credentials
  attr_accessor :notificationSignature
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayAuthToken = nil, hardExpirationWarning = nil, credentials = nil, notificationSignature = nil)
    @eBayAuthToken = eBayAuthToken
    @hardExpirationWarning = hardExpirationWarning
    @credentials = credentials
    @notificationSignature = notificationSignature
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterCountType
class DisputeFilterCountType
  @@schema_type = "DisputeFilterCountType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeFilterType", ["DisputeFilterTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterType")]],
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :disputeFilterType
  attr_accessor :totalAvailable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeFilterType = nil, totalAvailable = nil)
    @disputeFilterType = disputeFilterType
    @totalAvailable = totalAvailable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageType
class DisputeMessageType
  @@schema_type = "DisputeMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["messageID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["messageSource", ["DisputeMessageSourceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageSource")]],
    ["messageCreationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageCreationTime")]],
    ["messageText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageText")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :messageID
  attr_accessor :messageSource
  attr_accessor :messageCreationTime
  attr_accessor :messageText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageID = nil, messageSource = nil, messageCreationTime = nil, messageText = nil)
    @messageID = messageID
    @messageSource = messageSource
    @messageCreationTime = messageCreationTime
    @messageText = messageText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionType
class DisputeResolutionType
  @@schema_type = "DisputeResolutionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeResolutionRecordType", ["DisputeResolutionRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionRecordType")]],
    ["disputeResolutionReason", ["DisputeResolutionReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionReason")]],
    ["resolutionTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :disputeResolutionRecordType
  attr_accessor :disputeResolutionReason
  attr_accessor :resolutionTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeResolutionRecordType = nil, disputeResolutionReason = nil, resolutionTime = nil)
    @disputeResolutionRecordType = disputeResolutionRecordType
    @disputeResolutionReason = disputeResolutionReason
    @resolutionTime = resolutionTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DuplicateInvocationDetailsType
class DuplicateInvocationDetailsType
  @@schema_type = "DuplicateInvocationDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["duplicateInvocationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationID")]],
    ["status", ["InvocationStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["invocationTrackingID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationTrackingID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :duplicateInvocationID
  attr_accessor :status
  attr_accessor :invocationTrackingID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duplicateInvocationID = nil, status = nil, invocationTrackingID = nil)
    @duplicateInvocationID = duplicateInvocationID
    @status = status
    @invocationTrackingID = invocationTrackingID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorParameterType
class ErrorParameterType
  @@schema_type = "ErrorParameterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "ParamID") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_ParamID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "ParamID")]
  end

  def xmlattr_ParamID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "ParamID")] = value
  end

  def initialize(value = nil)
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorType
class ErrorType
  @@schema_type = "ErrorType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shortMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShortMessage")]],
    ["longMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LongMessage")]],
    ["errorCode", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCode")]],
    ["userDisplayHint", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDisplayHint")]],
    ["severityCode", ["SeverityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SeverityCode")]],
    ["errorParameters", ["ErrorParameterType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorParameters")]],
    ["errorClassification", ["ErrorClassificationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorClassification")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :errorCode
  attr_accessor :userDisplayHint
  attr_accessor :severityCode
  attr_accessor :errorParameters
  attr_accessor :errorClassification
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shortMessage = nil, longMessage = nil, errorCode = nil, userDisplayHint = nil, severityCode = nil, errorParameters = [], errorClassification = nil)
    @shortMessage = shortMessage
    @longMessage = longMessage
    @errorCode = errorCode
    @userDisplayHint = userDisplayHint
    @severityCode = severityCode
    @errorParameters = errorParameters
    @errorClassification = errorClassification
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FaultDetailsType
class FaultDetailsType
  @@schema_type = "FaultDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["errorCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCode")]],
    ["severity", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Severity")]],
    ["detailedMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailedMessage")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :errorCode
  attr_accessor :severity
  attr_accessor :detailedMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(errorCode = nil, severity = nil, detailedMessage = nil)
    @errorCode = errorCode
    @severity = severity
    @detailedMessage = detailedMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MeasureType
#   contains SOAP::SOAPDecimal
class MeasureType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "unit") => nil,
    XSD::QName.new(nil, "measurementSystem") => nil
  }

  def xmlattr_unit
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")]
  end

  def xmlattr_unit=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")] = value
  end

  def xmlattr_measurementSystem
    (@__xmlattr ||= {})[XSD::QName.new(nil, "measurementSystem")]
  end

  def xmlattr_measurementSystem=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "measurementSystem")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationType
class PaginationType
  @@schema_type = "PaginationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :entriesPerPage
  attr_accessor :pageNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(entriesPerPage = nil, pageNumber = nil)
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityType
#   contains SOAP::SOAPDecimal
class QuantityType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "unit") => nil
  }

  def xmlattr_unit
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")]
  end

  def xmlattr_unit=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdPasswordType
class UserIdPasswordType
  @@schema_type = "UserIdPasswordType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["appId", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AppId")]],
    ["devId", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DevId")]],
    ["authCert", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthCert")]],
    ["username", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Username")]],
    ["password", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Password")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :appId
  attr_accessor :devId
  attr_accessor :authCert
  attr_accessor :username
  attr_accessor :password
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(appId = nil, devId = nil, authCert = nil, username = nil, password = nil)
    @appId = appId
    @devId = devId
    @authCert = authCert
    @username = username
    @password = password
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XMLRequesterCredentialsType
class XMLRequesterCredentialsType
  @@schema_type = "XMLRequesterCredentialsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["username", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Username")]],
    ["password", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Password")]],
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :username
  attr_accessor :password
  attr_accessor :eBayAuthToken
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(username = nil, password = nil, eBayAuthToken = nil)
    @username = username
    @password = password
    @eBayAuthToken = eBayAuthToken
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntriesType
class AccountEntriesType
  @@schema_type = "AccountEntriesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountEntry", ["AccountEntryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntry")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :accountEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountEntry = [])
    @accountEntry = accountEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntryType
class AccountEntryType
  @@schema_type = "AccountEntryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountDetailsEntryType", ["AccountDetailEntryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountDetailsEntryType")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["balance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Balance")]],
    ["credit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Credit")]],
    ["date", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Date")]],
    ["debit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Debit")]],
    ["grossDetailAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GrossDetailAmount")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Memo")]],
    ["netDetailAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NetDetailAmount")]],
    ["refNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefNumber")]],
    ["vATPercent", ["SOAP::SOAPDecimal", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :accountDetailsEntryType
  attr_accessor :description
  attr_accessor :balance
  attr_accessor :credit
  attr_accessor :date
  attr_accessor :debit
  attr_accessor :grossDetailAmount
  attr_accessor :itemID
  attr_accessor :memo
  attr_accessor :netDetailAmount
  attr_accessor :refNumber
  attr_accessor :vATPercent
  attr_accessor :title
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountDetailsEntryType = nil, description = nil, balance = nil, credit = nil, date = nil, debit = nil, grossDetailAmount = nil, itemID = nil, memo = nil, netDetailAmount = nil, refNumber = nil, vATPercent = nil, title = nil)
    @accountDetailsEntryType = accountDetailsEntryType
    @description = description
    @balance = balance
    @credit = credit
    @date = date
    @debit = debit
    @grossDetailAmount = grossDetailAmount
    @itemID = itemID
    @memo = memo
    @netDetailAmount = netDetailAmount
    @refNumber = refNumber
    @vATPercent = vATPercent
    @title = title
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountSummaryType
class AccountSummaryType
  @@schema_type = "AccountSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountState", ["AccountStateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountState")]],
    ["invoicePayment", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoicePayment")]],
    ["invoiceCredit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceCredit")]],
    ["invoiceNewFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceNewFee")]],
    ["additionalAccount", ["AdditionalAccountType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdditionalAccount")]],
    ["amountPastDue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPastDue")]],
    ["bankAccountInfo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BankAccountInfo")]],
    ["bankModifyDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BankModifyDate")]],
    ["billingCycleDate", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BillingCycleDate")]],
    ["creditCardExpiration", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardExpiration")]],
    ["creditCardInfo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardInfo")]],
    ["creditCardModifyDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardModifyDate")]],
    ["currentBalance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentBalance")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["invoiceBalance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceBalance")]],
    ["invoiceDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceDate")]],
    ["lastAmountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastAmountPaid")]],
    ["lastPaymentDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastPaymentDate")]],
    ["pastDue", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PastDue")]],
    ["paymentMethod", ["SellerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :accountState
  attr_accessor :invoicePayment
  attr_accessor :invoiceCredit
  attr_accessor :invoiceNewFee
  attr_accessor :additionalAccount
  attr_accessor :amountPastDue
  attr_accessor :bankAccountInfo
  attr_accessor :bankModifyDate
  attr_accessor :billingCycleDate
  attr_accessor :creditCardExpiration
  attr_accessor :creditCardInfo
  attr_accessor :creditCardModifyDate
  attr_accessor :currentBalance
  attr_accessor :email
  attr_accessor :invoiceBalance
  attr_accessor :invoiceDate
  attr_accessor :lastAmountPaid
  attr_accessor :lastPaymentDate
  attr_accessor :pastDue
  attr_accessor :paymentMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountState = nil, invoicePayment = nil, invoiceCredit = nil, invoiceNewFee = nil, additionalAccount = [], amountPastDue = nil, bankAccountInfo = nil, bankModifyDate = nil, billingCycleDate = nil, creditCardExpiration = nil, creditCardInfo = nil, creditCardModifyDate = nil, currentBalance = nil, email = nil, invoiceBalance = nil, invoiceDate = nil, lastAmountPaid = nil, lastPaymentDate = nil, pastDue = nil, paymentMethod = nil)
    @accountState = accountState
    @invoicePayment = invoicePayment
    @invoiceCredit = invoiceCredit
    @invoiceNewFee = invoiceNewFee
    @additionalAccount = additionalAccount
    @amountPastDue = amountPastDue
    @bankAccountInfo = bankAccountInfo
    @bankModifyDate = bankModifyDate
    @billingCycleDate = billingCycleDate
    @creditCardExpiration = creditCardExpiration
    @creditCardInfo = creditCardInfo
    @creditCardModifyDate = creditCardModifyDate
    @currentBalance = currentBalance
    @email = email
    @invoiceBalance = invoiceBalance
    @invoiceDate = invoiceDate
    @lastAmountPaid = lastAmountPaid
    @lastPaymentDate = lastPaymentDate
    @pastDue = pastDue
    @paymentMethod = paymentMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledDefinitionType
class AdFormatEnabledDefinitionType
  @@schema_type = "AdFormatEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadType
class AdFormatLeadType
  @@schema_type = "AdFormatLeadType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["additionalInformation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdditionalInformation")]],
    ["address", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Address")]],
    ["bestTimeToCall", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestTimeToCall")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["firstName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FirstName")]],
    ["lastName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastName")]],
    ["phone", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone")]],
    ["submittedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubmittedTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :additionalInformation
  attr_accessor :address
  attr_accessor :bestTimeToCall
  attr_accessor :email
  attr_accessor :firstName
  attr_accessor :lastName
  attr_accessor :phone
  attr_accessor :submittedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(additionalInformation = nil, address = nil, bestTimeToCall = nil, email = nil, firstName = nil, lastName = nil, phone = nil, submittedTime = nil)
    @additionalInformation = additionalInformation
    @address = address
    @bestTimeToCall = bestTimeToCall
    @email = email
    @firstName = firstName
    @lastName = lastName
    @phone = phone
    @submittedTime = submittedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestContainerType
class AddMemberMessagesAAQToBidderRequestContainerType
  @@schema_type = "AddMemberMessagesAAQToBidderRequestContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memberMessage", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]]
  ]

  attr_accessor :correlationID
  attr_accessor :itemID
  attr_accessor :memberMessage

  def initialize(correlationID = nil, itemID = nil, memberMessage = nil)
    @correlationID = correlationID
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseContainerType
class AddMemberMessagesAAQToBidderResponseContainerType
  @@schema_type = "AddMemberMessagesAAQToBidderResponseContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]]
  ]

  attr_accessor :correlationID
  attr_accessor :ack

  def initialize(correlationID = nil, ack = nil)
    @correlationID = correlationID
    @ack = ack
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdditionalAccountType
class AdditionalAccountType
  @@schema_type = "AdditionalAccountType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["balance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Balance")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["accountCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :balance
  attr_accessor :currency
  attr_accessor :accountCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(balance = nil, currency = nil, accountCode = nil)
    @balance = balance
    @currency = currency
    @accountCode = accountCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddressType
class AddressType
  @@schema_type = "AddressType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["street", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street")]],
    ["street1", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street1")]],
    ["street2", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street2")]],
    ["cityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CityName")]],
    ["county", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "County")]],
    ["stateOrProvince", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StateOrProvince")]],
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["countryName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryName")]],
    ["phone", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone")]],
    ["phoneCountryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhoneCountryCode")]],
    ["phoneCountryPrefix", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhoneCountryPrefix")]],
    ["phoneAreaOrCityCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhoneAreaOrCityCode")]],
    ["phoneLocalNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhoneLocalNumber")]],
    ["phone2CountryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone2CountryCode")]],
    ["phone2CountryPrefix", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone2CountryPrefix")]],
    ["phone2AreaOrCityCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone2AreaOrCityCode")]],
    ["phone2LocalNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone2LocalNumber")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["addressID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressID")]],
    ["addressOwner", ["AddressOwnerCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressOwner")]],
    ["addressStatus", ["AddressStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressStatus")]],
    ["externalAddressID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAddressID")]],
    ["internationalName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalName")]],
    ["internationalStateAndCity", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalStateAndCity")]],
    ["internationalStreet", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalStreet")]],
    ["companyName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CompanyName")]],
    ["addressRecordType", ["AddressRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressRecordType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :street
  attr_accessor :street1
  attr_accessor :street2
  attr_accessor :cityName
  attr_accessor :county
  attr_accessor :stateOrProvince
  attr_accessor :country
  attr_accessor :countryName
  attr_accessor :phone
  attr_accessor :phoneCountryCode
  attr_accessor :phoneCountryPrefix
  attr_accessor :phoneAreaOrCityCode
  attr_accessor :phoneLocalNumber
  attr_accessor :phone2CountryCode
  attr_accessor :phone2CountryPrefix
  attr_accessor :phone2AreaOrCityCode
  attr_accessor :phone2LocalNumber
  attr_accessor :postalCode
  attr_accessor :addressID
  attr_accessor :addressOwner
  attr_accessor :addressStatus
  attr_accessor :externalAddressID
  attr_accessor :internationalName
  attr_accessor :internationalStateAndCity
  attr_accessor :internationalStreet
  attr_accessor :companyName
  attr_accessor :addressRecordType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, street = nil, street1 = nil, street2 = nil, cityName = nil, county = nil, stateOrProvince = nil, country = nil, countryName = nil, phone = nil, phoneCountryCode = nil, phoneCountryPrefix = nil, phoneAreaOrCityCode = nil, phoneLocalNumber = nil, phone2CountryCode = nil, phone2CountryPrefix = nil, phone2AreaOrCityCode = nil, phone2LocalNumber = nil, postalCode = nil, addressID = nil, addressOwner = nil, addressStatus = nil, externalAddressID = nil, internationalName = nil, internationalStateAndCity = nil, internationalStreet = nil, companyName = nil, addressRecordType = nil)
    @name = name
    @street = street
    @street1 = street1
    @street2 = street2
    @cityName = cityName
    @county = county
    @stateOrProvince = stateOrProvince
    @country = country
    @countryName = countryName
    @phone = phone
    @phoneCountryCode = phoneCountryCode
    @phoneCountryPrefix = phoneCountryPrefix
    @phoneAreaOrCityCode = phoneAreaOrCityCode
    @phoneLocalNumber = phoneLocalNumber
    @phone2CountryCode = phone2CountryCode
    @phone2CountryPrefix = phone2CountryPrefix
    @phone2AreaOrCityCode = phone2AreaOrCityCode
    @phone2LocalNumber = phone2LocalNumber
    @postalCode = postalCode
    @addressID = addressID
    @addressOwner = addressOwner
    @addressStatus = addressStatus
    @externalAddressID = externalAddressID
    @internationalName = internationalName
    @internationalStateAndCity = internationalStateAndCity
    @internationalStreet = internationalStreet
    @companyName = companyName
    @addressRecordType = addressRecordType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AmountType
#   contains SOAP::SOAPDouble
class AmountType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "currencyID") => nil
  }

  def xmlattr_currencyID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")]
  end

  def xmlattr_currencyID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApiAccessRuleType
class ApiAccessRuleType
  @@schema_type = "ApiAccessRuleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["callName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallName")]],
    ["countsTowardAggregate", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountsTowardAggregate")]],
    ["dailyHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailyHardLimit")]],
    ["dailySoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailySoftLimit")]],
    ["dailyUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailyUsage")]],
    ["hourlyHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlyHardLimit")]],
    ["hourlySoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlySoftLimit")]],
    ["hourlyUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlyUsage")]],
    ["period", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Period")]],
    ["periodicHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicHardLimit")]],
    ["periodicSoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicSoftLimit")]],
    ["periodicUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicUsage")]],
    ["periodicStartDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicStartDate")]],
    ["modTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTime")]],
    ["ruleCurrentStatus", ["AccessRuleCurrentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuleCurrentStatus")]],
    ["ruleStatus", ["AccessRuleStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuleStatus")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :callName
  attr_accessor :countsTowardAggregate
  attr_accessor :dailyHardLimit
  attr_accessor :dailySoftLimit
  attr_accessor :dailyUsage
  attr_accessor :hourlyHardLimit
  attr_accessor :hourlySoftLimit
  attr_accessor :hourlyUsage
  attr_accessor :period
  attr_accessor :periodicHardLimit
  attr_accessor :periodicSoftLimit
  attr_accessor :periodicUsage
  attr_accessor :periodicStartDate
  attr_accessor :modTime
  attr_accessor :ruleCurrentStatus
  attr_accessor :ruleStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(callName = nil, countsTowardAggregate = nil, dailyHardLimit = nil, dailySoftLimit = nil, dailyUsage = nil, hourlyHardLimit = nil, hourlySoftLimit = nil, hourlyUsage = nil, period = nil, periodicHardLimit = nil, periodicSoftLimit = nil, periodicUsage = nil, periodicStartDate = nil, modTime = nil, ruleCurrentStatus = nil, ruleStatus = nil)
    @callName = callName
    @countsTowardAggregate = countsTowardAggregate
    @dailyHardLimit = dailyHardLimit
    @dailySoftLimit = dailySoftLimit
    @dailyUsage = dailyUsage
    @hourlyHardLimit = hourlyHardLimit
    @hourlySoftLimit = hourlySoftLimit
    @hourlyUsage = hourlyUsage
    @period = period
    @periodicHardLimit = periodicHardLimit
    @periodicSoftLimit = periodicSoftLimit
    @periodicUsage = periodicUsage
    @periodicStartDate = periodicStartDate
    @modTime = modTime
    @ruleCurrentStatus = ruleCurrentStatus
    @ruleStatus = ruleStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeliveryPreferencesType
class ApplicationDeliveryPreferencesType
  @@schema_type = "ApplicationDeliveryPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["applicationURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationURL")]],
    ["applicationEnable", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationEnable")]],
    ["alertEmail", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertEmail")]],
    ["alertEnable", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertEnable")]],
    ["notificationPayloadType", ["NotificationPayloadTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationPayloadType")]],
    ["deviceType", ["DeviceTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeviceType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :applicationURL
  attr_accessor :applicationEnable
  attr_accessor :alertEmail
  attr_accessor :alertEnable
  attr_accessor :notificationPayloadType
  attr_accessor :deviceType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationURL = nil, applicationEnable = nil, alertEmail = nil, alertEnable = nil, notificationPayloadType = nil, deviceType = nil)
    @applicationURL = applicationURL
    @applicationEnable = applicationEnable
    @alertEmail = alertEmail
    @alertEnable = alertEnable
    @notificationPayloadType = notificationPayloadType
    @deviceType = deviceType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeArrayType
class AttributeArrayType < ::Array
  @@schema_element = [
    ["Attribute", ["AttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Attribute")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}AttributeRecommendationsType
class AttributeRecommendationsType
  @@schema_type = "AttributeRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetArrayType
class AttributeSetArrayType < ::Array
  @@schema_element = [
    ["AttributeSet", ["AttributeSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSet")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetType
class AttributeSetType
  @@schema_type = "AttributeSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "attributeSetID") => "SOAP::SOAPInt",
    XSD::QName.new(nil, "attributeSetVersion") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["attribute", ["AttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Attribute")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")]
  end

  def xmlattr_attributeSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")] = value
  end

  def xmlattr_attributeSetVersion
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetVersion")]
  end

  def xmlattr_attributeSetVersion=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetVersion")] = value
  end

  def initialize(attribute = [])
    @attribute = attribute
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeType
class AttributeType
  @@schema_type = "AttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "attributeID") => "SOAP::SOAPInt",
    XSD::QName.new(nil, "attributeLabel") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["value", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeID")]
  end

  def xmlattr_attributeID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeID")] = value
  end

  def xmlattr_attributeLabel
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeLabel")]
  end

  def xmlattr_attributeLabel=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeLabel")] = value
  end

  def initialize(value = [])
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AuthenticationEntryArrayType
class AuthenticationEntryArrayType < ::Array
  @@schema_element = [
    ["AuthenticationEntry", ["AuthenticationEntryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntry")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}AuthenticationEntryType
class AuthenticationEntryType
  @@schema_type = "AuthenticationEntryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["acceptURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AcceptURL")]],
    ["privacyPolicyURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivacyPolicyURL")]],
    ["rejectURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RejectURL")]],
    ["ruName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuName")]],
    ["tokenReturnMethod", ["TokenReturnMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TokenReturnMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :acceptURL
  attr_accessor :privacyPolicyURL
  attr_accessor :rejectURL
  attr_accessor :ruName
  attr_accessor :tokenReturnMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(acceptURL = nil, privacyPolicyURL = nil, rejectURL = nil, ruName = nil, tokenReturnMethod = nil)
    @acceptURL = acceptURL
    @privacyPolicyURL = privacyPolicyURL
    @rejectURL = rejectURL
    @ruName = ruName
    @tokenReturnMethod = tokenReturnMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicAmountType
#   contains SOAP::SOAPString
class BasicAmountType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "currencyID") => nil
  }

  def xmlattr_currencyID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")]
  end

  def xmlattr_currencyID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicUpgradePackEnabledDefinitionType
class BasicUpgradePackEnabledDefinitionType
  @@schema_type = "BasicUpgradePackEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferArrayType
class BestOfferArrayType < ::Array
  @@schema_element = [
    ["BestOffer", ["BestOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOffer")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferAutoDeclineEnabledDefinitionType
class BestOfferAutoDeclineEnabledDefinitionType
  @@schema_type = "BestOfferAutoDeclineEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferCounterEnabledDefinitionType
class BestOfferCounterEnabledDefinitionType
  @@schema_type = "BestOfferCounterEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferDetailsType
class BestOfferDetailsType
  @@schema_type = "BestOfferDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCount")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["bestOffer", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOffer")]],
    ["bestOfferStatus", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferStatus")]],
    ["bestOfferType", ["BestOfferTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :bestOfferCount
  attr_accessor :bestOfferEnabled
  attr_accessor :bestOffer
  attr_accessor :bestOfferStatus
  attr_accessor :bestOfferType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferCount = nil, bestOfferEnabled = nil, bestOffer = nil, bestOfferStatus = nil, bestOfferType = nil)
    @bestOfferCount = bestOfferCount
    @bestOfferEnabled = bestOfferEnabled
    @bestOffer = bestOffer
    @bestOfferStatus = bestOfferStatus
    @bestOfferType = bestOfferType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferEnabledDefinitionType
class BestOfferEnabledDefinitionType
  @@schema_type = "BestOfferEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferType
class BestOfferType
  @@schema_type = "BestOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["expirationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationTime")]],
    ["buyer", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Buyer")]],
    ["price", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Price")]],
    ["status", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["buyerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerMessage")]],
    ["sellerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerMessage")]],
    ["bestOfferCodeType", ["BestOfferTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCodeType")]],
    ["callStatus", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallStatus")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :bestOfferID
  attr_accessor :expirationTime
  attr_accessor :buyer
  attr_accessor :price
  attr_accessor :status
  attr_accessor :quantity
  attr_accessor :buyerMessage
  attr_accessor :sellerMessage
  attr_accessor :bestOfferCodeType
  attr_accessor :callStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferID = nil, expirationTime = nil, buyer = nil, price = nil, status = nil, quantity = nil, buyerMessage = nil, sellerMessage = nil, bestOfferCodeType = nil, callStatus = nil)
    @bestOfferID = bestOfferID
    @expirationTime = expirationTime
    @buyer = buyer
    @price = price
    @status = status
    @quantity = quantity
    @buyerMessage = buyerMessage
    @sellerMessage = sellerMessage
    @bestOfferCodeType = bestOfferCodeType
    @callStatus = callStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalArrayType
class BidApprovalArrayType
  @@schema_type = "BidApprovalArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["liveAuctionBid", ["BidApprovalType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionBid")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :liveAuctionBid
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(liveAuctionBid = [])
    @liveAuctionBid = liveAuctionBid
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalType
class BidApprovalType
  @@schema_type = "BidApprovalType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["approvedBiddingLimit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApprovedBiddingLimit")]],
    ["declinedComment", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeclinedComment")]],
    ["status", ["BidderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userID
  attr_accessor :approvedBiddingLimit
  attr_accessor :declinedComment
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, approvedBiddingLimit = nil, declinedComment = nil, status = nil)
    @userID = userID
    @approvedBiddingLimit = approvedBiddingLimit
    @declinedComment = declinedComment
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailArrayType
class BidderDetailArrayType < ::Array
  @@schema_element = [
    ["BidderDetail", ["BidderDetailType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderDetail")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailType
class BidderDetailType
  @@schema_type = "BidderDetailType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["uniqueNegativeFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniqueNegativeFeedbackCount")]],
    ["uniquePositiveFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniquePositiveFeedbackCount")]],
    ["liveAuctionBidResult", ["LiveAuctionBidType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionBidResult")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userID
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :liveAuctionBidResult
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, liveAuctionBidResult = nil)
    @userID = userID
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @liveAuctionBidResult = liveAuctionBidResult
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderNoticePreferencesType
class BidderNoticePreferencesType
  @@schema_type = "BidderNoticePreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["unsuccessfulBidderNoticeIncludeMyItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsuccessfulBidderNoticeIncludeMyItems")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :unsuccessfulBidderNoticeIncludeMyItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unsuccessfulBidderNoticeIncludeMyItems = nil)
    @unsuccessfulBidderNoticeIncludeMyItems = unsuccessfulBidderNoticeIncludeMyItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingDetailsType
class BiddingDetailsType
  @@schema_type = "BiddingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["convertedMaxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedMaxBid")]],
    ["maxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxBid")]],
    ["quantityBid", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityBid")]],
    ["quantityWon", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityWon")]],
    ["winning", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Winning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :convertedMaxBid
  attr_accessor :maxBid
  attr_accessor :quantityBid
  attr_accessor :quantityWon
  attr_accessor :winning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(convertedMaxBid = nil, maxBid = nil, quantityBid = nil, quantityWon = nil, winning = nil)
    @convertedMaxBid = convertedMaxBid
    @maxBid = maxBid
    @quantityBid = quantityBid
    @quantityWon = quantityWon
    @winning = winning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRequirementsType
class BuyerRequirementsType
  @@schema_type = "BuyerRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shipToRegistrationCountry", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipToRegistrationCountry")]],
    ["zeroFeedbackScore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ZeroFeedbackScore")]],
    ["minimumFeedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumFeedbackScore")]],
    ["maximumUnpaidItemStrikes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaximumUnpaidItemStrikes")]],
    ["maximumItemRequirements", ["MaximumItemRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaximumItemRequirements")]],
    ["linkedPayPalAccount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkedPayPalAccount")]],
    ["verifiedUserRequirements", ["VerifiedUserRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VerifiedUserRequirements")]]
  ]

  attr_accessor :shipToRegistrationCountry
  attr_accessor :zeroFeedbackScore
  attr_accessor :minimumFeedbackScore
  attr_accessor :maximumUnpaidItemStrikes
  attr_accessor :maximumItemRequirements
  attr_accessor :linkedPayPalAccount
  attr_accessor :verifiedUserRequirements

  def initialize(shipToRegistrationCountry = nil, zeroFeedbackScore = nil, minimumFeedbackScore = nil, maximumUnpaidItemStrikes = nil, maximumItemRequirements = nil, linkedPayPalAccount = nil, verifiedUserRequirements = nil)
    @shipToRegistrationCountry = shipToRegistrationCountry
    @zeroFeedbackScore = zeroFeedbackScore
    @minimumFeedbackScore = minimumFeedbackScore
    @maximumUnpaidItemStrikes = maximumUnpaidItemStrikes
    @maximumItemRequirements = maximumItemRequirements
    @linkedPayPalAccount = linkedPayPalAccount
    @verifiedUserRequirements = verifiedUserRequirements
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerType
class BuyerType
  @@schema_type = "BuyerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :shippingAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingAddress = nil)
    @shippingAddress = shippingAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideDetailsType
class BuyingGuideDetailsType
  @@schema_type = "BuyingGuideDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["buyingGuide", ["BuyingGuideType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuide")]],
    ["buyingGuideHub", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideHub")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :buyingGuide
  attr_accessor :buyingGuideHub
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyingGuide = [], buyingGuideHub = nil)
    @buyingGuide = buyingGuide
    @buyingGuideHub = buyingGuideHub
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideType
class BuyingGuideType
  @@schema_type = "BuyingGuideType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :uRL
  attr_accessor :categoryID
  attr_accessor :productFinderID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRL = nil, categoryID = nil, productFinderID = nil)
    @name = name
    @uRL = uRL
    @categoryID = categoryID
    @productFinderID = productFinderID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingSummaryType
class BuyingSummaryType
  @@schema_type = "BuyingSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["biddingCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingCount")]],
    ["winningCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WinningCount")]],
    ["totalWinningCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalWinningCost")]],
    ["wonCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonCount")]],
    ["totalWonCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalWonCost")]],
    ["wonDurationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonDurationInDays")]],
    ["bestOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCount")]]
  ]

  attr_accessor :biddingCount
  attr_accessor :winningCount
  attr_accessor :totalWinningCost
  attr_accessor :wonCount
  attr_accessor :totalWonCost
  attr_accessor :wonDurationInDays
  attr_accessor :bestOfferCount

  def initialize(biddingCount = nil, winningCount = nil, totalWinningCost = nil, wonCount = nil, totalWonCost = nil, wonDurationInDays = nil, bestOfferCount = nil)
    @biddingCount = biddingCount
    @winningCount = winningCount
    @totalWinningCost = totalWinningCost
    @wonCount = wonCount
    @totalWonCost = totalWonCost
    @wonDurationInDays = wonDurationInDays
    @bestOfferCount = bestOfferCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingPreferencesType
class CalculatedShippingPreferencesType
  @@schema_type = "CalculatedShippingPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["calculatedShippingAmountForEntireOrder", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingAmountForEntireOrder")]],
    ["calculatedShippingChargeOption", ["CalculatedShippingChargeOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingChargeOption")]],
    ["calculatedShippingRateOption", ["CalculatedShippingRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingRateOption")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :calculatedShippingAmountForEntireOrder
  attr_accessor :calculatedShippingChargeOption
  attr_accessor :calculatedShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingAmountForEntireOrder = nil, calculatedShippingChargeOption = nil, calculatedShippingRateOption = nil, insuranceOption = nil)
    @calculatedShippingAmountForEntireOrder = calculatedShippingAmountForEntireOrder
    @calculatedShippingChargeOption = calculatedShippingChargeOption
    @calculatedShippingRateOption = calculatedShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateType
class CalculatedShippingRateType
  @@schema_type = "CalculatedShippingRateType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["originatingPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OriginatingPostalCode")]],
    ["packageDepth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageDepth")]],
    ["packageLength", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageLength")]],
    ["packageWidth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageWidth")]],
    ["packagingHandlingCosts", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackagingHandlingCosts")]],
    ["shippingIrregular", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIrregular")]],
    ["shippingPackage", ["ShippingPackageCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingPackage")]],
    ["weightMajor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMajor")]],
    ["weightMinor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMinor")]],
    ["internationalPackagingHandlingCosts", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalPackagingHandlingCosts")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :originatingPostalCode
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :packagingHandlingCosts
  attr_accessor :shippingIrregular
  attr_accessor :shippingPackage
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :internationalPackagingHandlingCosts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originatingPostalCode = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, packagingHandlingCosts = nil, shippingIrregular = nil, shippingPackage = nil, weightMajor = nil, weightMinor = nil, internationalPackagingHandlingCosts = nil)
    @originatingPostalCode = originatingPostalCode
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @packagingHandlingCosts = packagingHandlingCosts
    @shippingIrregular = shippingIrregular
    @shippingPackage = shippingPackage
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @internationalPackagingHandlingCosts = internationalPackagingHandlingCosts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferArrayType
class CancelOfferArrayType
  @@schema_type = "CancelOfferArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["cancelOffer", ["CancelOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CancelOffer")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :cancelOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cancelOffer = [])
    @cancelOffer = cancelOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferType
class CancelOfferType
  @@schema_type = "CancelOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["offer", ["OfferType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Offer")]],
    ["explanation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Explanation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :offer
  attr_accessor :explanation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(offer = nil, explanation = nil)
    @offer = offer
    @explanation = explanation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryArrayType
class CategoryArrayType < ::Array
  @@schema_element = [
    ["Category", ["CategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureType
class CategoryFeatureType
  @@schema_type = "CategoryFeatureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["listingDuration", ["ListingDurationReferenceType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["shippingTermsRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["dutchBINEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DutchBINEnabled")]],
    ["userConsentRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserConsentRequired")]],
    ["homePageFeaturedEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePageFeaturedEnabled")]],
    ["proPackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackEnabled")]],
    ["basicUpgradePackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BasicUpgradePackEnabled")]],
    ["valuePackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValuePackEnabled")]],
    ["proPackPlusEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackPlusEnabled")]],
    ["adFormatEnabled", ["AdFormatEnabledCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatEnabled")]],
    ["digitalDeliveryEnabled", ["DigitalDeliveryEnabledCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDeliveryEnabled")]],
    ["bestOfferCounterEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCounterEnabled")]],
    ["bestOfferAutoDeclineEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferAutoDeclineEnabled")]],
    ["localMarketSpecialitySubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketSpecialitySubscription")]],
    ["localMarketRegularSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketRegularSubscription")]],
    ["localMarketPremiumSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketPremiumSubscription")]],
    ["localMarketNonSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketNonSubscription")]],
    ["expressEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEnabled")]],
    ["expressPicturesRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressPicturesRequired")]],
    ["expressConditionRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressConditionRequired")]],
    ["minimumReservePrice", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]],
    ["sellerContactDetailsEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerContactDetailsEnabled")]],
    ["transactionConfirmationRequestEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionConfirmationRequestEnabled")]],
    ["storeInventoryEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreInventoryEnabled")]],
    ["skypeMeTransactionalEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeTransactionalEnabled")]],
    ["skypeMeNonTransactionalEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeNonTransactionalEnabled")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :categoryID
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :digitalDeliveryEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, digitalDeliveryEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil)
    @categoryID = categoryID
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @digitalDeliveryEnabled = digitalDeliveryEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFinanceOfferArrayType
class CategoryFinanceOfferArrayType < ::Array
  @@schema_element = [
    ["CategoryFinanceOffer", ["CategoryFinanceOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryFinanceOffer")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFinanceOfferType
class CategoryFinanceOfferType
  @@schema_type = "CategoryFinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["financeOfferID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :financeOfferID
  attr_accessor :categoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(financeOfferID = [], categoryID = nil)
    @financeOfferID = financeOfferID
    @categoryID = categoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryMappingType
class CategoryMappingType
  @@schema_type = "CategoryMappingType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "oldID") => "SOAP::SOAPString",
    XSD::QName.new(nil, "id") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_oldID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "oldID")]
  end

  def xmlattr_oldID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "oldID")] = value
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryType
class CategoryType
  @@schema_type = "CategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["autoPayEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AutoPayEnabled")]],
    ["b2BVATEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "B2BVATEnabled")]],
    ["catalogEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CatalogEnabled")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["categoryLevel", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryLevel")]],
    ["categoryName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryName")]],
    ["categoryParentID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParentID")]],
    ["categoryParentName", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParentName")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productSearchPageAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchPageAvailable")]],
    ["productFinderAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderAvailable")]],
    ["productFinderIDs", ["ExtendedProductFinderIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderIDs")]],
    ["characteristicsSets", ["CharacteristicsSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSets")]],
    ["expired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Expired")]],
    ["intlAutosFixedCat", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IntlAutosFixedCat")]],
    ["leafCategory", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeafCategory")]],
    ["virtual", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Virtual")]],
    ["numOfItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumOfItems")]],
    ["sellerGuaranteeEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerGuaranteeEligible")]],
    ["oRPA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ORPA")]],
    ["oRRA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ORRA")]],
    ["lSD", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LSD")]],
    ["keywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Keywords")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :bestOfferEnabled
  attr_accessor :autoPayEnabled
  attr_accessor :b2BVATEnabled
  attr_accessor :catalogEnabled
  attr_accessor :categoryID
  attr_accessor :categoryLevel
  attr_accessor :categoryName
  attr_accessor :categoryParentID
  attr_accessor :categoryParentName
  attr_accessor :productFinderID
  attr_accessor :productSearchPageAvailable
  attr_accessor :productFinderAvailable
  attr_accessor :productFinderIDs
  attr_accessor :characteristicsSets
  attr_accessor :expired
  attr_accessor :intlAutosFixedCat
  attr_accessor :leafCategory
  attr_accessor :virtual
  attr_accessor :numOfItems
  attr_accessor :sellerGuaranteeEligible
  attr_accessor :oRPA
  attr_accessor :oRRA
  attr_accessor :lSD
  attr_accessor :keywords
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferEnabled = nil, autoPayEnabled = nil, b2BVATEnabled = nil, catalogEnabled = nil, categoryID = nil, categoryLevel = nil, categoryName = nil, categoryParentID = [], categoryParentName = [], productFinderID = nil, productSearchPageAvailable = nil, productFinderAvailable = nil, productFinderIDs = [], characteristicsSets = [], expired = nil, intlAutosFixedCat = nil, leafCategory = nil, virtual = nil, numOfItems = nil, sellerGuaranteeEligible = nil, oRPA = nil, oRRA = nil, lSD = nil, keywords = nil)
    @bestOfferEnabled = bestOfferEnabled
    @autoPayEnabled = autoPayEnabled
    @b2BVATEnabled = b2BVATEnabled
    @catalogEnabled = catalogEnabled
    @categoryID = categoryID
    @categoryLevel = categoryLevel
    @categoryName = categoryName
    @categoryParentID = categoryParentID
    @categoryParentName = categoryParentName
    @productFinderID = productFinderID
    @productSearchPageAvailable = productSearchPageAvailable
    @productFinderAvailable = productFinderAvailable
    @productFinderIDs = productFinderIDs
    @characteristicsSets = characteristicsSets
    @expired = expired
    @intlAutosFixedCat = intlAutosFixedCat
    @leafCategory = leafCategory
    @virtual = virtual
    @numOfItems = numOfItems
    @sellerGuaranteeEligible = sellerGuaranteeEligible
    @oRPA = oRPA
    @oRRA = oRRA
    @lSD = lSD
    @keywords = keywords
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicSetIDsType
class CharacteristicSetIDsType < ::Array
  @@schema_element = [
    ["ID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicType
class CharacteristicType
  @@schema_type = "CharacteristicType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeID")]],
    ["dateFormat", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DateFormat")]],
    ["displaySequence", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplaySequence")]],
    ["displayUOM", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayUOM")]],
    ["label", ["LabelType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Label")]],
    ["sortOrder", ["SortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortOrder")]],
    ["valueList", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueList")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attributeID
  attr_accessor :dateFormat
  attr_accessor :displaySequence
  attr_accessor :displayUOM
  attr_accessor :label
  attr_accessor :sortOrder
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateFormat = nil, displaySequence = nil, displayUOM = nil, label = nil, sortOrder = nil, valueList = [])
    @attributeID = attributeID
    @dateFormat = dateFormat
    @displaySequence = displaySequence
    @displayUOM = displayUOM
    @label = label
    @sortOrder = sortOrder
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetType
class CharacteristicsSetType
  @@schema_type = "CharacteristicsSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["attributeSetVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetVersion")]],
    ["characteristics", ["CharacteristicType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Characteristics")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :attributeSetID
  attr_accessor :attributeSetVersion
  attr_accessor :characteristics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, attributeSetID = nil, attributeSetVersion = nil, characteristics = [])
    @name = name
    @attributeSetID = attributeSetID
    @attributeSetVersion = attributeSetVersion
    @characteristics = characteristics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationType
class CharityAffiliationType
  @@schema_type = "CharityAffiliationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "id") => "SOAP::SOAPString",
    XSD::QName.new(nil, "type") => nil
  }
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def xmlattr_type
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")]
  end

  def xmlattr_type=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationsType
class CharityAffiliationsType
  @@schema_type = "CharityAffiliationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["charityID", ["CharityIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :charityID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityID = [])
    @charityID = charityID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityIDType
#   contains SOAP::SOAPString
class CharityIDType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "type") => nil
  }

  def xmlattr_type
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")]
  end

  def xmlattr_type=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityInfoType
class CharityInfoType
  @@schema_type = "CharityInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "id") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["mission", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Mission")]],
    ["logoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["status", ["CharityStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["searchableString", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchableString")]],
    ["charityRegion", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityRegion")]],
    ["charityDomain", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityDomain")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :searchableString
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :charityID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def initialize(name = nil, mission = nil, logoURL = nil, status = nil, searchableString = nil, charityRegion = nil, charityDomain = [], charityID = nil)
    @name = name
    @mission = mission
    @logoURL = logoURL
    @status = status
    @searchableString = searchableString
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @charityID = charityID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerType
class CharitySellerType
  @@schema_type = "CharitySellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["charitySellerStatus", ["CharitySellerStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharitySellerStatus")]],
    ["charityAffiliation", ["CharityAffiliationType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityAffiliation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :charitySellerStatus
  attr_accessor :charityAffiliation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charitySellerStatus = nil, charityAffiliation = [])
    @charitySellerStatus = charitySellerStatus
    @charityAffiliation = charityAffiliation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityType
class CharityType
  @@schema_type = "CharityType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["charityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityName")]],
    ["charityNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityNumber")]],
    ["donationPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DonationPercent")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["mission", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Mission")]],
    ["logoURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["status", ["CharityStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["charityListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityListing")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :charityName
  attr_accessor :charityNumber
  attr_accessor :donationPercent
  attr_accessor :charityID
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :charityListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityName = nil, charityNumber = nil, donationPercent = nil, charityID = nil, mission = nil, logoURL = nil, status = nil, charityListing = nil)
    @charityName = charityName
    @charityNumber = charityNumber
    @donationPercent = donationPercent
    @charityID = charityID
    @mission = mission
    @logoURL = logoURL
    @status = status
    @charityListing = charityListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusType
class CheckoutStatusType
  @@schema_type = "CheckoutStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayPaymentStatus", "PaymentStatusCodeType"],
    ["lastModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedTime")]],
    ["paymentMethod", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["status", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eBayPaymentStatus
  attr_accessor :lastModifiedTime
  attr_accessor :paymentMethod
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, lastModifiedTime = nil, paymentMethod = nil, status = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @lastModifiedTime = lastModifiedTime
    @paymentMethod = paymentMethod
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPreferencesType
class CombinedPaymentPreferencesType
  @@schema_type = "CombinedPaymentPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["calculatedShippingPreferences", ["CalculatedShippingPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingPreferences")]],
    ["combinedPaymentOption", ["CombinedPaymentOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentOption")]],
    ["combinedPaymentPeriod", ["CombinedPaymentPeriodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPeriod")]],
    ["flatShippingPreferences", ["FlatShippingPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatShippingPreferences")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :calculatedShippingPreferences
  attr_accessor :combinedPaymentOption
  attr_accessor :combinedPaymentPeriod
  attr_accessor :flatShippingPreferences
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingPreferences = nil, combinedPaymentOption = nil, combinedPaymentPeriod = nil, flatShippingPreferences = nil)
    @calculatedShippingPreferences = calculatedShippingPreferences
    @combinedPaymentOption = combinedPaymentOption
    @combinedPaymentPeriod = combinedPaymentPeriod
    @flatShippingPreferences = flatShippingPreferences
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ContextSearchAssetType
class ContextSearchAssetType
  @@schema_type = "ContextSearchAssetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["keyword", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Keyword")]],
    ["category", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["score", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Score")]],
    ["ranking", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ranking")]]
  ]

  attr_accessor :keyword
  attr_accessor :category
  attr_accessor :score
  attr_accessor :ranking

  def initialize(keyword = nil, category = nil, score = nil, ranking = nil)
    @keyword = keyword
    @category = category
    @score = score
    @ranking = ranking
  end
end

# {urn:ebay:apis:eBLBaseComponents}CountryDetailsType
class CountryDetailsType
  @@schema_type = "CountryDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :country
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(country = nil, description = nil)
    @country = country
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionPreferencesType
class CrossPromotionPreferencesType
  @@schema_type = "CrossPromotionPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["crossPromotionEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionEnabled")]],
    ["crossSellItemFormatSortFilter", ["ItemFormatSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellItemFormatSortFilter")]],
    ["crossSellGallerySortFilter", ["GallerySortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellGallerySortFilter")]],
    ["crossSellItemSortFilter", ["ItemSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellItemSortFilter")]],
    ["upSellItemFormatSortFilter", ["ItemFormatSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellItemFormatSortFilter")]],
    ["upSellGallerySortFilter", ["GallerySortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellGallerySortFilter")]],
    ["upSellItemSortFilter", ["ItemSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellItemSortFilter")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :crossPromotionEnabled
  attr_accessor :crossSellItemFormatSortFilter
  attr_accessor :crossSellGallerySortFilter
  attr_accessor :crossSellItemSortFilter
  attr_accessor :upSellItemFormatSortFilter
  attr_accessor :upSellGallerySortFilter
  attr_accessor :upSellItemSortFilter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(crossPromotionEnabled = nil, crossSellItemFormatSortFilter = nil, crossSellGallerySortFilter = nil, crossSellItemSortFilter = nil, upSellItemFormatSortFilter = nil, upSellGallerySortFilter = nil, upSellItemSortFilter = nil)
    @crossPromotionEnabled = crossPromotionEnabled
    @crossSellItemFormatSortFilter = crossSellItemFormatSortFilter
    @crossSellGallerySortFilter = crossSellGallerySortFilter
    @crossSellItemSortFilter = crossSellItemSortFilter
    @upSellItemFormatSortFilter = upSellItemFormatSortFilter
    @upSellGallerySortFilter = upSellGallerySortFilter
    @upSellItemSortFilter = upSellItemSortFilter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionsType
class CrossPromotionsType
  @@schema_type = "CrossPromotionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["primaryScheme", ["PromotionSchemeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrimaryScheme")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["sellerID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerID")]],
    ["shippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDiscount")]],
    ["sellerKey", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerKey")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["promotedItem", ["PromotedItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedItem")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :itemID
  attr_accessor :primaryScheme
  attr_accessor :promotionMethod
  attr_accessor :sellerID
  attr_accessor :shippingDiscount
  attr_accessor :sellerKey
  attr_accessor :storeName
  attr_accessor :promotedItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, primaryScheme = nil, promotionMethod = nil, sellerID = nil, shippingDiscount = nil, sellerKey = nil, storeName = nil, promotedItem = [])
    @itemID = itemID
    @primaryScheme = primaryScheme
    @promotionMethod = promotionMethod
    @sellerID = sellerID
    @shippingDiscount = shippingDiscount
    @sellerKey = sellerKey
    @storeName = storeName
    @promotedItem = promotedItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyDetailsType
class CurrencyDetailsType
  @@schema_type = "CurrencyDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :currency
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(currency = nil, description = nil)
    @currency = currency
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DataElementSetType
class DataElementSetType
  @@schema_type = "DataElementSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "attributeSetID") => "SOAP::SOAPInt"
  }
  @@schema_element = [
    ["dataElement", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElement")]],
    ["dataElementID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :dataElement
  attr_accessor :dataElementID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")]
  end

  def xmlattr_attributeSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")] = value
  end

  def initialize(dataElement = nil, dataElementID = nil)
    @dataElement = dataElement
    @dataElementID = dataElementID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateType
class DescriptionTemplateType
  @@schema_type = "DescriptionTemplateType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["groupID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupID")]],
    ["iD", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]],
    ["imageURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ImageURL")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["templateXML", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TemplateXML")]],
    ["type", ["DescriptionTemplateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :groupID
  attr_accessor :iD
  attr_accessor :imageURL
  attr_accessor :name
  attr_accessor :templateXML
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, iD = nil, imageURL = nil, name = nil, templateXML = nil, type = nil)
    @groupID = groupID
    @iD = iD
    @imageURL = imageURL
    @name = name
    @templateXML = templateXML
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DigitalDeliveryDetailsType
class DigitalDeliveryDetailsType
  @@schema_type = "DigitalDeliveryDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["requirements", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Requirements")]],
    ["method", ["DigitalDeliveryMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Method")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["instructions", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Instructions")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :requirements
  attr_accessor :method
  attr_accessor :uRL
  attr_accessor :instructions
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(requirements = nil, method = nil, uRL = nil, instructions = nil)
    @requirements = requirements
    @method = method
    @uRL = uRL
    @instructions = instructions
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DigitalDeliveryEnabledDefinitionType
class DigitalDeliveryEnabledDefinitionType
  @@schema_type = "DigitalDeliveryEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DispatchTimeMaxDetailsType
class DispatchTimeMaxDetailsType
  @@schema_type = "DispatchTimeMaxDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["dispatchTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DispatchTimeMax")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :dispatchTimeMax
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dispatchTimeMax = nil, description = nil)
    @dispatchTimeMax = dispatchTimeMax
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeArrayType
class DisputeArrayType < ::Array
  @@schema_element = [
    ["Dispute", ["DisputeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Dispute")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}DisputeType
class DisputeType
  @@schema_type = "DisputeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["disputeRecordType", ["DisputeRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeRecordType")]],
    ["disputeState", ["DisputeStateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeState")]],
    ["disputeStatus", ["DisputeStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeStatus")]],
    ["otherPartyRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OtherPartyRole")]],
    ["otherPartyName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OtherPartyName")]],
    ["userRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserRole")]],
    ["buyerUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerUserID")]],
    ["sellerUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerUserID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["disputeReason", ["DisputeReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeReason")]],
    ["disputeExplanation", ["DisputeExplanationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeExplanation")]],
    ["disputeCreditEligibility", ["DisputeCreditEligibilityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeCreditEligibility")]],
    ["disputeCreatedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeCreatedTime")]],
    ["disputeModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeModifiedTime")]],
    ["disputeResolution", ["DisputeResolutionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolution")]],
    ["disputeMessage", ["DisputeMessageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeMessage")]],
    ["escalation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Escalation")]],
    ["purchaseProtection", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PurchaseProtection")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :disputeID
  attr_accessor :disputeRecordType
  attr_accessor :disputeState
  attr_accessor :disputeStatus
  attr_accessor :otherPartyRole
  attr_accessor :otherPartyName
  attr_accessor :userRole
  attr_accessor :buyerUserID
  attr_accessor :sellerUserID
  attr_accessor :transactionID
  attr_accessor :item
  attr_accessor :disputeReason
  attr_accessor :disputeExplanation
  attr_accessor :disputeCreditEligibility
  attr_accessor :disputeCreatedTime
  attr_accessor :disputeModifiedTime
  attr_accessor :disputeResolution
  attr_accessor :disputeMessage
  attr_accessor :escalation
  attr_accessor :purchaseProtection
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeID = nil, disputeRecordType = nil, disputeState = nil, disputeStatus = nil, otherPartyRole = nil, otherPartyName = nil, userRole = nil, buyerUserID = nil, sellerUserID = nil, transactionID = nil, item = nil, disputeReason = nil, disputeExplanation = nil, disputeCreditEligibility = nil, disputeCreatedTime = nil, disputeModifiedTime = nil, disputeResolution = [], disputeMessage = [], escalation = nil, purchaseProtection = nil)
    @disputeID = disputeID
    @disputeRecordType = disputeRecordType
    @disputeState = disputeState
    @disputeStatus = disputeStatus
    @otherPartyRole = otherPartyRole
    @otherPartyName = otherPartyName
    @userRole = userRole
    @buyerUserID = buyerUserID
    @sellerUserID = sellerUserID
    @transactionID = transactionID
    @item = item
    @disputeReason = disputeReason
    @disputeExplanation = disputeExplanation
    @disputeCreditEligibility = disputeCreditEligibility
    @disputeCreatedTime = disputeCreatedTime
    @disputeModifiedTime = disputeModifiedTime
    @disputeResolution = disputeResolution
    @disputeMessage = disputeMessage
    @escalation = escalation
    @purchaseProtection = purchaseProtection
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DistanceType
class DistanceType
  @@schema_type = "DistanceType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["distanceMeasurement", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DistanceMeasurement")]],
    ["distanceUnit", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DistanceUnit")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :distanceMeasurement
  attr_accessor :distanceUnit
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(distanceMeasurement = nil, distanceUnit = nil)
    @distanceMeasurement = distanceMeasurement
    @distanceUnit = distanceUnit
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DomainHistogramType
class DomainHistogramType
  @@schema_type = "DomainHistogramType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["department", ["ExpressHistogramDepartmentType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Department")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :department
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(department = [])
    @department = department
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DutchBINEnabledDefinitionType
class DutchBINEnabledDefinitionType
  @@schema_type = "DutchBINEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionEmailPreferencesType
class EndOfAuctionEmailPreferencesType
  @@schema_type = "EndOfAuctionEmailPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["templateText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TemplateText")]],
    ["logoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["logoType", ["EndOfAuctionLogoTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoType")]],
    ["emailCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCustomized")]],
    ["textCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TextCustomized")]],
    ["logoCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoCustomized")]],
    ["copyEmail", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmail")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :templateText
  attr_accessor :logoURL
  attr_accessor :logoType
  attr_accessor :emailCustomized
  attr_accessor :textCustomized
  attr_accessor :logoCustomized
  attr_accessor :copyEmail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(templateText = nil, logoURL = nil, logoType = nil, emailCustomized = nil, textCustomized = nil, logoCustomized = nil, copyEmail = nil)
    @templateText = templateText
    @logoURL = logoURL
    @logoType = logoType
    @emailCustomized = emailCustomized
    @textCustomized = textCustomized
    @logoCustomized = logoCustomized
    @copyEmail = copyEmail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpansionArrayType
class ExpansionArrayType
  @@schema_type = "ExpansionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["expansionItem", ["SearchResultItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpansionItem")]],
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]]
  ]

  attr_accessor :expansionItem
  attr_accessor :totalAvailable

  def initialize(expansionItem = [], totalAvailable = nil)
    @expansionItem = expansionItem
    @totalAvailable = totalAvailable
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressConditionRequiredDefinitionType
class ExpressConditionRequiredDefinitionType
  @@schema_type = "ExpressConditionRequiredDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressDetailsType
class ExpressDetailsType
  @@schema_type = "ExpressDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["expressLargeImage", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressLargeImage")]],
    ["expressSmallImage", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressSmallImage")]],
    ["condition", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Condition")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :expressLargeImage
  attr_accessor :expressSmallImage
  attr_accessor :condition
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressLargeImage = nil, expressSmallImage = nil, condition = nil)
    @expressLargeImage = expressLargeImage
    @expressSmallImage = expressSmallImage
    @condition = condition
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressEnabledDefinitionType
class ExpressEnabledDefinitionType
  @@schema_type = "ExpressEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramAisleType
class ExpressHistogramAisleType
  @@schema_type = "ExpressHistogramAisleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["domainDetails", ["ExpressHistogramDomainDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DomainDetails")]],
    ["productType", ["ExpressHistogramProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :domainDetails
  attr_accessor :productType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil, productType = [])
    @domainDetails = domainDetails
    @productType = productType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramDepartmentType
class ExpressHistogramDepartmentType
  @@schema_type = "ExpressHistogramDepartmentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["domainDetails", ["ExpressHistogramDomainDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DomainDetails")]],
    ["aisle", ["ExpressHistogramAisleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Aisle")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :domainDetails
  attr_accessor :aisle
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil, aisle = [])
    @domainDetails = domainDetails
    @aisle = aisle
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramDomainDetailsType
class ExpressHistogramDomainDetailsType
  @@schema_type = "ExpressHistogramDomainDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["breadCrumb", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BreadCrumb")]],
    ["itemCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemCount")]],
    ["productCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductCount")]],
    ["imageURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ImageURL")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :breadCrumb
  attr_accessor :itemCount
  attr_accessor :productCount
  attr_accessor :imageURL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, breadCrumb = nil, itemCount = nil, productCount = nil, imageURL = nil)
    @name = name
    @breadCrumb = breadCrumb
    @itemCount = itemCount
    @productCount = productCount
    @imageURL = imageURL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramProductType
class ExpressHistogramProductType
  @@schema_type = "ExpressHistogramProductType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["domainDetails", ["ExpressHistogramDomainDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DomainDetails")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :domainDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil)
    @domainDetails = domainDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressItemRequirementsType
class ExpressItemRequirementsType
  @@schema_type = "ExpressItemRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sellerExpressEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerExpressEligible")]],
    ["expressOptOut", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressOptOut")]],
    ["expressApproved", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressApproved")]],
    ["expressEligibleListingType", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEligibleListingType")]],
    ["expressEnabledCategory", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEnabledCategory")]],
    ["eligiblePayPalAccount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EligiblePayPalAccount")]],
    ["domesticShippingCost", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DomesticShippingCost")]],
    ["eligibleReturnPolicy", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EligibleReturnPolicy")]],
    ["picture", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Picture")]],
    ["eligibleItemCondition", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EligibleItemCondition")]],
    ["priceAboveMinimum", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PriceAboveMinimum")]],
    ["priceBelowMaximum", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PriceBelowMaximum")]],
    ["eligibleCheckout", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EligibleCheckout")]],
    ["noPreapprovedBidderList", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NoPreapprovedBidderList")]],
    ["noCharity", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NoCharity")]],
    ["noDigitalDelivery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NoDigitalDelivery")]],
    ["combinedShippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedShippingDiscount")]],
    ["shipFromEligibleCountry", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipFromEligibleCountry")]],
    ["payPalAccountAcceptsUnconfirmedAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAccountAcceptsUnconfirmedAddress")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sellerExpressEligible
  attr_accessor :expressOptOut
  attr_accessor :expressApproved
  attr_accessor :expressEligibleListingType
  attr_accessor :expressEnabledCategory
  attr_accessor :eligiblePayPalAccount
  attr_accessor :domesticShippingCost
  attr_accessor :eligibleReturnPolicy
  attr_accessor :picture
  attr_accessor :eligibleItemCondition
  attr_accessor :priceAboveMinimum
  attr_accessor :priceBelowMaximum
  attr_accessor :eligibleCheckout
  attr_accessor :noPreapprovedBidderList
  attr_accessor :noCharity
  attr_accessor :noDigitalDelivery
  attr_accessor :combinedShippingDiscount
  attr_accessor :shipFromEligibleCountry
  attr_accessor :payPalAccountAcceptsUnconfirmedAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerExpressEligible = nil, expressOptOut = nil, expressApproved = nil, expressEligibleListingType = nil, expressEnabledCategory = nil, eligiblePayPalAccount = nil, domesticShippingCost = nil, eligibleReturnPolicy = nil, picture = nil, eligibleItemCondition = nil, priceAboveMinimum = nil, priceBelowMaximum = nil, eligibleCheckout = nil, noPreapprovedBidderList = nil, noCharity = nil, noDigitalDelivery = nil, combinedShippingDiscount = nil, shipFromEligibleCountry = nil, payPalAccountAcceptsUnconfirmedAddress = nil)
    @sellerExpressEligible = sellerExpressEligible
    @expressOptOut = expressOptOut
    @expressApproved = expressApproved
    @expressEligibleListingType = expressEligibleListingType
    @expressEnabledCategory = expressEnabledCategory
    @eligiblePayPalAccount = eligiblePayPalAccount
    @domesticShippingCost = domesticShippingCost
    @eligibleReturnPolicy = eligibleReturnPolicy
    @picture = picture
    @eligibleItemCondition = eligibleItemCondition
    @priceAboveMinimum = priceAboveMinimum
    @priceBelowMaximum = priceBelowMaximum
    @eligibleCheckout = eligibleCheckout
    @noPreapprovedBidderList = noPreapprovedBidderList
    @noCharity = noCharity
    @noDigitalDelivery = noDigitalDelivery
    @combinedShippingDiscount = combinedShippingDiscount
    @shipFromEligibleCountry = shipFromEligibleCountry
    @payPalAccountAcceptsUnconfirmedAddress = payPalAccountAcceptsUnconfirmedAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressPicturesRequiredDefinitionType
class ExpressPicturesRequiredDefinitionType
  @@schema_type = "ExpressPicturesRequiredDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressPreferencesType
class ExpressPreferencesType
  @@schema_type = "ExpressPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["expressSellingPreference", ["ExpressSellingPreferenceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressSellingPreference")]],
    ["defaultPayPalAccount", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DefaultPayPalAccount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :expressSellingPreference
  attr_accessor :defaultPayPalAccount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressSellingPreference = nil, defaultPayPalAccount = nil)
    @expressSellingPreference = expressSellingPreference
    @defaultPayPalAccount = defaultPayPalAccount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressProductType
class ExpressProductType
  @@schema_type = "ExpressProductType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["stockPhotoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StockPhotoURL")]],
    ["itemCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemCount")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["productReferenceID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductReferenceID")]],
    ["itemSpecifics", ["NameValueListArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemSpecifics")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :title
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :stockPhotoURL
  attr_accessor :itemCount
  attr_accessor :externalProductID
  attr_accessor :productReferenceID
  attr_accessor :itemSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(title = nil, minPrice = nil, maxPrice = nil, stockPhotoURL = nil, itemCount = nil, externalProductID = nil, productReferenceID = nil, itemSpecifics = nil)
    @title = title
    @minPrice = minPrice
    @maxPrice = maxPrice
    @stockPhotoURL = stockPhotoURL
    @itemCount = itemCount
    @externalProductID = externalProductID
    @productReferenceID = productReferenceID
    @itemSpecifics = itemSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressSellerRequirementsType
class ExpressSellerRequirementsType
  @@schema_type = "ExpressSellerRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["expressSellingPreference", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressSellingPreference")]],
    ["expressApproved", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressApproved")]],
    ["goodStanding", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GoodStanding")]],
    ["feedbackScore", ["FeedbackRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["positiveFeedbackPercent", ["FeedbackRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackPercent")]],
    ["feedbackAsSellerScore", ["FeedbackRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackAsSellerScore")]],
    ["positiveFeedbackAsSellerPercent", ["FeedbackRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackAsSellerPercent")]],
    ["businessSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BusinessSeller")]],
    ["eligiblePayPalAccount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EligiblePayPalAccount")]],
    ["payPalAccountAcceptsUnconfirmedAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAccountAcceptsUnconfirmedAddress")]],
    ["combinedPaymentsAccepted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentsAccepted")]],
    ["feedbackPublic", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackPublic")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :expressSellingPreference
  attr_accessor :expressApproved
  attr_accessor :goodStanding
  attr_accessor :feedbackScore
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackAsSellerScore
  attr_accessor :positiveFeedbackAsSellerPercent
  attr_accessor :businessSeller
  attr_accessor :eligiblePayPalAccount
  attr_accessor :payPalAccountAcceptsUnconfirmedAddress
  attr_accessor :combinedPaymentsAccepted
  attr_accessor :feedbackPublic
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressSellingPreference = nil, expressApproved = nil, goodStanding = nil, feedbackScore = nil, positiveFeedbackPercent = nil, feedbackAsSellerScore = nil, positiveFeedbackAsSellerPercent = nil, businessSeller = nil, eligiblePayPalAccount = nil, payPalAccountAcceptsUnconfirmedAddress = nil, combinedPaymentsAccepted = nil, feedbackPublic = nil)
    @expressSellingPreference = expressSellingPreference
    @expressApproved = expressApproved
    @goodStanding = goodStanding
    @feedbackScore = feedbackScore
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackAsSellerScore = feedbackAsSellerScore
    @positiveFeedbackAsSellerPercent = positiveFeedbackAsSellerPercent
    @businessSeller = businessSeller
    @eligiblePayPalAccount = eligiblePayPalAccount
    @payPalAccountAcceptsUnconfirmedAddress = payPalAccountAcceptsUnconfirmedAddress
    @combinedPaymentsAccepted = combinedPaymentsAccepted
    @feedbackPublic = feedbackPublic
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedProductFinderIDType
class ExtendedProductFinderIDType
  @@schema_type = "ExtendedProductFinderIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productFinderBuySide", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderBuySide")]]
  ]

  attr_accessor :productFinderID
  attr_accessor :productFinderBuySide

  def initialize(productFinderID = nil, productFinderBuySide = nil)
    @productFinderID = productFinderID
    @productFinderBuySide = productFinderBuySide
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalAlertIDArrayType
class ExternalAlertIDArrayType < ::Array
  @@schema_element = [
    ["ExternalAlertID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAlertID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductIDType
class ExternalProductIDType
  @@schema_type = "ExternalProductIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["returnSearchResultOnDuplicates", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnSearchResultOnDuplicates")]],
    ["type", ["ExternalProductCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :value
  attr_accessor :returnSearchResultOnDuplicates
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(value = nil, returnSearchResultOnDuplicates = nil, type = nil)
    @value = value
    @returnSearchResultOnDuplicates = returnSearchResultOnDuplicates
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalTransactionType
class ExternalTransactionType
  @@schema_type = "ExternalTransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["externalTransactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransactionID")]],
    ["externalTransactionTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransactionTime")]],
    ["feeOrCreditAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeeOrCreditAmount")]],
    ["paymentOrRefundAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOrRefundAmount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :externalTransactionID
  attr_accessor :externalTransactionTime
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentOrRefundAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(externalTransactionID = nil, externalTransactionTime = nil, feeOrCreditAmount = nil, paymentOrRefundAmount = nil)
    @externalTransactionID = externalTransactionID
    @externalTransactionTime = externalTransactionTime
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentOrRefundAmount = paymentOrRefundAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeatureDefinitionsType
class FeatureDefinitionsType
  @@schema_type = "FeatureDefinitionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingDurations", ["ListingDurationDefinitionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDurations")]],
    ["shippingTermsRequired", ["ShippingTermRequiredDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["BestOfferEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["dutchBINEnabled", ["DutchBINEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DutchBINEnabled")]],
    ["userConsentRequired", ["UserConsentRequiredDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserConsentRequired")]],
    ["homePageFeaturedEnabled", ["HomePageFeaturedEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePageFeaturedEnabled")]],
    ["proPackEnabled", ["ProPackEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackEnabled")]],
    ["basicUpgradePackEnabled", ["BasicUpgradePackEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BasicUpgradePackEnabled")]],
    ["valuePackEnabled", ["ValuePackEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValuePackEnabled")]],
    ["proPackPlusEnabled", ["ProPackPlusEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackPlusEnabled")]],
    ["adFormatEnabled", ["AdFormatEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatEnabled")]],
    ["digitalDeliveryEnabled", ["DigitalDeliveryEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDeliveryEnabled")]],
    ["bestOfferCounterEnabled", ["BestOfferCounterEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCounterEnabled")]],
    ["bestOfferAutoDeclineEnabled", ["BestOfferAutoDeclineEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferAutoDeclineEnabled")]],
    ["localMarketSpecialitySubscription", ["LocalMarketSpecialitySubscriptionDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketSpecialitySubscription")]],
    ["localMarketRegularSubscription", ["LocalMarketRegularSubscriptionDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketRegularSubscription")]],
    ["localMarketPremiumSubscription", ["LocalMarketPremiumSubscriptionDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketPremiumSubscription")]],
    ["localMarketNonSubscription", ["LocalMarketNonSubscriptionDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketNonSubscription")]],
    ["expressEnabled", ["ExpressEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEnabled")]],
    ["expressPicturesRequired", ["ExpressPicturesRequiredDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressPicturesRequired")]],
    ["expressConditionRequired", ["ExpressConditionRequiredDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressConditionRequired")]],
    ["minimumReservePrice", ["MinimumReservePriceDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]],
    ["transactionConfirmationRequestEnabled", ["TCREnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionConfirmationRequestEnabled")]],
    ["sellerContactDetailsEnabled", ["SellerContactDetailsEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerContactDetailsEnabled")]],
    ["storeInventoryEnabled", ["StoreInventoryEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreInventoryEnabled")]],
    ["skypeMeTransactionalEnabled", ["SkypeMeTransactionalEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeTransactionalEnabled")]],
    ["skypeMeNonTransactionalEnabled", ["SkypeMeNonTransactionalEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeNonTransactionalEnabled")]],
    ["localListingDistancesRegular", ["LocalListingDistancesRegularDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesRegular")]],
    ["localListingDistancesSpecialty", ["LocalListingDistancesSpecialtyDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesSpecialty")]],
    ["localListingDistancesNonSubscription", ["LocalListingDistancesNonSubscriptionDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesNonSubscription")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingDurations
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :digitalDeliveryEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDurations = nil, shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, digitalDeliveryEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, transactionConfirmationRequestEnabled = nil, sellerContactDetailsEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil)
    @listingDurations = listingDurations
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @digitalDeliveryEnabled = digitalDeliveryEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeeType
class FeeType
  @@schema_type = "FeeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, fee = nil)
    @name = name
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailArrayType
class FeedbackDetailArrayType < ::Array
  @@schema_element = [
    ["FeedbackDetail", ["FeedbackDetailType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetail")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailType
class FeedbackDetailType
  @@schema_type = "FeedbackDetailType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["commentingUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentingUser")]],
    ["commentingUserScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentingUserScore")]],
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentTime")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["feedbackResponse", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackResponse")]],
    ["followup", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Followup")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["role", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Role")]],
    ["itemTitle", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTitle")]],
    ["itemPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemPrice")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["commentReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentReplaced")]],
    ["responseReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseReplaced")]],
    ["followUpReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FollowUpReplaced")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :commentingUser
  attr_accessor :commentingUserScore
  attr_accessor :commentText
  attr_accessor :commentTime
  attr_accessor :commentType
  attr_accessor :feedbackResponse
  attr_accessor :followup
  attr_accessor :itemID
  attr_accessor :role
  attr_accessor :itemTitle
  attr_accessor :itemPrice
  attr_accessor :feedbackID
  attr_accessor :transactionID
  attr_accessor :commentReplaced
  attr_accessor :responseReplaced
  attr_accessor :followUpReplaced
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentingUser = nil, commentingUserScore = nil, commentText = nil, commentTime = nil, commentType = nil, feedbackResponse = nil, followup = nil, itemID = nil, role = nil, itemTitle = nil, itemPrice = nil, feedbackID = nil, transactionID = nil, commentReplaced = nil, responseReplaced = nil, followUpReplaced = nil)
    @commentingUser = commentingUser
    @commentingUserScore = commentingUserScore
    @commentText = commentText
    @commentTime = commentTime
    @commentType = commentType
    @feedbackResponse = feedbackResponse
    @followup = followup
    @itemID = itemID
    @role = role
    @itemTitle = itemTitle
    @itemPrice = itemPrice
    @feedbackID = feedbackID
    @transactionID = transactionID
    @commentReplaced = commentReplaced
    @responseReplaced = responseReplaced
    @followUpReplaced = followUpReplaced
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackInfoType
class FeedbackInfoType
  @@schema_type = "FeedbackInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["targetUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUser")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :targetUser
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentText = nil, commentType = nil, targetUser = nil)
    @commentText = commentText
    @commentType = commentType
    @targetUser = targetUser
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodArrayType
class FeedbackPeriodArrayType < ::Array
  @@schema_element = [
    ["FeedbackPeriod", ["FeedbackPeriodType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackPeriod")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodType
class FeedbackPeriodType
  @@schema_type = "FeedbackPeriodType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["periodInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodInDays")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :periodInDays
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(periodInDays = nil, count = nil)
    @periodInDays = periodInDays
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRequirementsType
#   contains SOAP::SOAPBoolean
class FeedbackRequirementsType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "minimum") => "SOAP::SOAPString"
  }

  def xmlattr_minimum
    (@__xmlattr ||= {})[XSD::QName.new(nil, "minimum")]
  end

  def xmlattr_minimum=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "minimum")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryType
class FeedbackSummaryType
  @@schema_type = "FeedbackSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bidRetractionFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidRetractionFeedbackPeriodArray")]],
    ["negativeFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NegativeFeedbackPeriodArray")]],
    ["neutralFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NeutralFeedbackPeriodArray")]],
    ["positiveFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackPeriodArray")]],
    ["totalFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalFeedbackPeriodArray")]],
    ["neutralCommentCountFromSuspendedUsers", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NeutralCommentCountFromSuspendedUsers")]],
    ["uniqueNegativeFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniqueNegativeFeedbackCount")]],
    ["uniquePositiveFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniquePositiveFeedbackCount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :bidRetractionFeedbackPeriodArray
  attr_accessor :negativeFeedbackPeriodArray
  attr_accessor :neutralFeedbackPeriodArray
  attr_accessor :positiveFeedbackPeriodArray
  attr_accessor :totalFeedbackPeriodArray
  attr_accessor :neutralCommentCountFromSuspendedUsers
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidRetractionFeedbackPeriodArray = nil, negativeFeedbackPeriodArray = nil, neutralFeedbackPeriodArray = nil, positiveFeedbackPeriodArray = nil, totalFeedbackPeriodArray = nil, neutralCommentCountFromSuspendedUsers = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil)
    @bidRetractionFeedbackPeriodArray = bidRetractionFeedbackPeriodArray
    @negativeFeedbackPeriodArray = negativeFeedbackPeriodArray
    @neutralFeedbackPeriodArray = neutralFeedbackPeriodArray
    @positiveFeedbackPeriodArray = positiveFeedbackPeriodArray
    @totalFeedbackPeriodArray = totalFeedbackPeriodArray
    @neutralCommentCountFromSuspendedUsers = neutralCommentCountFromSuspendedUsers
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeesType
class FeesType < ::Array
  @@schema_element = [
    ["Fee", ["FeeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}FinanceOfferArrayType
class FinanceOfferArrayType < ::Array
  @@schema_element = [
    ["FinanceOffer", ["FinanceOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOffer")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}FinanceOfferType
class FinanceOfferType
  @@schema_type = "FinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["buyerTerms", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerTerms")]],
    ["sellerTerms", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerTerms")]],
    ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartDate")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]],
    ["minimumAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumAmount")]],
    ["rateFactor", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RateFactor")]],
    ["priority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :financeOfferID
  attr_accessor :buyerTerms
  attr_accessor :sellerTerms
  attr_accessor :startDate
  attr_accessor :lastModifiedDate
  attr_accessor :minimumAmount
  attr_accessor :rateFactor
  attr_accessor :priority
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(financeOfferID = nil, buyerTerms = nil, sellerTerms = nil, startDate = nil, lastModifiedDate = nil, minimumAmount = nil, rateFactor = nil, priority = nil)
    @financeOfferID = financeOfferID
    @buyerTerms = buyerTerms
    @sellerTerms = sellerTerms
    @startDate = startDate
    @lastModifiedDate = lastModifiedDate
    @minimumAmount = minimumAmount
    @rateFactor = rateFactor
    @priority = priority
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCostType
class FlatRateInsuranceRangeCostType
  @@schema_type = "FlatRateInsuranceRangeCostType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["flatRateInsuranceRange", ["FlatRateInsuranceRangeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatRateInsuranceRange")]],
    ["insuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceCost")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :flatRateInsuranceRange
  attr_accessor :insuranceCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(flatRateInsuranceRange = nil, insuranceCost = nil)
    @flatRateInsuranceRange = flatRateInsuranceRange
    @insuranceCost = insuranceCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingPreferencesType
class FlatShippingPreferencesType
  @@schema_type = "FlatShippingPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["amountPerAdditionalItem", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPerAdditionalItem")]],
    ["deductionAmountPerAdditionalItem", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeductionAmountPerAdditionalItem")]],
    ["flatRateInsuranceRangeCost", ["FlatRateInsuranceRangeCostType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatRateInsuranceRangeCost")]],
    ["flatShippingRateOption", ["FlatShippingRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatShippingRateOption")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :amountPerAdditionalItem
  attr_accessor :deductionAmountPerAdditionalItem
  attr_accessor :flatRateInsuranceRangeCost
  attr_accessor :flatShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPerAdditionalItem = nil, deductionAmountPerAdditionalItem = nil, flatRateInsuranceRangeCost = [], flatShippingRateOption = nil, insuranceOption = nil)
    @amountPerAdditionalItem = amountPerAdditionalItem
    @deductionAmountPerAdditionalItem = deductionAmountPerAdditionalItem
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @flatShippingRateOption = flatShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestContainerType
class GetRecommendationsRequestContainerType
  @@schema_type = "GetRecommendationsRequestContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingFlow", ["ListingFlowCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingFlow")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["recommendationEngine", ["RecommendationEngineCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecommendationEngine")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["deletedField", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeletedField")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :externalProductID
  attr_accessor :modifiedFields
  attr_accessor :recommendationEngine
  attr_accessor :query
  attr_accessor :correlationID
  attr_accessor :deletedField
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingFlow = nil, item = nil, externalProductID = nil, modifiedFields = [], recommendationEngine = [], query = nil, correlationID = nil, deletedField = [])
    @listingFlow = listingFlow
    @item = item
    @externalProductID = externalProductID
    @modifiedFields = modifiedFields
    @recommendationEngine = recommendationEngine
    @query = query
    @correlationID = correlationID
    @deletedField = deletedField
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseContainerType
class GetRecommendationsResponseContainerType
  @@schema_type = "GetRecommendationsResponseContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingAnalyzerRecommendations", ["ListingAnalyzerRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingAnalyzerRecommendations")]],
    ["sIFFTASRecommendations", ["SIFFTASRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SIFFTASRecommendations")]],
    ["pricingRecommendations", ["PricingRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PricingRecommendations")]],
    ["attributeRecommendations", ["AttributeRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeRecommendations")]],
    ["productRecommendations", ["ProductRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductRecommendations")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations
  attr_accessor :correlationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil, correlationID = nil)
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
    @correlationID = correlationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HomePageFeaturedEnabledDefinitionType
class HomePageFeaturedEnabledDefinitionType
  @@schema_type = "HomePageFeaturedEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceDetailsType
class InsuranceDetailsType
  @@schema_type = "InsuranceDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["insuranceFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceFee")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(insuranceFee = nil, insuranceOption = nil)
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InternationalShippingServiceOptionsType
class InternationalShippingServiceOptionsType
  @@schema_type = "InternationalShippingServiceOptionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingService", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceCost")]],
    ["shippingServiceAdditionalCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceAdditionalCost")]],
    ["shippingServicePriority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServicePriority")]],
    ["shipToLocation", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipToLocation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :shipToLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, shipToLocation = [])
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @shipToLocation = shipToLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemArrayType
class ItemArrayType < ::Array
  @@schema_element = [
    ["Item", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ItemListCustomizationType
class ItemListCustomizationType
  @@schema_type = "ItemListCustomizationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["sort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["durationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DurationInDays")]],
    ["includeNotes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeNotes")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :include
  attr_accessor :listingType
  attr_accessor :sort
  attr_accessor :durationInDays
  attr_accessor :includeNotes
  attr_accessor :pagination
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, listingType = nil, sort = nil, durationInDays = nil, includeNotes = nil, pagination = nil)
    @include = include
    @listingType = listingType
    @sort = sort
    @durationInDays = durationInDays
    @includeNotes = includeNotes
    @pagination = pagination
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTotalsType
class ItemTotalsType
  @@schema_type = "ItemTotalsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalQuantity", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalQuantity")]],
    ["totalValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalValue")]]
  ]

  attr_accessor :totalQuantity
  attr_accessor :totalValue

  def initialize(totalQuantity = nil, totalValue = nil)
    @totalQuantity = totalQuantity
    @totalValue = totalValue
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDArrayType
class ItemTransactionIDArrayType < ::Array
  @@schema_element = [
    ["ItemTransactionID", ["ItemTransactionIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTransactionID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDType
class ItemTransactionIDType
  @@schema_type = "ItemTransactionIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :itemID
  attr_accessor :transactionID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemType
class ItemType
  @@schema_type = "ItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["applicationData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationData")]],
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["attributeArray", ["AttributeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeArray")]],
    ["lookupAttributeArray", ["LookupAttributeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LookupAttributeArray")]],
    ["applyShippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplyShippingDiscount")]],
    ["autoPay", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AutoPay")]],
    ["paymentDetails", ["PaymentDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentDetails")]],
    ["biddingDetails", ["BiddingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingDetails")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["buyerProtection", ["BuyerProtectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerProtection")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["categoryMappingAllowed", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryMappingAllowed")]],
    ["charity", ["CharityType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Charity")]],
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["crossPromotion", ["CrossPromotionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotion")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["descriptionReviseMode", ["DescriptionReviseModeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescriptionReviseMode")]],
    ["distance", ["DistanceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Distance")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["giftIcon", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GiftIcon")]],
    ["giftServices", ["GiftServicesCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GiftServices")]],
    ["hitCounter", ["HitCounterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HitCounter")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["listingDetails", ["ListingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDetails")]],
    ["listingDesigner", ["ListingDesignerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDesigner")]],
    ["listingDuration", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["listingEnhancement", ["ListingEnhancementsCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingEnhancement")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["listingSubtype", ["ListingSubtypeEnum", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingSubtype")]],
    ["location", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Location")]],
    ["lotSize", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LotSize")]],
    ["nowAndNew", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NowAndNew")]],
    ["partnerCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartnerCode")]],
    ["partnerName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartnerName")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["payPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalEmailAddress")]],
    ["primaryCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrimaryCategory")]],
    ["privateListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateListing")]],
    ["productListingDetails", ["ProductListingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductListingDetails")]],
    ["proximitySearchDetails", ["ProximitySearchDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearchDetails")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["privateNotes", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateNotes")]],
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["relistLink", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistLink")]],
    ["reservePrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePrice")]],
    ["reviseStatus", ["ReviseStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReviseStatus")]],
    ["scheduleTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleTime")]],
    ["secondaryCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondaryCategory")]],
    ["freeAddedCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FreeAddedCategory")]],
    ["siteHostedPicture", ["SiteHostedPictureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteHostedPicture")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]],
    ["sellingStatus", ["SellingStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingStatus")]],
    ["shippingOption", ["ShippingOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingOption")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["shippingRegions", ["ShippingRegionCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRegions")]],
    ["shippingTerms", ["ShippingTermsCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTerms")]],
    ["shipToLocations", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipToLocations")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["startPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartPrice")]],
    ["storefront", ["StorefrontType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Storefront")]],
    ["subTitle", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubTitle")]],
    ["timeLeft", ["SOAP::SOAPDuration", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeLeft")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["uUID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UUID")]],
    ["vATDetails", ["VATDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATDetails")]],
    ["vendorHostedPicture", ["VendorHostedPictureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VendorHostedPicture")]],
    ["sellerVacationNote", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerVacationNote")]],
    ["watchCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchCount")]],
    ["hitCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HitCount")]],
    ["disableBuyerRequirements", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisableBuyerRequirements")]],
    ["buyerRequirements", ["BuyerRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerRequirements")]],
    ["bestOfferDetails", ["BestOfferDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferDetails")]],
    ["anythingPoints", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AnythingPoints")]],
    ["liveAuctionDetails", ["LiveAuctionDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionDetails")]],
    ["locationDefaulted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocationDefaulted")]],
    ["thirdPartyCheckout", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThirdPartyCheckout")]],
    ["useTaxTable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseTaxTable")]],
    ["getItFast", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetItFast")]],
    ["buyerResponsibleForShipping", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerResponsibleForShipping")]],
    ["limitedWarrantyEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LimitedWarrantyEligible")]],
    ["eBayNotes", "SOAP::SOAPString"],
    ["questionCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuestionCount")]],
    ["relisted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Relisted")]],
    ["quantityAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityAvailable")]],
    ["sKU", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SKU")]],
    ["categoryBasedAttributesPrefill", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryBasedAttributesPrefill")]],
    ["searchDetails", ["SearchDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchDetails")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["shippingTermsInDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsInDescription")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]],
    ["pictureDetails", ["PictureDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureDetails")]],
    ["digitalDeliveryDetails", ["DigitalDeliveryDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDeliveryDetails")]],
    ["dispatchTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DispatchTimeMax")]],
    ["skypeEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeEnabled")]],
    ["skypeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeID")]],
    ["skypeOption", ["SkypeOptionCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeOption")]],
    ["skypeContactOption", ["SkypeContactOptionCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeContactOption")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["localListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListing")]],
    ["thirdPartyCheckoutIntegration", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThirdPartyCheckoutIntegration")]],
    ["expressOptOut", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressOptOut")]],
    ["listingCheckoutRedirectPreference", ["ListingCheckoutRedirectPreferenceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingCheckoutRedirectPreference")]],
    ["expressDetails", ["ExpressDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressDetails")]],
    ["sellerContactDetails", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerContactDetails")]],
    ["totalQuestionCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalQuestionCount")]],
    ["proxyItem", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProxyItem")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :applicationData
  attr_accessor :attributeSetArray
  attr_accessor :attributeArray
  attr_accessor :lookupAttributeArray
  attr_accessor :applyShippingDiscount
  attr_accessor :autoPay
  attr_accessor :paymentDetails
  attr_accessor :biddingDetails
  attr_accessor :motorsGermanySearchable
  attr_accessor :buyerProtection
  attr_accessor :buyItNowPrice
  attr_accessor :categoryMappingAllowed
  attr_accessor :charity
  attr_accessor :country
  attr_accessor :crossPromotion
  attr_accessor :currency
  attr_accessor :description
  attr_accessor :descriptionReviseMode
  attr_accessor :distance
  attr_accessor :financeOfferID
  attr_accessor :giftIcon
  attr_accessor :giftServices
  attr_accessor :hitCounter
  attr_accessor :itemID
  attr_accessor :listingDetails
  attr_accessor :listingDesigner
  attr_accessor :listingDuration
  attr_accessor :listingEnhancement
  attr_accessor :listingType
  attr_accessor :listingSubtype
  attr_accessor :location
  attr_accessor :lotSize
  attr_accessor :nowAndNew
  attr_accessor :partnerCode
  attr_accessor :partnerName
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :primaryCategory
  attr_accessor :privateListing
  attr_accessor :productListingDetails
  attr_accessor :proximitySearchDetails
  attr_accessor :quantity
  attr_accessor :privateNotes
  attr_accessor :regionID
  attr_accessor :relistLink
  attr_accessor :reservePrice
  attr_accessor :reviseStatus
  attr_accessor :scheduleTime
  attr_accessor :secondaryCategory
  attr_accessor :freeAddedCategory
  attr_accessor :siteHostedPicture
  attr_accessor :seller
  attr_accessor :sellingStatus
  attr_accessor :shippingOption
  attr_accessor :shippingDetails
  attr_accessor :shippingRegions
  attr_accessor :shippingTerms
  attr_accessor :shipToLocations
  attr_accessor :site
  attr_accessor :startPrice
  attr_accessor :storefront
  attr_accessor :subTitle
  attr_accessor :timeLeft
  attr_accessor :title
  attr_accessor :uUID
  attr_accessor :vATDetails
  attr_accessor :vendorHostedPicture
  attr_accessor :sellerVacationNote
  attr_accessor :watchCount
  attr_accessor :hitCount
  attr_accessor :disableBuyerRequirements
  attr_accessor :buyerRequirements
  attr_accessor :bestOfferDetails
  attr_accessor :anythingPoints
  attr_accessor :liveAuctionDetails
  attr_accessor :locationDefaulted
  attr_accessor :thirdPartyCheckout
  attr_accessor :useTaxTable
  attr_accessor :getItFast
  attr_accessor :buyerResponsibleForShipping
  attr_accessor :limitedWarrantyEligible
  attr_accessor :eBayNotes
  attr_accessor :questionCount
  attr_accessor :relisted
  attr_accessor :quantityAvailable
  attr_accessor :sKU
  attr_accessor :categoryBasedAttributesPrefill
  attr_accessor :searchDetails
  attr_accessor :postalCode
  attr_accessor :shippingTermsInDescription
  attr_accessor :externalProductID
  attr_accessor :sellerInventoryID
  attr_accessor :pictureDetails
  attr_accessor :digitalDeliveryDetails
  attr_accessor :dispatchTimeMax
  attr_accessor :skypeEnabled
  attr_accessor :skypeID
  attr_accessor :skypeOption
  attr_accessor :skypeContactOption
  attr_accessor :bestOfferEnabled
  attr_accessor :localListing
  attr_accessor :thirdPartyCheckoutIntegration
  attr_accessor :expressOptOut
  attr_accessor :listingCheckoutRedirectPreference
  attr_accessor :expressDetails
  attr_accessor :sellerContactDetails
  attr_accessor :totalQuestionCount
  attr_accessor :proxyItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationData = nil, attributeSetArray = nil, attributeArray = nil, lookupAttributeArray = nil, applyShippingDiscount = nil, autoPay = nil, paymentDetails = nil, biddingDetails = nil, motorsGermanySearchable = nil, buyerProtection = nil, buyItNowPrice = nil, categoryMappingAllowed = nil, charity = nil, country = nil, crossPromotion = nil, currency = nil, description = nil, descriptionReviseMode = nil, distance = nil, financeOfferID = nil, giftIcon = nil, giftServices = [], hitCounter = nil, itemID = nil, listingDetails = nil, listingDesigner = nil, listingDuration = nil, listingEnhancement = [], listingType = nil, listingSubtype = nil, location = nil, lotSize = nil, nowAndNew = nil, partnerCode = nil, partnerName = nil, paymentMethods = [], payPalEmailAddress = nil, primaryCategory = nil, privateListing = nil, productListingDetails = nil, proximitySearchDetails = nil, quantity = nil, privateNotes = nil, regionID = nil, relistLink = nil, reservePrice = nil, reviseStatus = nil, scheduleTime = nil, secondaryCategory = nil, freeAddedCategory = nil, siteHostedPicture = nil, seller = nil, sellingStatus = nil, shippingOption = nil, shippingDetails = nil, shippingRegions = [], shippingTerms = nil, shipToLocations = [], site = nil, startPrice = nil, storefront = nil, subTitle = nil, timeLeft = nil, title = nil, uUID = nil, vATDetails = nil, vendorHostedPicture = nil, sellerVacationNote = nil, watchCount = nil, hitCount = nil, disableBuyerRequirements = nil, buyerRequirements = nil, bestOfferDetails = nil, anythingPoints = nil, liveAuctionDetails = nil, locationDefaulted = nil, thirdPartyCheckout = nil, useTaxTable = nil, getItFast = nil, buyerResponsibleForShipping = nil, limitedWarrantyEligible = nil, eBayNotes = nil, questionCount = nil, relisted = nil, quantityAvailable = nil, sKU = nil, categoryBasedAttributesPrefill = nil, searchDetails = nil, postalCode = nil, shippingTermsInDescription = nil, externalProductID = nil, sellerInventoryID = nil, pictureDetails = nil, digitalDeliveryDetails = nil, dispatchTimeMax = nil, skypeEnabled = nil, skypeID = nil, skypeOption = [], skypeContactOption = [], bestOfferEnabled = nil, localListing = nil, thirdPartyCheckoutIntegration = nil, expressOptOut = nil, listingCheckoutRedirectPreference = nil, expressDetails = nil, sellerContactDetails = nil, totalQuestionCount = nil, proxyItem = nil)
    @applicationData = applicationData
    @attributeSetArray = attributeSetArray
    @attributeArray = attributeArray
    @lookupAttributeArray = lookupAttributeArray
    @applyShippingDiscount = applyShippingDiscount
    @autoPay = autoPay
    @paymentDetails = paymentDetails
    @biddingDetails = biddingDetails
    @motorsGermanySearchable = motorsGermanySearchable
    @buyerProtection = buyerProtection
    @buyItNowPrice = buyItNowPrice
    @categoryMappingAllowed = categoryMappingAllowed
    @charity = charity
    @country = country
    @crossPromotion = crossPromotion
    @currency = currency
    @description = description
    @descriptionReviseMode = descriptionReviseMode
    @distance = distance
    @financeOfferID = financeOfferID
    @giftIcon = giftIcon
    @giftServices = giftServices
    @hitCounter = hitCounter
    @itemID = itemID
    @listingDetails = listingDetails
    @listingDesigner = listingDesigner
    @listingDuration = listingDuration
    @listingEnhancement = listingEnhancement
    @listingType = listingType
    @listingSubtype = listingSubtype
    @location = location
    @lotSize = lotSize
    @nowAndNew = nowAndNew
    @partnerCode = partnerCode
    @partnerName = partnerName
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @primaryCategory = primaryCategory
    @privateListing = privateListing
    @productListingDetails = productListingDetails
    @proximitySearchDetails = proximitySearchDetails
    @quantity = quantity
    @privateNotes = privateNotes
    @regionID = regionID
    @relistLink = relistLink
    @reservePrice = reservePrice
    @reviseStatus = reviseStatus
    @scheduleTime = scheduleTime
    @secondaryCategory = secondaryCategory
    @freeAddedCategory = freeAddedCategory
    @siteHostedPicture = siteHostedPicture
    @seller = seller
    @sellingStatus = sellingStatus
    @shippingOption = shippingOption
    @shippingDetails = shippingDetails
    @shippingRegions = shippingRegions
    @shippingTerms = shippingTerms
    @shipToLocations = shipToLocations
    @site = site
    @startPrice = startPrice
    @storefront = storefront
    @subTitle = subTitle
    @timeLeft = timeLeft
    @title = title
    @uUID = uUID
    @vATDetails = vATDetails
    @vendorHostedPicture = vendorHostedPicture
    @sellerVacationNote = sellerVacationNote
    @watchCount = watchCount
    @hitCount = hitCount
    @disableBuyerRequirements = disableBuyerRequirements
    @buyerRequirements = buyerRequirements
    @bestOfferDetails = bestOfferDetails
    @anythingPoints = anythingPoints
    @liveAuctionDetails = liveAuctionDetails
    @locationDefaulted = locationDefaulted
    @thirdPartyCheckout = thirdPartyCheckout
    @useTaxTable = useTaxTable
    @getItFast = getItFast
    @buyerResponsibleForShipping = buyerResponsibleForShipping
    @limitedWarrantyEligible = limitedWarrantyEligible
    @eBayNotes = eBayNotes
    @questionCount = questionCount
    @relisted = relisted
    @quantityAvailable = quantityAvailable
    @sKU = sKU
    @categoryBasedAttributesPrefill = categoryBasedAttributesPrefill
    @searchDetails = searchDetails
    @postalCode = postalCode
    @shippingTermsInDescription = shippingTermsInDescription
    @externalProductID = externalProductID
    @sellerInventoryID = sellerInventoryID
    @pictureDetails = pictureDetails
    @digitalDeliveryDetails = digitalDeliveryDetails
    @dispatchTimeMax = dispatchTimeMax
    @skypeEnabled = skypeEnabled
    @skypeID = skypeID
    @skypeOption = skypeOption
    @skypeContactOption = skypeContactOption
    @bestOfferEnabled = bestOfferEnabled
    @localListing = localListing
    @thirdPartyCheckoutIntegration = thirdPartyCheckoutIntegration
    @expressOptOut = expressOptOut
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @expressDetails = expressDetails
    @sellerContactDetails = sellerContactDetails
    @totalQuestionCount = totalQuestionCount
    @proxyItem = proxyItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LabelType
class LabelType
  @@schema_type = "LabelType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "visible") => "SOAP::SOAPBoolean"
  }
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_visible
    (@__xmlattr ||= {})[XSD::QName.new(nil, "visible")]
  end

  def xmlattr_visible=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "visible")] = value
  end

  def initialize(name = nil)
    @name = name
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingAnalyzerRecommendationsType
class ListingAnalyzerRecommendationsType
  @@schema_type = "ListingAnalyzerRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipArray", ["ListingTipArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingTipArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipArray = nil)
    @listingTipArray = listingTipArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingCheckoutRedirectPreferenceType
class ListingCheckoutRedirectPreferenceType
  @@schema_type = "ListingCheckoutRedirectPreferenceType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["proStoresStoreName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProStoresStoreName")]],
    ["sellerThirdPartyUsername", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerThirdPartyUsername")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :proStoresStoreName
  attr_accessor :sellerThirdPartyUsername
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(proStoresStoreName = nil, sellerThirdPartyUsername = nil)
    @proStoresStoreName = proStoresStoreName
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDesignerType
class ListingDesignerType
  @@schema_type = "ListingDesignerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["layoutID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LayoutID")]],
    ["optimalPictureSize", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OptimalPictureSize")]],
    ["themeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :layoutID
  attr_accessor :optimalPictureSize
  attr_accessor :themeID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(layoutID = nil, optimalPictureSize = nil, themeID = nil)
    @layoutID = layoutID
    @optimalPictureSize = optimalPictureSize
    @themeID = themeID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDetailsType
class ListingDetailsType
  @@schema_type = "ListingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["adult", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Adult")]],
    ["bindingAuction", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BindingAuction")]],
    ["checkoutEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutEnabled")]],
    ["convertedBuyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedBuyItNowPrice")]],
    ["convertedStartPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedStartPrice")]],
    ["convertedReservePrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedReservePrice")]],
    ["hasReservePrice", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasReservePrice")]],
    ["regionName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionName")]],
    ["relistedItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistedItemID")]],
    ["secondChanceOriginalItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOriginalItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["viewItemURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewItemURL")]],
    ["hasUnansweredQuestions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasUnansweredQuestions")]],
    ["hasPublicMessages", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasPublicMessages")]],
    ["buyItNowAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowAvailable")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["minimumBestOfferPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumBestOfferPrice")]],
    ["minimumBestOfferMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumBestOfferMessage")]],
    ["localListingDistance", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistance")]],
    ["expressListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressListing")]],
    ["expressItemRequirements", ["ExpressItemRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressItemRequirements")]],
    ["tCROriginalItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TCROriginalItemID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :adult
  attr_accessor :bindingAuction
  attr_accessor :checkoutEnabled
  attr_accessor :convertedBuyItNowPrice
  attr_accessor :convertedStartPrice
  attr_accessor :convertedReservePrice
  attr_accessor :hasReservePrice
  attr_accessor :regionName
  attr_accessor :relistedItemID
  attr_accessor :secondChanceOriginalItemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :viewItemURL
  attr_accessor :hasUnansweredQuestions
  attr_accessor :hasPublicMessages
  attr_accessor :buyItNowAvailable
  attr_accessor :sellerBusinessType
  attr_accessor :minimumBestOfferPrice
  attr_accessor :minimumBestOfferMessage
  attr_accessor :localListingDistance
  attr_accessor :expressListing
  attr_accessor :expressItemRequirements
  attr_accessor :tCROriginalItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(adult = nil, bindingAuction = nil, checkoutEnabled = nil, convertedBuyItNowPrice = nil, convertedStartPrice = nil, convertedReservePrice = nil, hasReservePrice = nil, regionName = nil, relistedItemID = nil, secondChanceOriginalItemID = nil, startTime = nil, endTime = nil, viewItemURL = nil, hasUnansweredQuestions = nil, hasPublicMessages = nil, buyItNowAvailable = nil, sellerBusinessType = nil, minimumBestOfferPrice = nil, minimumBestOfferMessage = nil, localListingDistance = nil, expressListing = nil, expressItemRequirements = nil, tCROriginalItemID = nil)
    @adult = adult
    @bindingAuction = bindingAuction
    @checkoutEnabled = checkoutEnabled
    @convertedBuyItNowPrice = convertedBuyItNowPrice
    @convertedStartPrice = convertedStartPrice
    @convertedReservePrice = convertedReservePrice
    @hasReservePrice = hasReservePrice
    @regionName = regionName
    @relistedItemID = relistedItemID
    @secondChanceOriginalItemID = secondChanceOriginalItemID
    @startTime = startTime
    @endTime = endTime
    @viewItemURL = viewItemURL
    @hasUnansweredQuestions = hasUnansweredQuestions
    @hasPublicMessages = hasPublicMessages
    @buyItNowAvailable = buyItNowAvailable
    @sellerBusinessType = sellerBusinessType
    @minimumBestOfferPrice = minimumBestOfferPrice
    @minimumBestOfferMessage = minimumBestOfferMessage
    @localListingDistance = localListingDistance
    @expressListing = expressListing
    @expressItemRequirements = expressItemRequirements
    @tCROriginalItemID = tCROriginalItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionType
class ListingDurationDefinitionType
  @@schema_type = "ListingDurationDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "durationSetID") => "SOAP::SOAPInt"
  }
  @@schema_element = [
    ["duration", ["Token[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_durationSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "durationSetID")]
  end

  def xmlattr_durationSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "durationSetID")] = value
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionsType
class ListingDurationDefinitionsType
  @@schema_type = "ListingDurationDefinitionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "Version") => "SOAP::SOAPInt"
  }
  @@schema_element = [
    ["listingDuration", ["ListingDurationDefinitionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]]
  ]

  attr_accessor :listingDuration

  def xmlattr_Version
    (@__xmlattr ||= {})[XSD::QName.new(nil, "Version")]
  end

  def xmlattr_Version=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "Version")] = value
  end

  def initialize(listingDuration = [])
    @listingDuration = listingDuration
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationReferenceType
#   contains SOAP::SOAPInt
class ListingDurationReferenceType < ::String
  @@schema_attribute = {
    XSD::QName.new(nil, "type") => nil
  }

  def xmlattr_type
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")]
  end

  def xmlattr_type=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipArrayType
class ListingTipArrayType < ::Array
  @@schema_element = [
    ["ListingTip", ["ListingTipType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTip")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipFieldType
class ListingTipFieldType
  @@schema_type = "ListingTipFieldType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipFieldID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipFieldID")]],
    ["fieldTip", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FieldTip")]],
    ["currentFieldText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentFieldText")]],
    ["currentFieldValue", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentFieldValue")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingTipFieldID
  attr_accessor :fieldTip
  attr_accessor :currentFieldText
  attr_accessor :currentFieldValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipFieldID = nil, fieldTip = nil, currentFieldText = nil, currentFieldValue = nil)
    @listingTipFieldID = listingTipFieldID
    @fieldTip = fieldTip
    @currentFieldText = currentFieldText
    @currentFieldValue = currentFieldValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipMessageType
class ListingTipMessageType
  @@schema_type = "ListingTipMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipMessageID")]],
    ["shortMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShortMessage")]],
    ["longMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LongMessage")]],
    ["helpURLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HelpURLPath")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingTipMessageID
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :helpURLPath
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipMessageID = nil, shortMessage = nil, longMessage = nil, helpURLPath = nil)
    @listingTipMessageID = listingTipMessageID
    @shortMessage = shortMessage
    @longMessage = longMessage
    @helpURLPath = helpURLPath
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipType
class ListingTipType
  @@schema_type = "ListingTipType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipID")]],
    ["priority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["message", ["ListingTipMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["field", ["ListingTipFieldType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Field")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingTipID
  attr_accessor :priority
  attr_accessor :message
  attr_accessor :field
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipID = nil, priority = nil, message = nil, field = nil)
    @listingTipID = listingTipID
    @priority = priority
    @message = message
    @field = field
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionApprovalStatusArrayType
class LiveAuctionApprovalStatusArrayType < ::Array
  @@schema_element = [
    ["LiveAuctionStatus", ["LiveAuctionApprovalStatusType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionStatus")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionApprovalStatusType
class LiveAuctionApprovalStatusType
  @@schema_type = "LiveAuctionApprovalStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["status", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]]
  ]

  attr_accessor :userID
  attr_accessor :status

  def initialize(userID = nil, status = nil)
    @userID = userID
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionBidArrayType
class LiveAuctionBidArrayType < ::Array
  @@schema_element = [
    ["LiveAuctionBid", ["LiveAuctionBidType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionBid")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionBidType
class LiveAuctionBidType
  @@schema_type = "LiveAuctionBidType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["requestedBiddingLimit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RequestedBiddingLimit")]],
    ["bidderStatus", ["BidderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderStatus")]],
    ["approvedBiddingLimit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApprovedBiddingLimit")]],
    ["declinedComment", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeclinedComment")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :requestedBiddingLimit
  attr_accessor :bidderStatus
  attr_accessor :approvedBiddingLimit
  attr_accessor :declinedComment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(requestedBiddingLimit = nil, bidderStatus = nil, approvedBiddingLimit = nil, declinedComment = nil)
    @requestedBiddingLimit = requestedBiddingLimit
    @bidderStatus = bidderStatus
    @approvedBiddingLimit = approvedBiddingLimit
    @declinedComment = declinedComment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionCatalogType
class LiveAuctionCatalogType
  @@schema_type = "LiveAuctionCatalogType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["catalogName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CatalogName")]],
    ["schedule", ["ScheduleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Schedule")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userCatalogID
  attr_accessor :catalogName
  attr_accessor :schedule
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, catalogName = nil, schedule = [])
    @userCatalogID = userCatalogID
    @catalogName = catalogName
    @schedule = schedule
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionDetailsType
class LiveAuctionDetailsType
  @@schema_type = "LiveAuctionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["scheduleID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleID")]],
    ["lotNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LotNumber")]],
    ["highEstimate", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighEstimate")]],
    ["lowEstimate", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LowEstimate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userCatalogID
  attr_accessor :scheduleID
  attr_accessor :lotNumber
  attr_accessor :highEstimate
  attr_accessor :lowEstimate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, scheduleID = nil, lotNumber = nil, highEstimate = nil, lowEstimate = nil)
    @userCatalogID = userCatalogID
    @scheduleID = scheduleID
    @lotNumber = lotNumber
    @highEstimate = highEstimate
    @lowEstimate = lowEstimate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesNonSubscriptionDefinitionType
class LocalListingDistancesNonSubscriptionDefinitionType
  @@schema_type = "LocalListingDistancesNonSubscriptionDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesRegularDefinitionType
class LocalListingDistancesRegularDefinitionType
  @@schema_type = "LocalListingDistancesRegularDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesSpecialtyDefinitionType
class LocalListingDistancesSpecialtyDefinitionType
  @@schema_type = "LocalListingDistancesSpecialtyDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketNonSubscriptionDefinitionType
class LocalMarketNonSubscriptionDefinitionType
  @@schema_type = "LocalMarketNonSubscriptionDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPremiumSubscriptionDefinitionType
class LocalMarketPremiumSubscriptionDefinitionType
  @@schema_type = "LocalMarketPremiumSubscriptionDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketRegularSubscriptionDefinitionType
class LocalMarketRegularSubscriptionDefinitionType
  @@schema_type = "LocalMarketRegularSubscriptionDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketSpecialitySubscriptionDefinitionType
class LocalMarketSpecialitySubscriptionDefinitionType
  @@schema_type = "LocalMarketSpecialitySubscriptionDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalSearchType
class LocalSearchType
  @@schema_type = "LocalSearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxDistance", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxDistance")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeArrayType
class LookupAttributeArrayType < ::Array
  @@schema_element = [
    ["LookupAttribute", ["LookupAttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LookupAttribute")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeType
class LookupAttributeType
  @@schema_type = "LookupAttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = nil)
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventType
class MarkUpMarkDownEventType
  @@schema_type = "MarkUpMarkDownEventType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["type", ["MarkUpMarkDownEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["time", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Time")]],
    ["reason", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Reason")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :type
  attr_accessor :time
  attr_accessor :reason
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, time = nil, reason = nil)
    @type = type
    @time = time
    @reason = reason
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownHistoryType
class MarkUpMarkDownHistoryType < ::Array
  @@schema_element = [
    ["MarkUpMarkDownEvent", ["MarkUpMarkDownEventType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MarkUpMarkDownEvent")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MaximumItemRequirementsType
class MaximumItemRequirementsType
  @@schema_type = "MaximumItemRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maximumItemCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaximumItemCount")]],
    ["minimumFeedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumFeedbackScore")]]
  ]

  attr_accessor :maximumItemCount
  attr_accessor :minimumFeedbackScore

  def initialize(maximumItemCount = nil, minimumFeedbackScore = nil)
    @maximumItemCount = maximumItemCount
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeArrayType
class MemberMessageExchangeArrayType < ::Array
  @@schema_element = [
    ["MemberMessageExchange", ["MemberMessageExchangeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessageExchange")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeType
class MemberMessageExchangeType
  @@schema_type = "MemberMessageExchangeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["question", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Question")]],
    ["response", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Response")]],
    ["messageStatus", ["MessageStatusTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStatus")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :item
  attr_accessor :question
  attr_accessor :response
  attr_accessor :messageStatus
  attr_accessor :creationDate
  attr_accessor :lastModifiedDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, question = nil, response = [], messageStatus = nil, creationDate = nil, lastModifiedDate = nil)
    @item = item
    @question = question
    @response = response
    @messageStatus = messageStatus
    @creationDate = creationDate
    @lastModifiedDate = lastModifiedDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageType
class MemberMessageType
  @@schema_type = "MemberMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["messageType", ["MessageTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageType")]],
    ["questionType", ["QuestionTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuestionType")]],
    ["emailCopyToSender", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCopyToSender")]],
    ["hideSendersEmailAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HideSendersEmailAddress")]],
    ["displayToPublic", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayToPublic")]],
    ["senderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SenderID")]],
    ["senderEmail", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SenderEmail")]],
    ["recipientID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientID")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["body", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Body")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["parentMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ParentMessageID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :messageType
  attr_accessor :questionType
  attr_accessor :emailCopyToSender
  attr_accessor :hideSendersEmailAddress
  attr_accessor :displayToPublic
  attr_accessor :senderID
  attr_accessor :senderEmail
  attr_accessor :recipientID
  attr_accessor :subject
  attr_accessor :body
  attr_accessor :messageID
  attr_accessor :parentMessageID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageType = nil, questionType = nil, emailCopyToSender = nil, hideSendersEmailAddress = nil, displayToPublic = nil, senderID = nil, senderEmail = nil, recipientID = [], subject = nil, body = nil, messageID = nil, parentMessageID = nil)
    @messageType = messageType
    @questionType = questionType
    @emailCopyToSender = emailCopyToSender
    @hideSendersEmailAddress = hideSendersEmailAddress
    @displayToPublic = displayToPublic
    @senderID = senderID
    @senderEmail = senderEmail
    @recipientID = recipientID
    @subject = subject
    @body = body
    @messageID = messageID
    @parentMessageID = parentMessageID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MinimumReservePriceDefinitionType
class MinimumReservePriceDefinitionType
  @@schema_type = "MinimumReservePriceDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ModifiedFieldType
class ModifiedFieldType
  @@schema_type = "ModifiedFieldType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["field", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Field")]],
    ["modifyType", ["ModifyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifyType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :field
  attr_accessor :modifyType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(field = nil, modifyType = nil)
    @field = field
    @modifyType = modifyType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertArrayType
class MyMessagesAlertArrayType < ::Array
  @@schema_element = [
    ["Alert", ["MyMessagesAlertType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Alert")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertIDArrayType
class MyMessagesAlertIDArrayType < ::Array
  @@schema_element = [
    ["AlertID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertType
class MyMessagesAlertType
  @@schema_type = "MyMessagesAlertType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sender", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sender")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["priority", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["alertID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertID")]],
    ["externalAlertID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAlertID")]],
    ["contentType", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContentType")]],
    ["text", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["resolutionStatus", ["MyMessagesAlertResolutionStatusCode", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionStatus")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["receiveDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReceiveDate")]],
    ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationDate")]],
    ["resolutionDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionDate")]],
    ["lastReadDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastReadDate")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["isTimedResolution", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IsTimedResolution")]],
    ["actionURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActionURL")]],
    ["responseDetails", ["MyMessagesResponseDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseDetails")]],
    ["forwardDetails", ["MyMessagesForwardDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardDetails")]],
    ["folder", ["MyMessagesFolderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :subject
  attr_accessor :priority
  attr_accessor :alertID
  attr_accessor :externalAlertID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :resolutionStatus
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :resolutionDate
  attr_accessor :lastReadDate
  attr_accessor :itemID
  attr_accessor :isTimedResolution
  attr_accessor :actionURL
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, subject = nil, priority = nil, alertID = nil, externalAlertID = nil, contentType = nil, text = nil, resolutionStatus = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, resolutionDate = nil, lastReadDate = nil, itemID = nil, isTimedResolution = nil, actionURL = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @subject = subject
    @priority = priority
    @alertID = alertID
    @externalAlertID = externalAlertID
    @contentType = contentType
    @text = text
    @resolutionStatus = resolutionStatus
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @resolutionDate = resolutionDate
    @lastReadDate = lastReadDate
    @itemID = itemID
    @isTimedResolution = isTimedResolution
    @actionURL = actionURL
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderSummaryType
class MyMessagesFolderSummaryType
  @@schema_type = "MyMessagesFolderSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]],
    ["newAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewAlertCount")]],
    ["newMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewMessageCount")]],
    ["totalAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAlertCount")]],
    ["totalMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalMessageCount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :folderID
  attr_accessor :folderName
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil, newAlertCount = nil, newMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderID = folderID
    @folderName = folderName
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderType
class MyMessagesFolderType
  @@schema_type = "MyMessagesFolderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :folderID
  attr_accessor :folderName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil)
    @folderID = folderID
    @folderName = folderName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesForwardDetailsType
class MyMessagesForwardDetailsType
  @@schema_type = "MyMessagesForwardDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userForwardDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserForwardDate")]],
    ["forwardMessageEncoding", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardMessageEncoding")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userForwardDate
  attr_accessor :forwardMessageEncoding
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userForwardDate = nil, forwardMessageEncoding = nil)
    @userForwardDate = userForwardDate
    @forwardMessageEncoding = forwardMessageEncoding
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageArrayType
class MyMessagesMessageArrayType < ::Array
  @@schema_element = [
    ["Message", ["MyMessagesMessageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageIDArrayType
class MyMessagesMessageIDArrayType < ::Array
  @@schema_element = [
    ["MessageID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageType
class MyMessagesMessageType
  @@schema_type = "MyMessagesMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sender", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sender")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["sendToName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SendToName")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["externalMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalMessageID")]],
    ["contentType", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContentType")]],
    ["text", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["flagged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Flagged")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["receiveDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReceiveDate")]],
    ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationDate")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["responseDetails", ["MyMessagesResponseDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseDetails")]],
    ["forwardDetails", ["MyMessagesForwardDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardDetails")]],
    ["folder", ["MyMessagesFolderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :sendToName
  attr_accessor :subject
  attr_accessor :messageID
  attr_accessor :externalMessageID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :flagged
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :itemID
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, sendToName = nil, subject = nil, messageID = nil, externalMessageID = nil, contentType = nil, text = nil, flagged = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, itemID = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @sendToName = sendToName
    @subject = subject
    @messageID = messageID
    @externalMessageID = externalMessageID
    @contentType = contentType
    @text = text
    @flagged = flagged
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @itemID = itemID
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesResponseDetailsType
class MyMessagesResponseDetailsType
  @@schema_type = "MyMessagesResponseDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["responseEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseEnabled")]],
    ["responseURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseURL")]],
    ["userResponseDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserResponseDate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :responseEnabled
  attr_accessor :responseURL
  attr_accessor :userResponseDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(responseEnabled = nil, responseURL = nil, userResponseDate = nil)
    @responseEnabled = responseEnabled
    @responseURL = responseURL
    @userResponseDate = userResponseDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesSummaryType
class MyMessagesSummaryType
  @@schema_type = "MyMessagesSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderSummary", ["MyMessagesFolderSummaryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderSummary")]],
    ["newAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewAlertCount")]],
    ["newMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewMessageCount")]],
    ["unresolvedAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnresolvedAlertCount")]],
    ["flaggedMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlaggedMessageCount")]],
    ["totalAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAlertCount")]],
    ["totalMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalMessageCount")]]
  ]

  attr_accessor :folderSummary
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :unresolvedAlertCount
  attr_accessor :flaggedMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount

  def initialize(folderSummary = [], newAlertCount = nil, newMessageCount = nil, unresolvedAlertCount = nil, flaggedMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderSummary = folderSummary
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @unresolvedAlertCount = unresolvedAlertCount
    @flaggedMessageCount = flaggedMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchListType
class MyeBayFavoriteSearchListType
  @@schema_type = "MyeBayFavoriteSearchListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["favoriteSearch", ["MyeBayFavoriteSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearch")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :totalAvailable
  attr_accessor :favoriteSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSearch = [])
    @totalAvailable = totalAvailable
    @favoriteSearch = favoriteSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchType
class MyeBayFavoriteSearchType
  @@schema_type = "MyeBayFavoriteSearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["searchName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchName")]],
    ["searchQuery", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchQuery")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :searchName
  attr_accessor :searchQuery
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchName = nil, searchQuery = nil)
    @searchName = searchName
    @searchQuery = searchQuery
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerListType
class MyeBayFavoriteSellerListType
  @@schema_type = "MyeBayFavoriteSellerListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["favoriteSeller", ["MyeBayFavoriteSellerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSeller")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :totalAvailable
  attr_accessor :favoriteSeller
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSeller = [])
    @totalAvailable = totalAvailable
    @favoriteSeller = favoriteSeller
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerType
class MyeBayFavoriteSellerType
  @@schema_type = "MyeBayFavoriteSellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userID
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, storeName = nil)
    @userID = userID
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySecondChanceOfferListType
class MyeBaySecondChanceOfferListType
  @@schema_type = "MyeBaySecondChanceOfferListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["secondChanceOffer", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :totalAvailable
  attr_accessor :secondChanceOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, secondChanceOffer = [])
    @totalAvailable = totalAvailable
    @secondChanceOffer = secondChanceOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySelectionType
class MyeBaySelectionType
  @@schema_type = "MyeBaySelectionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]],
    ["sort", ["SortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["maxResults", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxResults")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :include
  attr_accessor :sort
  attr_accessor :maxResults
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, sort = nil, maxResults = nil)
    @include = include
    @sort = sort
    @maxResults = maxResults
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListArrayType
class NameValueListArrayType < ::Array
  @@schema_element = [
    ["NameValueList", ["NameValueListType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameValueList")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListType
class NameValueListType
  @@schema_type = "NameValueListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["value", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = [])
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsArrayType
class NotificationDetailsArrayType < ::Array
  @@schema_element = [
    ["NotificationDetails", ["NotificationDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationDetails")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsType
class NotificationDetailsType
  @@schema_type = "NotificationDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["deliveryURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryURL")]],
    ["referenceID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferenceID")]],
    ["expirationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationTime")]],
    ["type", ["NotificationEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["retries", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Retries")]],
    ["deliveryStatus", ["NotificationEventStateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryStatus")]],
    ["nextRetryTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NextRetryTime")]],
    ["deliveryTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryTime")]],
    ["errorMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorMessage")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :deliveryURL
  attr_accessor :referenceID
  attr_accessor :expirationTime
  attr_accessor :type
  attr_accessor :retries
  attr_accessor :deliveryStatus
  attr_accessor :nextRetryTime
  attr_accessor :deliveryTime
  attr_accessor :errorMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveryURL = nil, referenceID = nil, expirationTime = nil, type = nil, retries = nil, deliveryStatus = nil, nextRetryTime = nil, deliveryTime = nil, errorMessage = nil)
    @deliveryURL = deliveryURL
    @referenceID = referenceID
    @expirationTime = expirationTime
    @type = type
    @retries = retries
    @deliveryStatus = deliveryStatus
    @nextRetryTime = nextRetryTime
    @deliveryTime = deliveryTime
    @errorMessage = errorMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableArrayType
class NotificationEnableArrayType < ::Array
  @@schema_element = [
    ["NotificationEnable", ["NotificationEnableType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEnable")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableType
class NotificationEnableType
  @@schema_type = "NotificationEnableType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eventType", ["NotificationEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventType")]],
    ["eventEnable", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventEnable")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eventType
  attr_accessor :eventEnable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, eventEnable = nil)
    @eventType = eventType
    @eventEnable = eventEnable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyType
class NotificationEventPropertyType
  @@schema_type = "NotificationEventPropertyType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eventType", ["NotificationEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventType")]],
    ["name", ["NotificationEventPropertyNameCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eventType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, name = nil, value = nil)
    @eventType = eventType
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationMessageType
class NotificationMessageType
  @@schema_type = "NotificationMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["messageBody", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageBody")]],
    ["eIAS", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIAS")]]
  ]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :messageBody
  attr_accessor :eIAS

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, messageBody = nil, eIAS = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @messageBody = messageBody
    @eIAS = eIAS
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationStatisticsType
class NotificationStatisticsType
  @@schema_type = "NotificationStatisticsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["deliveredCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveredCount")]],
    ["queuedNewCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QueuedNewCount")]],
    ["queuedPendingCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QueuedPendingCount")]],
    ["expiredCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpiredCount")]],
    ["errorCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :deliveredCount
  attr_accessor :queuedNewCount
  attr_accessor :queuedPendingCount
  attr_accessor :expiredCount
  attr_accessor :errorCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveredCount = nil, queuedNewCount = nil, queuedPendingCount = nil, expiredCount = nil, errorCount = nil)
    @deliveredCount = deliveredCount
    @queuedNewCount = queuedNewCount
    @queuedPendingCount = queuedPendingCount
    @expiredCount = expiredCount
    @errorCount = errorCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationUserDataType
class NotificationUserDataType
  @@schema_type = "NotificationUserDataType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sMSSubscription", ["SMSSubscriptionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SMSSubscription")]],
    ["summarySchedule", ["SummaryEventScheduleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SummarySchedule")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sMSSubscription
  attr_accessor :summarySchedule
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSSubscription = nil, summarySchedule = [])
    @sMSSubscription = sMSSubscription
    @summarySchedule = summarySchedule
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OfferArrayType
class OfferArrayType < ::Array
  @@schema_element = [
    ["Offer", ["OfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Offer")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}OfferType
class OfferType
  @@schema_type = "OfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["action", ["BidActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["maxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxBid")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["secondChanceEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceEnabled")]],
    ["siteCurrency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteCurrency")]],
    ["timeBid", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeBid")]],
    ["highestBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighestBid")]],
    ["convertedPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedPrice")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["user", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "User")]],
    ["userConsent", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserConsent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :action
  attr_accessor :currency
  attr_accessor :itemID
  attr_accessor :maxBid
  attr_accessor :quantity
  attr_accessor :secondChanceEnabled
  attr_accessor :siteCurrency
  attr_accessor :timeBid
  attr_accessor :highestBid
  attr_accessor :convertedPrice
  attr_accessor :transactionID
  attr_accessor :user
  attr_accessor :userConsent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(action = nil, currency = nil, itemID = nil, maxBid = nil, quantity = nil, secondChanceEnabled = nil, siteCurrency = nil, timeBid = nil, highestBid = nil, convertedPrice = nil, transactionID = nil, user = nil, userConsent = nil)
    @action = action
    @currency = currency
    @itemID = itemID
    @maxBid = maxBid
    @quantity = quantity
    @secondChanceEnabled = secondChanceEnabled
    @siteCurrency = siteCurrency
    @timeBid = timeBid
    @highestBid = highestBid
    @convertedPrice = convertedPrice
    @transactionID = transactionID
    @user = user
    @userConsent = userConsent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderArrayType
class OrderArrayType < ::Array
  @@schema_element = [
    ["Order", ["OrderType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}OrderIDArrayType
class OrderIDArrayType < ::Array
  @@schema_element = [
    ["OrderID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionArrayType
class OrderTransactionArrayType < ::Array
  @@schema_element = [
    ["OrderTransaction", ["OrderTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderTransaction")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionType
class OrderTransactionType
  @@schema_type = "OrderTransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["order", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["transaction", ["TransactionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Transaction")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :order
  attr_accessor :transaction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(order = nil, transaction = nil)
    @order = order
    @transaction = transaction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderType
class OrderType
  @@schema_type = "OrderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["orderStatus", ["OrderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderStatus")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["amountSaved", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountSaved")]],
    ["checkoutStatus", ["CheckoutStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["creatingUserRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatingUserRole")]],
    ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedTime")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["sellerEmail", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerEmail")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["shippingServiceSelected", ["ShippingServiceOptionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceSelected")]],
    ["subtotal", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subtotal")]],
    ["total", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Total")]],
    ["externalTransaction", ["ExternalTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["digitalDelivery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDelivery")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["buyerUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerUserID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :orderID
  attr_accessor :orderStatus
  attr_accessor :adjustmentAmount
  attr_accessor :amountPaid
  attr_accessor :amountSaved
  attr_accessor :checkoutStatus
  attr_accessor :shippingDetails
  attr_accessor :creatingUserRole
  attr_accessor :createdTime
  attr_accessor :financeOfferID
  attr_accessor :paymentMethods
  attr_accessor :sellerEmail
  attr_accessor :shippingAddress
  attr_accessor :shippingServiceSelected
  attr_accessor :subtotal
  attr_accessor :total
  attr_accessor :externalTransaction
  attr_accessor :digitalDelivery
  attr_accessor :transactionArray
  attr_accessor :buyerUserID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderID = nil, orderStatus = nil, adjustmentAmount = nil, amountPaid = nil, amountSaved = nil, checkoutStatus = nil, shippingDetails = nil, creatingUserRole = nil, createdTime = nil, financeOfferID = nil, paymentMethods = [], sellerEmail = nil, shippingAddress = nil, shippingServiceSelected = nil, subtotal = nil, total = nil, externalTransaction = [], digitalDelivery = nil, transactionArray = nil, buyerUserID = nil)
    @orderID = orderID
    @orderStatus = orderStatus
    @adjustmentAmount = adjustmentAmount
    @amountPaid = amountPaid
    @amountSaved = amountSaved
    @checkoutStatus = checkoutStatus
    @shippingDetails = shippingDetails
    @creatingUserRole = creatingUserRole
    @createdTime = createdTime
    @financeOfferID = financeOfferID
    @paymentMethods = paymentMethods
    @sellerEmail = sellerEmail
    @shippingAddress = shippingAddress
    @shippingServiceSelected = shippingServiceSelected
    @subtotal = subtotal
    @total = total
    @externalTransaction = externalTransaction
    @digitalDelivery = digitalDelivery
    @transactionArray = transactionArray
    @buyerUserID = buyerUserID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedItemArrayType
class PaginatedItemArrayType
  @@schema_type = "PaginatedItemArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :itemArray
  attr_accessor :paginationResult

  def initialize(itemArray = nil, paginationResult = nil)
    @itemArray = itemArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedOrderTransactionArrayType
class PaginatedOrderTransactionArrayType
  @@schema_type = "PaginatedOrderTransactionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["orderTransactionArray", ["OrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderTransactionArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :orderTransactionArray
  attr_accessor :paginationResult

  def initialize(orderTransactionArray = nil, paginationResult = nil)
    @orderTransactionArray = orderTransactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedTransactionArrayType
class PaginatedTransactionArrayType
  @@schema_type = "PaginatedTransactionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]
  ]

  attr_accessor :transactionArray
  attr_accessor :paginationResult

  def initialize(transactionArray = nil, paginationResult = nil)
    @transactionArray = transactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationResultType
class PaginationResultType
  @@schema_type = "PaginationResultType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalNumberOfPages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalNumberOfPages")]],
    ["totalNumberOfEntries", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalNumberOfEntries")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :totalNumberOfPages
  attr_accessor :totalNumberOfEntries
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalNumberOfPages = nil, totalNumberOfEntries = nil)
    @totalNumberOfPages = totalNumberOfPages
    @totalNumberOfEntries = totalNumberOfEntries
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentDetailsType
class PaymentDetailsType
  @@schema_type = "PaymentDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["hoursToDeposit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HoursToDeposit")]],
    ["daysToFullPayment", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DaysToFullPayment")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :hoursToDeposit
  attr_accessor :daysToFullPayment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(hoursToDeposit = nil, daysToFullPayment = nil)
    @hoursToDeposit = hoursToDeposit
    @daysToFullPayment = daysToFullPayment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionDetailsType
class PaymentOptionDetailsType
  @@schema_type = "PaymentOptionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paymentOption", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOption")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :paymentOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentOption = nil, description = nil)
    @paymentOption = paymentOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureDetailsType
class PictureDetailsType
  @@schema_type = "PictureDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["galleryType", ["GalleryTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryType")]],
    ["galleryURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryURL")]],
    ["photoDisplay", ["PhotoDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhotoDisplay")]],
    ["pictureURL", ["SOAP::SOAPAnyURI[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["pictureSource", ["PictureSourceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureSource")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :galleryType
  attr_accessor :galleryURL
  attr_accessor :photoDisplay
  attr_accessor :pictureURL
  attr_accessor :pictureSource
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(galleryType = nil, galleryURL = nil, photoDisplay = nil, pictureURL = [], pictureSource = nil)
    @galleryType = galleryType
    @galleryURL = galleryURL
    @photoDisplay = photoDisplay
    @pictureURL = pictureURL
    @pictureSource = pictureSource
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailsType
class PictureManagerDetailsType
  @@schema_type = "PictureManagerDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["subscriptionLevel", ["PictureManagerSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["storageUsed", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorageUsed")]],
    ["totalStorageAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalStorageAvailable")]],
    ["keepOriginal", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "KeepOriginal")]],
    ["watermarkEPS", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatermarkEPS")]],
    ["watermarkUserID", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatermarkUserID")]],
    ["folder", ["PictureManagerFolderType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :subscriptionLevel
  attr_accessor :storageUsed
  attr_accessor :totalStorageAvailable
  attr_accessor :keepOriginal
  attr_accessor :watermarkEPS
  attr_accessor :watermarkUserID
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, storageUsed = nil, totalStorageAvailable = nil, keepOriginal = nil, watermarkEPS = nil, watermarkUserID = nil, folder = [])
    @subscriptionLevel = subscriptionLevel
    @storageUsed = storageUsed
    @totalStorageAvailable = totalStorageAvailable
    @keepOriginal = keepOriginal
    @watermarkEPS = watermarkEPS
    @watermarkUserID = watermarkUserID
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerFolderType
class PictureManagerFolderType
  @@schema_type = "PictureManagerFolderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["picture", ["PictureManagerPictureType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Picture")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :folderID
  attr_accessor :name
  attr_accessor :picture
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, name = nil, picture = [])
    @folderID = folderID
    @name = name
    @picture = picture
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayType
class PictureManagerPictureDisplayType
  @@schema_type = "PictureManagerPictureDisplayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayType", ["PictureManagerPictureDisplayTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayType")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["size", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Size")]],
    ["height", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Height")]],
    ["width", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Width")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :displayType
  attr_accessor :uRL
  attr_accessor :size
  attr_accessor :height
  attr_accessor :width
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, uRL = nil, size = nil, height = nil, width = nil)
    @displayType = displayType
    @uRL = uRL
    @size = size
    @height = height
    @width = width
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureType
class PictureManagerPictureType
  @@schema_type = "PictureManagerPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["date", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Date")]],
    ["displayFormat", ["PictureManagerPictureDisplayType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayFormat")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :pictureURL
  attr_accessor :name
  attr_accessor :date
  attr_accessor :displayFormat
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, name = nil, date = nil, displayFormat = [])
    @pictureURL = pictureURL
    @name = name
    @date = date
    @displayFormat = displayFormat
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionType
class PictureManagerSubscriptionType
  @@schema_type = "PictureManagerSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["subscriptionLevel", ["PictureManagerSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["storageSize", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorageSize")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :subscriptionLevel
  attr_accessor :fee
  attr_accessor :storageSize
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, fee = nil, storageSize = nil)
    @subscriptionLevel = subscriptionLevel
    @fee = fee
    @storageSize = storageSize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PriceRangeFilterType
class PriceRangeFilterType
  @@schema_type = "PriceRangeFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :maxPrice
  attr_accessor :minPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxPrice = nil, minPrice = nil)
    @maxPrice = maxPrice
    @minPrice = minPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PricingRecommendationsType
class PricingRecommendationsType
  @@schema_type = "PricingRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productInfo", ["ProductInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductInfo")]]
  ]

  attr_accessor :productInfo

  def initialize(productInfo = nil)
    @productInfo = productInfo
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackEnabledDefinitionType
class ProPackEnabledDefinitionType
  @@schema_type = "ProPackEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackPlusEnabledDefinitionType
class ProPackPlusEnabledDefinitionType
  @@schema_type = "ProPackPlusEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresCheckoutPreferenceType
class ProStoresCheckoutPreferenceType
  @@schema_type = "ProStoresCheckoutPreferenceType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["checkoutRedirectProStores", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutRedirectProStores")]],
    ["proStoresDetails", ["ProStoresDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProStoresDetails")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :checkoutRedirectProStores
  attr_accessor :proStoresDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(checkoutRedirectProStores = nil, proStoresDetails = [])
    @checkoutRedirectProStores = checkoutRedirectProStores
    @proStoresDetails = proStoresDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresDetailsType
class ProStoresDetailsType
  @@schema_type = "ProStoresDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sellerThirdPartyUsername", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerThirdPartyUsername")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["status", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sellerThirdPartyUsername
  attr_accessor :storeName
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerThirdPartyUsername = nil, storeName = nil, status = nil)
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @storeName = storeName
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductArrayType
class ProductArrayType < ::Array
  @@schema_element = [
    ["Product", ["ExpressProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Product")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ProductFamilyType
class ProductFamilyType
  @@schema_type = "ProductFamilyType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "hasMoreChildren") => "SOAP::SOAPBoolean"
  }
  @@schema_element = [
    ["parentProduct", ["ProductType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ParentProduct")]],
    ["familyMembers", ["ProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FamilyMembers")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :parentProduct
  attr_accessor :familyMembers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_hasMoreChildren
    (@__xmlattr ||= {})[XSD::QName.new(nil, "hasMoreChildren")]
  end

  def xmlattr_hasMoreChildren=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "hasMoreChildren")] = value
  end

  def initialize(parentProduct = nil, familyMembers = [])
    @parentProduct = parentProduct
    @familyMembers = familyMembers
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFinderConstraintType
class ProductFinderConstraintType
  @@schema_type = "ProductFinderConstraintType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayName")]],
    ["displayValue", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayValue")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :displayName
  attr_accessor :displayValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayName = nil, displayValue = nil)
    @displayName = displayName
    @displayValue = displayValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductInfoType
class ProductInfoType
  @@schema_type = "ProductInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "productInfoID") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["averageStartPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AverageStartPrice")]],
    ["averageSoldPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AverageSoldPrice")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]]
  ]

  attr_accessor :averageStartPrice
  attr_accessor :averageSoldPrice
  attr_accessor :title

  def xmlattr_productInfoID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productInfoID")]
  end

  def xmlattr_productInfoID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productInfoID")] = value
  end

  def initialize(averageStartPrice = nil, averageSoldPrice = nil, title = nil)
    @averageStartPrice = averageStartPrice
    @averageSoldPrice = averageSoldPrice
    @title = title
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductListingDetailsType
class ProductListingDetailsType
  @@schema_type = "ProductListingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["includeStockPhotoURL", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeStockPhotoURL")]],
    ["includePrefilledItemInformation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludePrefilledItemInformation")]],
    ["useStockPhotoURLAsGallery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseStockPhotoURLAsGallery")]],
    ["stockPhotoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StockPhotoURL")]],
    ["copyright", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Copyright")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :productID
  attr_accessor :includeStockPhotoURL
  attr_accessor :includePrefilledItemInformation
  attr_accessor :useStockPhotoURLAsGallery
  attr_accessor :stockPhotoURL
  attr_accessor :copyright
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productID = nil, includeStockPhotoURL = nil, includePrefilledItemInformation = nil, useStockPhotoURLAsGallery = nil, stockPhotoURL = nil, copyright = [])
    @productID = productID
    @includeStockPhotoURL = includeStockPhotoURL
    @includePrefilledItemInformation = includePrefilledItemInformation
    @useStockPhotoURLAsGallery = useStockPhotoURLAsGallery
    @stockPhotoURL = stockPhotoURL
    @copyright = copyright
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductRecommendationsType
class ProductRecommendationsType < ::Array
  @@schema_element = [
    ["Product", ["ProductInfoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Product")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchPageType
class ProductSearchPageType
  @@schema_type = "ProductSearchPageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["dataElements", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElements")]],
    ["searchCharacteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchCharacteristicsSet")]],
    ["searchType", ["CharacteristicsSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["sortCharacteristics", ["CharacteristicType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortCharacteristics")]],
    ["dataElementSet", ["DataElementSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementSet")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :dataElements
  attr_accessor :searchCharacteristicsSet
  attr_accessor :searchType
  attr_accessor :sortCharacteristics
  attr_accessor :dataElementSet
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dataElements = [], searchCharacteristicsSet = nil, searchType = nil, sortCharacteristics = [], dataElementSet = [])
    @dataElements = dataElements
    @searchCharacteristicsSet = searchCharacteristicsSet
    @searchType = searchType
    @sortCharacteristics = sortCharacteristics
    @dataElementSet = dataElementSet
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchResultType
class ProductSearchResultType
  @@schema_type = "ProductSearchResultType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["approximatePages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApproximatePages")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]],
    ["productFamilies", ["ProductFamilyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFamilies")]],
    ["productFinderConstraints", ["ProductFinderConstraintType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderConstraints")]],
    ["tooManyMatchesFound", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TooManyMatchesFound")]],
    ["totalProducts", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalProducts")]],
    ["iD", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]],
    ["numProducts", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumProducts")]],
    ["attributeSet", ["ResponseAttributeSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSet")]],
    ["displayStockPhotos", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayStockPhotos")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_accessor :iD
  attr_accessor :numProducts
  attr_accessor :attributeSet
  attr_accessor :displayStockPhotos
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil, iD = nil, numProducts = nil, attributeSet = [], displayStockPhotos = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @iD = iD
    @numProducts = numProducts
    @attributeSet = attributeSet
    @displayStockPhotos = displayStockPhotos
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchType
class ProductSearchType
  @@schema_type = "ProductSearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productSearchID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchID")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["sortAttributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortAttributeID")]],
    ["maxChildrenPerFamily", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxChildrenPerFamily")]],
    ["searchAttributes", ["SearchAttributesType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchAttributes")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["availableItemsOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AvailableItemsOnly")]],
    ["queryKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QueryKeywords")]],
    ["characteristicSetIDs", ["CharacteristicSetIDsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicSetIDs")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :productSearchID
  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :productID
  attr_accessor :sortAttributeID
  attr_accessor :maxChildrenPerFamily
  attr_accessor :searchAttributes
  attr_accessor :pagination
  attr_accessor :availableItemsOnly
  attr_accessor :queryKeywords
  attr_accessor :characteristicSetIDs
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productSearchID = nil, attributeSetID = nil, productFinderID = nil, productID = nil, sortAttributeID = nil, maxChildrenPerFamily = nil, searchAttributes = [], pagination = nil, availableItemsOnly = nil, queryKeywords = nil, characteristicSetIDs = nil)
    @productSearchID = productSearchID
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @productID = productID
    @sortAttributeID = sortAttributeID
    @maxChildrenPerFamily = maxChildrenPerFamily
    @searchAttributes = searchAttributes
    @pagination = pagination
    @availableItemsOnly = availableItemsOnly
    @queryKeywords = queryKeywords
    @characteristicSetIDs = characteristicSetIDs
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductType
class ProductType
  @@schema_type = "ProductType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {
    XSD::QName.new(nil, "productID") => "SOAP::SOAPString",
    XSD::QName.new(nil, "stockPhotoURL") => "SOAP::SOAPAnyURI",
    XSD::QName.new(nil, "title") => "SOAP::SOAPString"
  }
  @@schema_element = [
    ["characteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSet")]],
    ["detailsURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailsURL")]],
    ["numItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumItems")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :characteristicsSet
  attr_accessor :detailsURL
  attr_accessor :numItems
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_productID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productID")]
  end

  def xmlattr_productID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productID")] = value
  end

  def xmlattr_stockPhotoURL
    (@__xmlattr ||= {})[XSD::QName.new(nil, "stockPhotoURL")]
  end

  def xmlattr_stockPhotoURL=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "stockPhotoURL")] = value
  end

  def xmlattr_title
    (@__xmlattr ||= {})[XSD::QName.new(nil, "title")]
  end

  def xmlattr_title=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "title")] = value
  end

  def initialize(characteristicsSet = nil, detailsURL = nil, numItems = nil, minPrice = nil, maxPrice = nil)
    @characteristicsSet = characteristicsSet
    @detailsURL = detailsURL
    @numItems = numItems
    @minPrice = minPrice
    @maxPrice = maxPrice
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotedItemType
class PromotedItemType
  @@schema_type = "PromotedItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["pictureURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["selfHostedURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelfHostedURL")]],
    ["position", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Position")]],
    ["promotionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionPrice")]],
    ["promotionPriceType", ["PromotionItemPriceTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionPriceType")]],
    ["selectionType", ["PromotionItemSelectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelectionType")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :itemID
  attr_accessor :pictureURL
  attr_accessor :selfHostedURL
  attr_accessor :position
  attr_accessor :promotionPrice
  attr_accessor :promotionPriceType
  attr_accessor :selectionType
  attr_accessor :title
  attr_accessor :listingType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, pictureURL = nil, selfHostedURL = nil, position = nil, promotionPrice = nil, promotionPriceType = nil, selectionType = nil, title = nil, listingType = nil)
    @itemID = itemID
    @pictureURL = pictureURL
    @selfHostedURL = selfHostedURL
    @position = position
    @promotionPrice = promotionPrice
    @promotionPriceType = promotionPriceType
    @selectionType = selectionType
    @title = title
    @listingType = listingType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleArrayType
class PromotionRuleArrayType < ::Array
  @@schema_element = [
    ["PromotionRule", ["PromotionRuleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRule")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleType
class PromotionRuleType
  @@schema_type = "PromotionRuleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["promotedItem", ["PromotedItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedItem")]],
    ["siteID", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["promotedStoreCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedStoreCategoryID")]],
    ["promotedeBayCategoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedeBayCategoryID")]],
    ["promotedKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedKeywords")]],
    ["referringItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringItemID")]],
    ["referringStoreCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringStoreCategoryID")]],
    ["referringeBayCategoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringeBayCategoryID")]],
    ["referringKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringKeywords")]],
    ["promotionScheme", ["PromotionSchemeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionScheme")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :promotedItem
  attr_accessor :siteID
  attr_accessor :promotedStoreCategoryID
  attr_accessor :promotedeBayCategoryID
  attr_accessor :promotedKeywords
  attr_accessor :referringItemID
  attr_accessor :referringStoreCategoryID
  attr_accessor :referringeBayCategoryID
  attr_accessor :referringKeywords
  attr_accessor :promotionScheme
  attr_accessor :promotionMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotedItem = [], siteID = nil, promotedStoreCategoryID = nil, promotedeBayCategoryID = nil, promotedKeywords = nil, referringItemID = nil, referringStoreCategoryID = nil, referringeBayCategoryID = nil, referringKeywords = nil, promotionScheme = nil, promotionMethod = nil)
    @promotedItem = promotedItem
    @siteID = siteID
    @promotedStoreCategoryID = promotedStoreCategoryID
    @promotedeBayCategoryID = promotedeBayCategoryID
    @promotedKeywords = promotedKeywords
    @referringItemID = referringItemID
    @referringStoreCategoryID = referringStoreCategoryID
    @referringeBayCategoryID = referringeBayCategoryID
    @referringKeywords = referringKeywords
    @promotionScheme = promotionScheme
    @promotionMethod = promotionMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProximitySearchDetailsType
class ProximitySearchDetailsType
  @@schema_type = "ProximitySearchDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(postalCode = nil)
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProximitySearchType
class ProximitySearchType
  @@schema_type = "ProximitySearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxDistance", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxDistance")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionDetailsType
class RegionDetailsType
  @@schema_type = "RegionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :regionID
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, description = nil)
    @regionID = regionID
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReminderCustomizationType
class ReminderCustomizationType
  @@schema_type = "ReminderCustomizationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["durationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DurationInDays")]],
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]]
  ]

  attr_accessor :durationInDays
  attr_accessor :include

  def initialize(durationInDays = nil, include = nil)
    @durationInDays = durationInDays
    @include = include
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemindersType
class RemindersType
  @@schema_type = "RemindersType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paymentToSendCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentToSendCount")]],
    ["feedbackToReceiveCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackToReceiveCount")]],
    ["feedbackToSendCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackToSendCount")]],
    ["outbidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OutbidCount")]],
    ["paymentToReceiveCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentToReceiveCount")]],
    ["secondChanceOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOfferCount")]],
    ["shippingNeededCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingNeededCount")]],
    ["relistingNeededCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistingNeededCount")]]
  ]

  attr_accessor :paymentToSendCount
  attr_accessor :feedbackToReceiveCount
  attr_accessor :feedbackToSendCount
  attr_accessor :outbidCount
  attr_accessor :paymentToReceiveCount
  attr_accessor :secondChanceOfferCount
  attr_accessor :shippingNeededCount
  attr_accessor :relistingNeededCount

  def initialize(paymentToSendCount = nil, feedbackToReceiveCount = nil, feedbackToSendCount = nil, outbidCount = nil, paymentToReceiveCount = nil, secondChanceOfferCount = nil, shippingNeededCount = nil, relistingNeededCount = nil)
    @paymentToSendCount = paymentToSendCount
    @feedbackToReceiveCount = feedbackToReceiveCount
    @feedbackToSendCount = feedbackToSendCount
    @outbidCount = outbidCount
    @paymentToReceiveCount = paymentToReceiveCount
    @secondChanceOfferCount = secondChanceOfferCount
    @shippingNeededCount = shippingNeededCount
    @relistingNeededCount = relistingNeededCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}RequestCategoriesType
class RequestCategoriesType
  @@schema_type = "RequestCategoriesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoriesOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoriesOnly")]],
    ["maxCategories", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxCategories")]],
    ["maxSubcategories", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxSubcategories")]],
    ["levels", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Levels")]]
  ]

  attr_accessor :categoriesOnly
  attr_accessor :maxCategories
  attr_accessor :maxSubcategories
  attr_accessor :levels

  def initialize(categoriesOnly = nil, maxCategories = nil, maxSubcategories = nil, levels = nil)
    @categoriesOnly = categoriesOnly
    @maxCategories = maxCategories
    @maxSubcategories = maxSubcategories
    @levels = levels
  end
end

# {urn:ebay:apis:eBLBaseComponents}ResponseAttributeSetType
class ResponseAttributeSetType
  @@schema_type = "ResponseAttributeSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["approximatePages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApproximatePages")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]],
    ["productFamilies", ["ProductFamilyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFamilies")]],
    ["productFinderConstraints", ["ProductFinderConstraintType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderConstraints")]],
    ["tooManyMatchesFound", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TooManyMatchesFound")]],
    ["totalProducts", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalProducts")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseStatusType
class ReviseStatusType
  @@schema_type = "ReviseStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemRevised", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemRevised")]],
    ["buyItNowAdded", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowAdded")]],
    ["buyItNowLowered", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowLowered")]],
    ["reserveLowered", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveLowered")]],
    ["reserveRemoved", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveRemoved")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :itemRevised
  attr_accessor :buyItNowAdded
  attr_accessor :buyItNowLowered
  attr_accessor :reserveLowered
  attr_accessor :reserveRemoved
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemRevised = nil, buyItNowAdded = nil, buyItNowLowered = nil, reserveLowered = nil, reserveRemoved = nil)
    @itemRevised = itemRevised
    @buyItNowAdded = buyItNowAdded
    @buyItNowLowered = buyItNowLowered
    @reserveLowered = reserveLowered
    @reserveRemoved = reserveRemoved
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SIFFTASRecommendationsType
class SIFFTASRecommendationsType
  @@schema_type = "SIFFTASRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SKUArrayType
class SKUArrayType < ::Array
  @@schema_element = [
    ["SKU", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SKU")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionType
class SMSSubscriptionType
  @@schema_type = "SMSSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sMSPhone", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SMSPhone")]],
    ["userStatus", ["SMSSubscriptionUserStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserStatus")]],
    ["carrierID", ["WirelessCarrierIDCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CarrierID")]],
    ["errorCode", ["SMSSubscriptionErrorCodeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCode")]],
    ["itemToUnsubscribe", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemToUnsubscribe")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :sMSPhone
  attr_accessor :userStatus
  attr_accessor :carrierID
  attr_accessor :errorCode
  attr_accessor :itemToUnsubscribe
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSPhone = nil, userStatus = nil, carrierID = nil, errorCode = nil, itemToUnsubscribe = nil)
    @sMSPhone = sMSPhone
    @userStatus = userStatus
    @carrierID = carrierID
    @errorCode = errorCode
    @itemToUnsubscribe = itemToUnsubscribe
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SalesTaxType
class SalesTaxType
  @@schema_type = "SalesTaxType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["salesTaxPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxPercent")]],
    ["salesTaxState", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxState")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["salesTaxAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxAmount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :salesTaxPercent
  attr_accessor :salesTaxState
  attr_accessor :shippingIncludedInTax
  attr_accessor :salesTaxAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(salesTaxPercent = nil, salesTaxState = nil, shippingIncludedInTax = nil, salesTaxAmount = nil)
    @salesTaxPercent = salesTaxPercent
    @salesTaxState = salesTaxState
    @shippingIncludedInTax = shippingIncludedInTax
    @salesTaxAmount = salesTaxAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ScheduleType
class ScheduleType
  @@schema_type = "ScheduleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["scheduleID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleID")]],
    ["scheduleTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :scheduleID
  attr_accessor :scheduleTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(scheduleID = nil, scheduleTime = nil)
    @scheduleID = scheduleID
    @scheduleTime = scheduleTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SchedulingInfoType
class SchedulingInfoType
  @@schema_type = "SchedulingInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxScheduledMinutes", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxScheduledMinutes")]],
    ["minScheduledMinutes", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinScheduledMinutes")]],
    ["maxScheduledItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxScheduledItems")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :maxScheduledMinutes
  attr_accessor :minScheduledMinutes
  attr_accessor :maxScheduledItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxScheduledMinutes = nil, minScheduledMinutes = nil, maxScheduledItems = nil)
    @maxScheduledMinutes = maxScheduledMinutes
    @minScheduledMinutes = minScheduledMinutes
    @maxScheduledItems = maxScheduledItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchAttributesType
class SearchAttributesType
  @@schema_type = "SearchAttributesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeID")]],
    ["dateSpecifier", ["DateSpecifierCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DateSpecifier")]],
    ["rangeSpecifier", ["RangeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RangeSpecifier")]],
    ["valueList", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueList")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attributeID
  attr_accessor :dateSpecifier
  attr_accessor :rangeSpecifier
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateSpecifier = nil, rangeSpecifier = nil, valueList = [])
    @attributeID = attributeID
    @dateSpecifier = dateSpecifier
    @rangeSpecifier = rangeSpecifier
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchDetailsType
class SearchDetailsType
  @@schema_type = "SearchDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["buyItNowEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowEnabled")]],
    ["picture", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Picture")]],
    ["recentListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecentListing")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :buyItNowEnabled
  attr_accessor :picture
  attr_accessor :recentListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyItNowEnabled = nil, picture = nil, recentListing = nil)
    @buyItNowEnabled = buyItNowEnabled
    @picture = picture
    @recentListing = recentListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationFilterType
class SearchLocationFilterType
  @@schema_type = "SearchLocationFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["countryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryCode")]],
    ["itemLocation", ["ItemLocationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemLocation")]],
    ["searchLocation", ["SearchLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocation")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :countryCode
  attr_accessor :itemLocation
  attr_accessor :searchLocation
  attr_accessor :currency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(countryCode = nil, itemLocation = nil, searchLocation = nil, currency = nil)
    @countryCode = countryCode
    @itemLocation = itemLocation
    @searchLocation = searchLocation
    @currency = currency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationType
class SearchLocationType
  @@schema_type = "SearchLocationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["siteLocation", ["SiteLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteLocation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :regionID
  attr_accessor :siteLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, siteLocation = nil)
    @regionID = regionID
    @siteLocation = siteLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchRequestType
class SearchRequestType
  @@schema_type = "SearchRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["searchAttributes", ["SearchAttributesType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchAttributes")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :searchAttributes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetID = nil, productFinderID = nil, searchAttributes = [])
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @searchAttributes = searchAttributes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemArrayType
class SearchResultItemArrayType < ::Array
  @@schema_element = [
    ["SearchResultItem", ["SearchResultItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultItem")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemType
class SearchResultItemType
  @@schema_type = "SearchResultItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["itemSpecific", ["NameValueListArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemSpecific")]],
    ["searchResultValues", ["SearchResultValuesCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultValues")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :item
  attr_accessor :itemSpecific
  attr_accessor :searchResultValues
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, itemSpecific = nil, searchResultValues = [])
    @item = item
    @itemSpecific = itemSpecific
    @searchResultValues = searchResultValues
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchStoreFilterType
class SearchStoreFilterType
  @@schema_type = "SearchStoreFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["storeSearch", ["StoreSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreSearch")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :storeName
  attr_accessor :storeSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeName = nil, storeSearch = nil)
    @storeName = storeName
    @storeSearch = storeSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerContactDetailsEnabledDefinitionType
class SellerContactDetailsEnabledDefinitionType
  @@schema_type = "SellerContactDetailsEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFavoriteItemPreferencesType
class SellerFavoriteItemPreferencesType
  @@schema_type = "SellerFavoriteItemPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["searchKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchKeywords")]],
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["searchSortOrder", ["StoreItemListSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchSortOrder")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["favoriteItemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteItemID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :searchKeywords
  attr_accessor :storeCategoryID
  attr_accessor :listingType
  attr_accessor :searchSortOrder
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :favoriteItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchKeywords = nil, storeCategoryID = nil, listingType = nil, searchSortOrder = nil, minPrice = nil, maxPrice = nil, favoriteItemID = [])
    @searchKeywords = searchKeywords
    @storeCategoryID = storeCategoryID
    @listingType = listingType
    @searchSortOrder = searchSortOrder
    @minPrice = minPrice
    @maxPrice = maxPrice
    @favoriteItemID = favoriteItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentPreferencesType
class SellerPaymentPreferencesType
  @@schema_type = "SellerPaymentPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["alwaysUseThisPaymentAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlwaysUseThisPaymentAddress")]],
    ["displayPayNowButton", ["DisplayPayNowButtonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayPayNowButton")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]],
    ["defaultPayPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DefaultPayPalEmailAddress")]],
    ["payPalAlwaysOn", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAlwaysOn")]],
    ["sellerPaymentAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentAddress")]],
    ["uPSRateOption", ["UPSRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UPSRateOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :alwaysUseThisPaymentAddress
  attr_accessor :displayPayNowButton
  attr_accessor :payPalPreferred
  attr_accessor :defaultPayPalEmailAddress
  attr_accessor :payPalAlwaysOn
  attr_accessor :sellerPaymentAddress
  attr_accessor :uPSRateOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alwaysUseThisPaymentAddress = nil, displayPayNowButton = nil, payPalPreferred = nil, defaultPayPalEmailAddress = nil, payPalAlwaysOn = nil, sellerPaymentAddress = nil, uPSRateOption = nil)
    @alwaysUseThisPaymentAddress = alwaysUseThisPaymentAddress
    @displayPayNowButton = displayPayNowButton
    @payPalPreferred = payPalPreferred
    @defaultPayPalEmailAddress = defaultPayPalEmailAddress
    @payPalAlwaysOn = payPalAlwaysOn
    @sellerPaymentAddress = sellerPaymentAddress
    @uPSRateOption = uPSRateOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentType
class SellerPaymentType
  @@schema_type = "SellerPaymentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]],
    ["privateNotes", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateNotes")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["paymentType", ["PaymentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentType")]],
    ["transactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionPrice")]],
    ["shippingReimbursement", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingReimbursement")]],
    ["commission", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Commission")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["paidTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaidTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :sellerInventoryID
  attr_accessor :privateNotes
  attr_accessor :externalProductID
  attr_accessor :title
  attr_accessor :paymentType
  attr_accessor :transactionPrice
  attr_accessor :shippingReimbursement
  attr_accessor :commission
  attr_accessor :amountPaid
  attr_accessor :paidTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, orderID = nil, sellerInventoryID = nil, privateNotes = nil, externalProductID = nil, title = nil, paymentType = nil, transactionPrice = nil, shippingReimbursement = nil, commission = nil, amountPaid = nil, paidTime = nil)
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @sellerInventoryID = sellerInventoryID
    @privateNotes = privateNotes
    @externalProductID = externalProductID
    @title = title
    @paymentType = paymentType
    @transactionPrice = transactionPrice
    @shippingReimbursement = shippingReimbursement
    @commission = commission
    @amountPaid = amountPaid
    @paidTime = paidTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerType
class SellerType
  @@schema_type = "SellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paisaPayStatus", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaisaPayStatus")]],
    ["allowPaymentEdit", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllowPaymentEdit")]],
    ["billingCurrency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BillingCurrency")]],
    ["checkoutEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutEnabled")]],
    ["cIPBankAccountStored", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CIPBankAccountStored")]],
    ["goodStanding", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GoodStanding")]],
    ["liveAuctionAuthorized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionAuthorized")]],
    ["merchandizingPref", ["MerchandizingPrefCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MerchandizingPref")]],
    ["qualifiesForB2BVAT", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QualifiesForB2BVAT")]],
    ["sellerGuaranteeLevel", ["SellerGuaranteeLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerGuaranteeLevel")]],
    ["sellerLevel", ["SellerLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerLevel")]],
    ["sellerPaymentAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentAddress")]],
    ["schedulingInfo", ["SchedulingInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SchedulingInfo")]],
    ["storeOwner", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreOwner")]],
    ["storeURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreURL")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["registeredBusinessSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegisteredBusinessSeller")]],
    ["expressEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEligible")]],
    ["paymentMethod", ["SellerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["proStoresPreference", ["ProStoresCheckoutPreferenceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProStoresPreference")]],
    ["expressWallet", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressWallet")]],
    ["expressSellerRequirements", ["ExpressSellerRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressSellerRequirements")]],
    ["charityRegistered", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityRegistered")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :paisaPayStatus
  attr_accessor :allowPaymentEdit
  attr_accessor :billingCurrency
  attr_accessor :checkoutEnabled
  attr_accessor :cIPBankAccountStored
  attr_accessor :goodStanding
  attr_accessor :liveAuctionAuthorized
  attr_accessor :merchandizingPref
  attr_accessor :qualifiesForB2BVAT
  attr_accessor :sellerGuaranteeLevel
  attr_accessor :sellerLevel
  attr_accessor :sellerPaymentAddress
  attr_accessor :schedulingInfo
  attr_accessor :storeOwner
  attr_accessor :storeURL
  attr_accessor :sellerBusinessType
  attr_accessor :registeredBusinessSeller
  attr_accessor :expressEligible
  attr_accessor :paymentMethod
  attr_accessor :proStoresPreference
  attr_accessor :expressWallet
  attr_accessor :expressSellerRequirements
  attr_accessor :charityRegistered
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paisaPayStatus = nil, allowPaymentEdit = nil, billingCurrency = nil, checkoutEnabled = nil, cIPBankAccountStored = nil, goodStanding = nil, liveAuctionAuthorized = nil, merchandizingPref = nil, qualifiesForB2BVAT = nil, sellerGuaranteeLevel = nil, sellerLevel = nil, sellerPaymentAddress = nil, schedulingInfo = nil, storeOwner = nil, storeURL = nil, sellerBusinessType = nil, registeredBusinessSeller = nil, expressEligible = nil, paymentMethod = nil, proStoresPreference = nil, expressWallet = nil, expressSellerRequirements = nil, charityRegistered = nil)
    @paisaPayStatus = paisaPayStatus
    @allowPaymentEdit = allowPaymentEdit
    @billingCurrency = billingCurrency
    @checkoutEnabled = checkoutEnabled
    @cIPBankAccountStored = cIPBankAccountStored
    @goodStanding = goodStanding
    @liveAuctionAuthorized = liveAuctionAuthorized
    @merchandizingPref = merchandizingPref
    @qualifiesForB2BVAT = qualifiesForB2BVAT
    @sellerGuaranteeLevel = sellerGuaranteeLevel
    @sellerLevel = sellerLevel
    @sellerPaymentAddress = sellerPaymentAddress
    @schedulingInfo = schedulingInfo
    @storeOwner = storeOwner
    @storeURL = storeURL
    @sellerBusinessType = sellerBusinessType
    @registeredBusinessSeller = registeredBusinessSeller
    @expressEligible = expressEligible
    @paymentMethod = paymentMethod
    @proStoresPreference = proStoresPreference
    @expressWallet = expressWallet
    @expressSellerRequirements = expressSellerRequirements
    @charityRegistered = charityRegistered
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductDetailsType
class SellingManagerProductDetailsType
  @@schema_type = "SellingManagerProductDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductName")]],
    ["partNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartNumber")]],
    ["productPartNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductPartNumber")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :productName
  attr_accessor :partNumber
  attr_accessor :productPartNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productName = nil, partNumber = nil, productPartNumber = nil)
    @productName = productName
    @partNumber = partNumber
    @productPartNumber = productPartNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingStatusType
class SellingStatusType
  @@schema_type = "SellingStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidCount")]],
    ["bidIncrement", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidIncrement")]],
    ["convertedCurrentPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedCurrentPrice")]],
    ["currentPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentPrice")]],
    ["highBidder", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighBidder")]],
    ["leadCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeadCount")]],
    ["minimumToBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumToBid")]],
    ["quantitySold", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantitySold")]],
    ["reserveMet", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveMet")]],
    ["secondChanceEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceEligible")]],
    ["bidderCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderCount")]],
    ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]],
    ["finalValueFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinalValueFee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :bidCount
  attr_accessor :bidIncrement
  attr_accessor :convertedCurrentPrice
  attr_accessor :currentPrice
  attr_accessor :highBidder
  attr_accessor :leadCount
  attr_accessor :minimumToBid
  attr_accessor :quantitySold
  attr_accessor :reserveMet
  attr_accessor :secondChanceEligible
  attr_accessor :bidderCount
  attr_accessor :listingStatus
  attr_accessor :finalValueFee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidCount = nil, bidIncrement = nil, convertedCurrentPrice = nil, currentPrice = nil, highBidder = nil, leadCount = nil, minimumToBid = nil, quantitySold = nil, reserveMet = nil, secondChanceEligible = nil, bidderCount = nil, listingStatus = nil, finalValueFee = nil)
    @bidCount = bidCount
    @bidIncrement = bidIncrement
    @convertedCurrentPrice = convertedCurrentPrice
    @currentPrice = currentPrice
    @highBidder = highBidder
    @leadCount = leadCount
    @minimumToBid = minimumToBid
    @quantitySold = quantitySold
    @reserveMet = reserveMet
    @secondChanceEligible = secondChanceEligible
    @bidderCount = bidderCount
    @listingStatus = listingStatus
    @finalValueFee = finalValueFee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingSummaryType
class SellingSummaryType
  @@schema_type = "SellingSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["activeAuctionCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveAuctionCount")]],
    ["auctionSellingCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuctionSellingCount")]],
    ["auctionBidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuctionBidCount")]],
    ["totalAuctionSellingValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAuctionSellingValue")]],
    ["totalSoldCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalSoldCount")]],
    ["totalSoldValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalSoldValue")]],
    ["soldDurationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldDurationInDays")]]
  ]

  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentType
class ShipmentType
  @@schema_type = "ShipmentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["estimatedDeliveryDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EstimatedDeliveryDate")]],
    ["insuredValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuredValue")]],
    ["packageDepth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageDepth")]],
    ["packageLength", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageLength")]],
    ["packageWidth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageWidth")]],
    ["payPalShipmentID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalShipmentID")]],
    ["shipmentID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentID")]],
    ["postageTotal", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostageTotal")]],
    ["printedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrintedTime")]],
    ["shipFromAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipFromAddress")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["shippingCarrierUsed", ["ShippingCarrierCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCarrierUsed")]],
    ["shippingFeature", ["ShippingFeatureCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingFeature")]],
    ["shippingPackage", ["ShippingPackageCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingPackage")]],
    ["shippingServiceUsed", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceUsed")]],
    ["shipmentTrackingNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackingNumber")]],
    ["weightMajor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMajor")]],
    ["weightMinor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMinor")]],
    ["itemTransactionID", ["ItemTransactionIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTransactionID")]],
    ["deliveryDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryDate")]],
    ["deliveryStatus", ["ShipmentDeliveryStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryStatus")]],
    ["refundGrantedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundGrantedTime")]],
    ["refundRequestedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundRequestedTime")]],
    ["status", ["ShipmentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :estimatedDeliveryDate
  attr_accessor :insuredValue
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :payPalShipmentID
  attr_accessor :shipmentID
  attr_accessor :postageTotal
  attr_accessor :printedTime
  attr_accessor :shipFromAddress
  attr_accessor :shippingAddress
  attr_accessor :shippingCarrierUsed
  attr_accessor :shippingFeature
  attr_accessor :shippingPackage
  attr_accessor :shippingServiceUsed
  attr_accessor :shipmentTrackingNumber
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :itemTransactionID
  attr_accessor :deliveryDate
  attr_accessor :deliveryStatus
  attr_accessor :refundGrantedTime
  attr_accessor :refundRequestedTime
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(estimatedDeliveryDate = nil, insuredValue = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, payPalShipmentID = nil, shipmentID = nil, postageTotal = nil, printedTime = nil, shipFromAddress = nil, shippingAddress = nil, shippingCarrierUsed = nil, shippingFeature = [], shippingPackage = nil, shippingServiceUsed = nil, shipmentTrackingNumber = nil, weightMajor = nil, weightMinor = nil, itemTransactionID = [], deliveryDate = nil, deliveryStatus = nil, refundGrantedTime = nil, refundRequestedTime = nil, status = nil)
    @estimatedDeliveryDate = estimatedDeliveryDate
    @insuredValue = insuredValue
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @payPalShipmentID = payPalShipmentID
    @shipmentID = shipmentID
    @postageTotal = postageTotal
    @printedTime = printedTime
    @shipFromAddress = shipFromAddress
    @shippingAddress = shippingAddress
    @shippingCarrierUsed = shippingCarrierUsed
    @shippingFeature = shippingFeature
    @shippingPackage = shippingPackage
    @shippingServiceUsed = shippingServiceUsed
    @shipmentTrackingNumber = shipmentTrackingNumber
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @itemTransactionID = itemTransactionID
    @deliveryDate = deliveryDate
    @deliveryStatus = deliveryStatus
    @refundGrantedTime = refundGrantedTime
    @refundRequestedTime = refundRequestedTime
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingDetailsType
class ShippingDetailsType
  @@schema_type = "ShippingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["allowPaymentEdit", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllowPaymentEdit")]],
    ["applyShippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplyShippingDiscount")]],
    ["calculatedShippingRate", ["CalculatedShippingRateType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingRate")]],
    ["changePaymentInstructions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChangePaymentInstructions")]],
    ["insuranceFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceFee")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["insuranceWanted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceWanted")]],
    ["paymentEdited", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentEdited")]],
    ["paymentInstructions", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentInstructions")]],
    ["salesTax", ["SalesTaxType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["sellerPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPostalCode")]],
    ["shippingRateErrorMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRateErrorMessage")]],
    ["shippingRateType", ["ShippingRateTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRateType")]],
    ["shippingServiceOptions", ["ShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceOptions")]],
    ["internationalShippingServiceOption", ["InternationalShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalShippingServiceOption")]],
    ["shippingType", ["ShippingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingType")]],
    ["sellingManagerSalesRecordNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingManagerSalesRecordNumber")]],
    ["thirdPartyCheckout", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThirdPartyCheckout")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]],
    ["getItFast", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetItFast")]],
    ["shipmentTrackingNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackingNumber")]],
    ["shippingServiceUsed", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceUsed")]],
    ["defaultShippingCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DefaultShippingCost")]],
    ["insuranceDetails", ["InsuranceDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceDetails")]],
    ["internationalInsuranceDetails", ["InsuranceDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalInsuranceDetails")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :allowPaymentEdit
  attr_accessor :applyShippingDiscount
  attr_accessor :calculatedShippingRate
  attr_accessor :changePaymentInstructions
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_accessor :insuranceWanted
  attr_accessor :paymentEdited
  attr_accessor :paymentInstructions
  attr_accessor :salesTax
  attr_accessor :sellerPostalCode
  attr_accessor :shippingRateErrorMessage
  attr_accessor :shippingRateType
  attr_accessor :shippingServiceOptions
  attr_accessor :internationalShippingServiceOption
  attr_accessor :shippingType
  attr_accessor :sellingManagerSalesRecordNumber
  attr_accessor :thirdPartyCheckout
  attr_accessor :taxTable
  attr_accessor :getItFast
  attr_accessor :shipmentTrackingNumber
  attr_accessor :shippingServiceUsed
  attr_accessor :defaultShippingCost
  attr_accessor :insuranceDetails
  attr_accessor :internationalInsuranceDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(allowPaymentEdit = nil, applyShippingDiscount = nil, calculatedShippingRate = nil, changePaymentInstructions = nil, insuranceFee = nil, insuranceOption = nil, insuranceWanted = nil, paymentEdited = nil, paymentInstructions = nil, salesTax = nil, sellerPostalCode = nil, shippingRateErrorMessage = nil, shippingRateType = nil, shippingServiceOptions = [], internationalShippingServiceOption = [], shippingType = nil, sellingManagerSalesRecordNumber = nil, thirdPartyCheckout = nil, taxTable = nil, getItFast = nil, shipmentTrackingNumber = nil, shippingServiceUsed = nil, defaultShippingCost = nil, insuranceDetails = nil, internationalInsuranceDetails = nil)
    @allowPaymentEdit = allowPaymentEdit
    @applyShippingDiscount = applyShippingDiscount
    @calculatedShippingRate = calculatedShippingRate
    @changePaymentInstructions = changePaymentInstructions
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @insuranceWanted = insuranceWanted
    @paymentEdited = paymentEdited
    @paymentInstructions = paymentInstructions
    @salesTax = salesTax
    @sellerPostalCode = sellerPostalCode
    @shippingRateErrorMessage = shippingRateErrorMessage
    @shippingRateType = shippingRateType
    @shippingServiceOptions = shippingServiceOptions
    @internationalShippingServiceOption = internationalShippingServiceOption
    @shippingType = shippingType
    @sellingManagerSalesRecordNumber = sellingManagerSalesRecordNumber
    @thirdPartyCheckout = thirdPartyCheckout
    @taxTable = taxTable
    @getItFast = getItFast
    @shipmentTrackingNumber = shipmentTrackingNumber
    @shippingServiceUsed = shippingServiceUsed
    @defaultShippingCost = defaultShippingCost
    @insuranceDetails = insuranceDetails
    @internationalInsuranceDetails = internationalInsuranceDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingLocationDetailsType
class ShippingLocationDetailsType
  @@schema_type = "ShippingLocationDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingLocation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingLocation")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :shippingLocation
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingLocation = nil, description = nil)
    @shippingLocation = shippingLocation
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceDetailsType
class ShippingServiceDetailsType
  @@schema_type = "ShippingServiceDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["expeditedService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpeditedService")]],
    ["internationalService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalService")]],
    ["shippingService", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceID")]],
    ["shippingTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMax")]],
    ["shippingTimeMin", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMin")]],
    ["shippingServiceCode", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :description
  attr_accessor :expeditedService
  attr_accessor :internationalService
  attr_accessor :shippingService
  attr_accessor :shippingServiceID
  attr_accessor :shippingTimeMax
  attr_accessor :shippingTimeMin
  attr_accessor :shippingServiceCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, expeditedService = nil, internationalService = nil, shippingService = nil, shippingServiceID = nil, shippingTimeMax = nil, shippingTimeMin = nil, shippingServiceCode = nil)
    @description = description
    @expeditedService = expeditedService
    @internationalService = internationalService
    @shippingService = shippingService
    @shippingServiceID = shippingServiceID
    @shippingTimeMax = shippingTimeMax
    @shippingTimeMin = shippingTimeMin
    @shippingServiceCode = shippingServiceCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceOptionsType
class ShippingServiceOptionsType
  @@schema_type = "ShippingServiceOptionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingInsuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingInsuranceCost")]],
    ["shippingService", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceCost")]],
    ["shippingServiceAdditionalCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceAdditionalCost")]],
    ["shippingServicePriority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServicePriority")]],
    ["expeditedService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpeditedService")]],
    ["shippingTimeMin", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMin")]],
    ["shippingTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMax")]],
    ["shippingSurcharge", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingSurcharge")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :shippingInsuranceCost
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :expeditedService
  attr_accessor :shippingTimeMin
  attr_accessor :shippingTimeMax
  attr_accessor :shippingSurcharge
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingInsuranceCost = nil, shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, expeditedService = nil, shippingTimeMin = nil, shippingTimeMax = nil, shippingSurcharge = nil)
    @shippingInsuranceCost = shippingInsuranceCost
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @expeditedService = expeditedService
    @shippingTimeMin = shippingTimeMin
    @shippingTimeMax = shippingTimeMax
    @shippingSurcharge = shippingSurcharge
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermRequiredDefinitionType
class ShippingTermRequiredDefinitionType
  @@schema_type = "ShippingTermRequiredDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDefaultsType
class SiteDefaultsType
  @@schema_type = "SiteDefaultsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingDuration", ["ListingDurationReferenceType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["shippingTermsRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["dutchBINEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DutchBINEnabled")]],
    ["userConsentRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserConsentRequired")]],
    ["homePageFeaturedEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePageFeaturedEnabled")]],
    ["proPackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackEnabled")]],
    ["basicUpgradePackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BasicUpgradePackEnabled")]],
    ["valuePackEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValuePackEnabled")]],
    ["proPackPlusEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProPackPlusEnabled")]],
    ["adFormatEnabled", ["AdFormatEnabledCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatEnabled")]],
    ["digitalDeliveryEnabled", ["DigitalDeliveryEnabledCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DigitalDeliveryEnabled")]],
    ["bestOfferCounterEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCounterEnabled")]],
    ["bestOfferAutoDeclineEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferAutoDeclineEnabled")]],
    ["localMarketSpecialitySubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketSpecialitySubscription")]],
    ["localMarketRegularSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketRegularSubscription")]],
    ["localMarketPremiumSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketPremiumSubscription")]],
    ["localMarketNonSubscription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalMarketNonSubscription")]],
    ["expressEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressEnabled")]],
    ["expressPicturesRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressPicturesRequired")]],
    ["expressConditionRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpressConditionRequired")]],
    ["minimumReservePrice", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]],
    ["sellerContactDetailsEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerContactDetailsEnabled")]],
    ["transactionConfirmationRequestEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionConfirmationRequestEnabled")]],
    ["storeInventoryEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreInventoryEnabled")]],
    ["skypeMeTransactionalEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeTransactionalEnabled")]],
    ["skypeMeNonTransactionalEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeMeNonTransactionalEnabled")]],
    ["localListingDistancesRegular", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesRegular")]],
    ["localListingDistancesSpecialty", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesSpecialty")]],
    ["localListingDistancesNonSubscription", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocalListingDistancesNonSubscription")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :digitalDeliveryEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, digitalDeliveryEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil)
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @digitalDeliveryEnabled = digitalDeliveryEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDetailsType
class SiteDetailsType
  @@schema_type = "SiteDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["siteID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :site
  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, siteID = nil)
    @site = site
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteHostedPictureType
class SiteHostedPictureType
  @@schema_type = "SiteHostedPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["photoDisplay", ["PhotoDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhotoDisplay")]],
    ["galleryType", ["GalleryTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryType")]],
    ["galleryURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryURL")]],
    ["pictureSource", ["PictureSourceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureSource")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :pictureURL
  attr_accessor :photoDisplay
  attr_accessor :galleryType
  attr_accessor :galleryURL
  attr_accessor :pictureSource
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = [], photoDisplay = nil, galleryType = nil, galleryURL = nil, pictureSource = nil)
    @pictureURL = pictureURL
    @photoDisplay = photoDisplay
    @galleryType = galleryType
    @galleryURL = galleryURL
    @pictureSource = pictureSource
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteLocationType
class SiteLocationType
  @@schema_type = "SiteLocationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["siteID", ["SiteIDFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(siteID = nil)
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteWideCharacteristicsType
class SiteWideCharacteristicsType
  @@schema_type = "SiteWideCharacteristicsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["characteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSet")]],
    ["excludeCategoryID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeCategoryID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :characteristicsSet
  attr_accessor :excludeCategoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(characteristicsSet = nil, excludeCategoryID = [])
    @characteristicsSet = characteristicsSet
    @excludeCategoryID = excludeCategoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeNonTransactionalEnabledDefinitionType
class SkypeMeNonTransactionalEnabledDefinitionType
  @@schema_type = "SkypeMeNonTransactionalEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeTransactionalEnabledDefinitionType
class SkypeMeTransactionalEnabledDefinitionType
  @@schema_type = "SkypeMeTransactionalEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SpellingSuggestionType
class SpellingSuggestionType
  @@schema_type = "SpellingSuggestionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["matchingItemCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MatchingItemCount")]],
    ["text", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :matchingItemCount
  attr_accessor :text
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(matchingItemCount = nil, text = [])
    @matchingItemCount = matchingItemCount
    @text = text
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeArrayType
class StoreColorSchemeArrayType < ::Array
  @@schema_element = [
    ["ColorScheme", ["StoreColorSchemeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorScheme")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeType
class StoreColorSchemeType
  @@schema_type = "StoreColorSchemeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["colorSchemeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorSchemeID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["color", ["StoreColorType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Color")]],
    ["font", ["StoreFontType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Font")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :colorSchemeID
  attr_accessor :name
  attr_accessor :color
  attr_accessor :font
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(colorSchemeID = nil, name = nil, color = nil, font = nil)
    @colorSchemeID = colorSchemeID
    @name = name
    @color = color
    @font = font
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorType
class StoreColorType
  @@schema_type = "StoreColorType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["primary", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Primary")]],
    ["secondary", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Secondary")]],
    ["accent", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Accent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :primary
  attr_accessor :secondary
  attr_accessor :accent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(primary = nil, secondary = nil, accent = nil)
    @primary = primary
    @secondary = secondary
    @accent = accent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryArrayType
class StoreCustomCategoryArrayType < ::Array
  @@schema_element = [
    ["CustomCategory", ["StoreCustomCategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomCategory")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryType
class StoreCustomCategoryType
  @@schema_type = "StoreCustomCategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["childrenCategories", ["StoreCustomCategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChildrenCategories")]],
    ["childCategory", ["StoreCustomCategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChildCategory")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :categoryID
  attr_accessor :name
  attr_accessor :order
  attr_accessor :childrenCategories
  attr_accessor :childCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, name = nil, order = nil, childrenCategories = nil, childCategory = [])
    @categoryID = categoryID
    @name = name
    @order = order
    @childrenCategories = childrenCategories
    @childCategory = childCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkType
class StoreCustomListingHeaderLinkType
  @@schema_type = "StoreCustomListingHeaderLinkType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["linkID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkID")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["linkType", ["StoreCustomListingHeaderLinkCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :linkID
  attr_accessor :order
  attr_accessor :linkType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(linkID = nil, order = nil, linkType = nil)
    @linkID = linkID
    @order = order
    @linkType = linkType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderType
class StoreCustomListingHeaderType
  @@schema_type = "StoreCustomListingHeaderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayType", ["StoreCustomListingHeaderDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayType")]],
    ["logo", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Logo")]],
    ["searchBox", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchBox")]],
    ["linkToInclude", ["StoreCustomListingHeaderLinkType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkToInclude")]],
    ["addToFavoriteStores", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddToFavoriteStores")]],
    ["signUpForStoreNewsletter", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SignUpForStoreNewsletter")]],
    ["breadCrumb", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BreadCrumb")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :displayType
  attr_accessor :logo
  attr_accessor :searchBox
  attr_accessor :linkToInclude
  attr_accessor :addToFavoriteStores
  attr_accessor :signUpForStoreNewsletter
  attr_accessor :breadCrumb
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, logo = nil, searchBox = nil, linkToInclude = [], addToFavoriteStores = nil, signUpForStoreNewsletter = nil, breadCrumb = nil)
    @displayType = displayType
    @logo = logo
    @searchBox = searchBox
    @linkToInclude = linkToInclude
    @addToFavoriteStores = addToFavoriteStores
    @signUpForStoreNewsletter = signUpForStoreNewsletter
    @breadCrumb = breadCrumb
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageArrayType
class StoreCustomPageArrayType < ::Array
  @@schema_element = [
    ["CustomPage", ["StoreCustomPageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageType
class StoreCustomPageType
  @@schema_type = "StoreCustomPageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["pageID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageID")]],
    ["uRLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLPath")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["status", ["StoreCustomPageStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["content", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Content")]],
    ["leftNav", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeftNav")]],
    ["previewEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PreviewEnabled")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :pageID
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :status
  attr_accessor :content
  attr_accessor :leftNav
  attr_accessor :previewEnabled
  attr_accessor :order
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, pageID = nil, uRLPath = nil, uRL = nil, status = nil, content = nil, leftNav = nil, previewEnabled = nil, order = nil)
    @name = name
    @pageID = pageID
    @uRLPath = uRLPath
    @uRL = uRL
    @status = status
    @content = content
    @leftNav = leftNav
    @previewEnabled = previewEnabled
    @order = order
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontType
class StoreFontType
  @@schema_type = "StoreFontType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["nameFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameFace")]],
    ["nameSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameSize")]],
    ["nameColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameColor")]],
    ["titleFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleFace")]],
    ["titleSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleSize")]],
    ["titleColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleColor")]],
    ["descFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescFace")]],
    ["descSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescSize")]],
    ["descColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescColor")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :nameFace
  attr_accessor :nameSize
  attr_accessor :nameColor
  attr_accessor :titleFace
  attr_accessor :titleSize
  attr_accessor :titleColor
  attr_accessor :descFace
  attr_accessor :descSize
  attr_accessor :descColor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(nameFace = nil, nameSize = nil, nameColor = nil, titleFace = nil, titleSize = nil, titleColor = nil, descFace = nil, descSize = nil, descColor = nil)
    @nameFace = nameFace
    @nameSize = nameSize
    @nameColor = nameColor
    @titleFace = titleFace
    @titleSize = titleSize
    @titleColor = titleColor
    @descFace = descFace
    @descSize = descSize
    @descColor = descColor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreInventoryEnabledDefinitionType
class StoreInventoryEnabledDefinitionType
  @@schema_type = "StoreInventoryEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoArrayType
class StoreLogoArrayType < ::Array
  @@schema_element = [
    ["Logo", ["StoreLogoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Logo")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoType
class StoreLogoType
  @@schema_type = "StoreLogoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["logoID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :logoID
  attr_accessor :name
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(logoID = nil, name = nil, uRL = nil)
    @logoID = logoID
    @name = name
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorePreferencesType
class StorePreferencesType
  @@schema_type = "StorePreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["vacationPreferences", ["StoreVacationPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VacationPreferences")]]
  ]

  attr_accessor :vacationPreferences

  def initialize(vacationPreferences = nil)
    @vacationPreferences = vacationPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionArrayType
class StoreSubscriptionArrayType < ::Array
  @@schema_element = [
    ["Subscription", ["StoreSubscriptionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subscription")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionType
class StoreSubscriptionType
  @@schema_type = "StoreSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["level", ["StoreSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Level")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :level
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, fee = nil)
    @level = level
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeArrayType
class StoreThemeArrayType
  @@schema_type = "StoreThemeArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["theme", ["StoreThemeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Theme")]],
    ["genericColorSchemeArray", ["StoreColorSchemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GenericColorSchemeArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :theme
  attr_accessor :genericColorSchemeArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(theme = [], genericColorSchemeArray = nil)
    @theme = theme
    @genericColorSchemeArray = genericColorSchemeArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeType
class StoreThemeType
  @@schema_type = "StoreThemeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["themeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["colorScheme", ["StoreColorSchemeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorScheme")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :themeID
  attr_accessor :name
  attr_accessor :colorScheme
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(themeID = nil, name = nil, colorScheme = nil)
    @themeID = themeID
    @name = name
    @colorScheme = colorScheme
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreType
class StoreType
  @@schema_type = "StoreType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLPath")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["subscriptionLevel", ["StoreSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["logo", ["StoreLogoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Logo")]],
    ["theme", ["StoreThemeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Theme")]],
    ["headerStyle", ["StoreHeaderStyleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HeaderStyle")]],
    ["homePage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePage")]],
    ["itemListLayout", ["StoreItemListLayoutCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemListLayout")]],
    ["itemListSortOrder", ["StoreItemListSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemListSortOrder")]],
    ["customHeaderLayout", ["StoreCustomHeaderLayoutCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomHeaderLayout")]],
    ["customHeader", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomHeader")]],
    ["exportListings", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExportListings")]],
    ["customCategories", ["StoreCustomCategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomCategories")]],
    ["customListingHeader", ["StoreCustomListingHeaderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomListingHeader")]],
    ["merchDisplay", ["MerchDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MerchDisplay")]],
    ["lastOpenedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastOpenedTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :name
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :subscriptionLevel
  attr_accessor :description
  attr_accessor :logo
  attr_accessor :theme
  attr_accessor :headerStyle
  attr_accessor :homePage
  attr_accessor :itemListLayout
  attr_accessor :itemListSortOrder
  attr_accessor :customHeaderLayout
  attr_accessor :customHeader
  attr_accessor :exportListings
  attr_accessor :customCategories
  attr_accessor :customListingHeader
  attr_accessor :merchDisplay
  attr_accessor :lastOpenedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRLPath = nil, uRL = nil, subscriptionLevel = nil, description = nil, logo = nil, theme = nil, headerStyle = nil, homePage = nil, itemListLayout = nil, itemListSortOrder = nil, customHeaderLayout = nil, customHeader = nil, exportListings = nil, customCategories = nil, customListingHeader = nil, merchDisplay = nil, lastOpenedTime = nil)
    @name = name
    @uRLPath = uRLPath
    @uRL = uRL
    @subscriptionLevel = subscriptionLevel
    @description = description
    @logo = logo
    @theme = theme
    @headerStyle = headerStyle
    @homePage = homePage
    @itemListLayout = itemListLayout
    @itemListSortOrder = itemListSortOrder
    @customHeaderLayout = customHeaderLayout
    @customHeader = customHeader
    @exportListings = exportListings
    @customCategories = customCategories
    @customListingHeader = customListingHeader
    @merchDisplay = merchDisplay
    @lastOpenedTime = lastOpenedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreVacationPreferencesType
class StoreVacationPreferencesType
  @@schema_type = "StoreVacationPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["onVacation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OnVacation")]],
    ["returnDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnDate")]],
    ["hideFixedPriceStoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HideFixedPriceStoreItems")]],
    ["messageItem", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageItem")]],
    ["messageStore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStore")]],
    ["displayMessageStoreCustomText", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayMessageStoreCustomText")]],
    ["messageStoreCustomText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStoreCustomText")]]
  ]

  attr_accessor :onVacation
  attr_accessor :returnDate
  attr_accessor :hideFixedPriceStoreItems
  attr_accessor :messageItem
  attr_accessor :messageStore
  attr_accessor :displayMessageStoreCustomText
  attr_accessor :messageStoreCustomText

  def initialize(onVacation = nil, returnDate = nil, hideFixedPriceStoreItems = nil, messageItem = nil, messageStore = nil, displayMessageStoreCustomText = nil, messageStoreCustomText = nil)
    @onVacation = onVacation
    @returnDate = returnDate
    @hideFixedPriceStoreItems = hideFixedPriceStoreItems
    @messageItem = messageItem
    @messageStore = messageStore
    @displayMessageStoreCustomText = displayMessageStoreCustomText
    @messageStoreCustomText = messageStoreCustomText
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorefrontType
class StorefrontType
  @@schema_type = "StorefrontType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["storeCategory2ID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategory2ID")]],
    ["storeURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreURL")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :storeCategoryID
  attr_accessor :storeCategory2ID
  attr_accessor :storeURL
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeCategoryID = nil, storeCategory2ID = nil, storeURL = nil, storeName = nil)
    @storeCategoryID = storeCategoryID
    @storeCategory2ID = storeCategory2ID
    @storeURL = storeURL
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SubscriptionType
class SubscriptionType
  @@schema_type = "SubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["siteID", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["active", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Active")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eIASToken
  attr_accessor :siteID
  attr_accessor :active
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eIASToken = nil, siteID = nil, active = nil)
    @eIASToken = eIASToken
    @siteID = siteID
    @active = active
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryArrayType
class SuggestedCategoryArrayType
  @@schema_type = "SuggestedCategoryArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["suggestedCategory", ["SuggestedCategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedCategory")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :suggestedCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(suggestedCategory = [])
    @suggestedCategory = suggestedCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryType
class SuggestedCategoryType
  @@schema_type = "SuggestedCategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["category", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["percentItemFound", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PercentItemFound")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :category
  attr_accessor :percentItemFound
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(category = nil, percentItemFound = nil)
    @category = category
    @percentItemFound = percentItemFound
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SummaryEventScheduleType
class SummaryEventScheduleType
  @@schema_type = "SummaryEventScheduleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eventType", ["NotificationEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventType")]],
    ["summaryPeriod", ["SummaryWindowPeriodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SummaryPeriod")]],
    ["frequency", ["SummaryFrequencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Frequency")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eventType
  attr_accessor :summaryPeriod
  attr_accessor :frequency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, summaryPeriod = nil, frequency = nil)
    @eventType = eventType
    @summaryPeriod = summaryPeriod
    @frequency = frequency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SupportedEventTypesArrayType
class SupportedEventTypesArrayType < ::Array
  @@schema_element = [
    ["EventType", ["NotificationEventTypeCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventType")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}TCREnabledDefinitionType
class TCREnabledDefinitionType
  @@schema_type = "TCREnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxJurisdictionType
class TaxJurisdictionType
  @@schema_type = "TaxJurisdictionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["jurisdictionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "JurisdictionID")]],
    ["salesTaxPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxPercent")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["jurisdictionName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "JurisdictionName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :jurisdictionID
  attr_accessor :salesTaxPercent
  attr_accessor :shippingIncludedInTax
  attr_accessor :jurisdictionName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(jurisdictionID = nil, salesTaxPercent = nil, shippingIncludedInTax = nil, jurisdictionName = nil)
    @jurisdictionID = jurisdictionID
    @salesTaxPercent = salesTaxPercent
    @shippingIncludedInTax = shippingIncludedInTax
    @jurisdictionName = jurisdictionName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxTableType
class TaxTableType < ::Array
  @@schema_element = [
    ["TaxJurisdiction", ["TaxJurisdictionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxJurisdiction")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}ThemeGroupType
class ThemeGroupType
  @@schema_type = "ThemeGroupType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["groupID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupID")]],
    ["groupName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupName")]],
    ["themeID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["themeTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeTotal")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :groupID
  attr_accessor :groupName
  attr_accessor :themeID
  attr_accessor :themeTotal
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, groupName = nil, themeID = [], themeTotal = nil)
    @groupID = groupID
    @groupName = groupName
    @themeID = themeID
    @themeTotal = themeTotal
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionArrayType
class TransactionArrayType < ::Array
  @@schema_element = [
    ["Transaction", ["TransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Transaction")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}TransactionStatusType
class TransactionStatusType
  @@schema_type = "TransactionStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayPaymentStatus", "PaymentStatusCodeType"],
    ["checkoutStatus", ["CheckoutStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["lastTimeModified", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastTimeModified")]],
    ["paymentMethodUsed", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethodUsed")]],
    ["completeStatus", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CompleteStatus")]],
    ["buyerSelectedShipping", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerSelectedShipping")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eBayPaymentStatus
  attr_accessor :checkoutStatus
  attr_accessor :lastTimeModified
  attr_accessor :paymentMethodUsed
  attr_accessor :completeStatus
  attr_accessor :buyerSelectedShipping
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, checkoutStatus = nil, lastTimeModified = nil, paymentMethodUsed = nil, completeStatus = nil, buyerSelectedShipping = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @checkoutStatus = checkoutStatus
    @lastTimeModified = lastTimeModified
    @paymentMethodUsed = paymentMethodUsed
    @completeStatus = completeStatus
    @buyerSelectedShipping = buyerSelectedShipping
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionType
class TransactionType
  @@schema_type = "TransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["convertedAdjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedAdjustmentAmount")]],
    ["buyer", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Buyer")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["convertedAmountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedAmountPaid")]],
    ["convertedTransactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedTransactionPrice")]],
    ["createdDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedDate")]],
    ["depositType", ["DepositTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DepositType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["quantityPurchased", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityPurchased")]],
    ["status", ["TransactionStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["transactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionPrice")]],
    ["bestOfferSale", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferSale")]],
    ["vATPercent", ["SOAP::SOAPDecimal", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["externalTransaction", ["ExternalTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["sellingManagerProductDetails", ["SellingManagerProductDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingManagerProductDetails")]],
    ["shippingServiceSelected", ["ShippingServiceOptionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceSelected")]],
    ["buyerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerMessage")]],
    ["dutchAuctionBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DutchAuctionBid")]],
    ["buyerPaidStatus", ["PaidStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerPaidStatus")]],
    ["sellerPaidStatus", ["PaidStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaidStatus")]],
    ["paidTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaidTime")]],
    ["shippedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippedTime")]],
    ["totalPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalPrice")]],
    ["feedbackLeft", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackLeft")]],
    ["feedbackReceived", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackReceived")]],
    ["containingOrder", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContainingOrder")]],
    ["finalValueFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinalValueFee")]],
    ["transactionPlatform", ["TransactionPlatformType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionPlatform")]],
    ["listingCheckoutRedirectPreference", ["ListingCheckoutRedirectPreferenceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingCheckoutRedirectPreference")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :amountPaid
  attr_accessor :adjustmentAmount
  attr_accessor :convertedAdjustmentAmount
  attr_accessor :buyer
  attr_accessor :shippingDetails
  attr_accessor :convertedAmountPaid
  attr_accessor :convertedTransactionPrice
  attr_accessor :createdDate
  attr_accessor :depositType
  attr_accessor :item
  attr_accessor :quantityPurchased
  attr_accessor :status
  attr_accessor :transactionID
  attr_accessor :transactionPrice
  attr_accessor :bestOfferSale
  attr_accessor :vATPercent
  attr_accessor :externalTransaction
  attr_accessor :sellingManagerProductDetails
  attr_accessor :shippingServiceSelected
  attr_accessor :buyerMessage
  attr_accessor :dutchAuctionBid
  attr_accessor :buyerPaidStatus
  attr_accessor :sellerPaidStatus
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_accessor :totalPrice
  attr_accessor :feedbackLeft
  attr_accessor :feedbackReceived
  attr_accessor :containingOrder
  attr_accessor :finalValueFee
  attr_accessor :transactionPlatform
  attr_accessor :listingCheckoutRedirectPreference
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPaid = nil, adjustmentAmount = nil, convertedAdjustmentAmount = nil, buyer = nil, shippingDetails = nil, convertedAmountPaid = nil, convertedTransactionPrice = nil, createdDate = nil, depositType = nil, item = nil, quantityPurchased = nil, status = nil, transactionID = nil, transactionPrice = nil, bestOfferSale = nil, vATPercent = nil, externalTransaction = [], sellingManagerProductDetails = nil, shippingServiceSelected = nil, buyerMessage = nil, dutchAuctionBid = nil, buyerPaidStatus = nil, sellerPaidStatus = nil, paidTime = nil, shippedTime = nil, totalPrice = nil, feedbackLeft = nil, feedbackReceived = nil, containingOrder = nil, finalValueFee = nil, transactionPlatform = nil, listingCheckoutRedirectPreference = nil)
    @amountPaid = amountPaid
    @adjustmentAmount = adjustmentAmount
    @convertedAdjustmentAmount = convertedAdjustmentAmount
    @buyer = buyer
    @shippingDetails = shippingDetails
    @convertedAmountPaid = convertedAmountPaid
    @convertedTransactionPrice = convertedTransactionPrice
    @createdDate = createdDate
    @depositType = depositType
    @item = item
    @quantityPurchased = quantityPurchased
    @status = status
    @transactionID = transactionID
    @transactionPrice = transactionPrice
    @bestOfferSale = bestOfferSale
    @vATPercent = vATPercent
    @externalTransaction = externalTransaction
    @sellingManagerProductDetails = sellingManagerProductDetails
    @shippingServiceSelected = shippingServiceSelected
    @buyerMessage = buyerMessage
    @dutchAuctionBid = dutchAuctionBid
    @buyerPaidStatus = buyerPaidStatus
    @sellerPaidStatus = sellerPaidStatus
    @paidTime = paidTime
    @shippedTime = shippedTime
    @totalPrice = totalPrice
    @feedbackLeft = feedbackLeft
    @feedbackReceived = feedbackReceived
    @containingOrder = containingOrder
    @finalValueFee = finalValueFee
    @transactionPlatform = transactionPlatform
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}URLDetailsType
class URLDetailsType
  @@schema_type = "URLDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["uRLType", ["URLTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLType")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :uRLType
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRLType = nil, uRL = nil)
    @uRLType = uRLType
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserConsentRequiredDefinitionType
class UserConsentRequiredDefinitionType
  @@schema_type = "UserConsentRequiredDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIDArrayType
class UserIDArrayType
  @@schema_type = "UserIDArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :userID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = [])
    @userID = userID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdFilterType
class UserIdFilterType
  @@schema_type = "UserIdFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["excludeSellers", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeSellers")]],
    ["includeSellers", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeSellers")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :excludeSellers
  attr_accessor :includeSellers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(excludeSellers = [], includeSellers = [])
    @excludeSellers = excludeSellers
    @includeSellers = includeSellers
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserType
class UserType
  @@schema_type = "UserType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["aboutMePage", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AboutMePage")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["rESTToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RESTToken")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["uniqueNegativeFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniqueNegativeFeedbackCount")]],
    ["uniquePositiveFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniquePositiveFeedbackCount")]],
    ["positiveFeedbackPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackPercent")]],
    ["feedbackPrivate", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackPrivate")]],
    ["feedbackRatingStar", ["FeedbackRatingStarCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackRatingStar")]],
    ["iDVerified", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IDVerified")]],
    ["eBayGoodStanding", "SOAP::SOAPBoolean"],
    ["newUser", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewUser")]],
    ["registrationAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationAddress")]],
    ["registrationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationDate")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["status", ["UserStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["userIDChanged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIDChanged")]],
    ["userIDLastChanged", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIDLastChanged")]],
    ["vATStatus", ["VATStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATStatus")]],
    ["buyerInfo", ["BuyerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerInfo")]],
    ["sellerInfo", ["SellerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInfo")]],
    ["charityAffiliations", ["CharityAffiliationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityAffiliations")]],
    ["charitySeller", ["CharitySellerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharitySeller")]],
    ["payPalAccountLevel", ["PayPalAccountLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAccountLevel")]],
    ["payPalAccountType", ["PayPalAccountTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAccountType")]],
    ["payPalAccountStatus", ["PayPalAccountStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAccountStatus")]],
    ["userSubscription", ["EBaySubscriptionTypeCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserSubscription")]],
    ["siteVerified", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteVerified")]],
    ["skypeID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SkypeID")]],
    ["eBayWikiReadOnly", "SOAP::SOAPBoolean"],
    ["tUVLevel", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TUVLevel")]],
    ["vATID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATID")]],
    ["motorsDealer", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsDealer")]],
    ["sellerPaymentMethod", ["SellerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :aboutMePage
  attr_accessor :eIASToken
  attr_accessor :rESTToken
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackPrivate
  attr_accessor :feedbackRatingStar
  attr_accessor :iDVerified
  attr_accessor :eBayGoodStanding
  attr_accessor :newUser
  attr_accessor :registrationAddress
  attr_accessor :registrationDate
  attr_accessor :site
  attr_accessor :status
  attr_accessor :userID
  attr_accessor :userIDChanged
  attr_accessor :userIDLastChanged
  attr_accessor :vATStatus
  attr_accessor :buyerInfo
  attr_accessor :sellerInfo
  attr_accessor :charityAffiliations
  attr_accessor :charitySeller
  attr_accessor :payPalAccountLevel
  attr_accessor :payPalAccountType
  attr_accessor :payPalAccountStatus
  attr_accessor :userSubscription
  attr_accessor :siteVerified
  attr_accessor :skypeID
  attr_accessor :eBayWikiReadOnly
  attr_accessor :tUVLevel
  attr_accessor :vATID
  attr_accessor :motorsDealer
  attr_accessor :sellerPaymentMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(aboutMePage = nil, eIASToken = nil, rESTToken = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, positiveFeedbackPercent = nil, feedbackPrivate = nil, feedbackRatingStar = nil, iDVerified = nil, eBayGoodStanding = nil, newUser = nil, registrationAddress = nil, registrationDate = nil, site = nil, status = nil, userID = nil, userIDChanged = nil, userIDLastChanged = nil, vATStatus = nil, buyerInfo = nil, sellerInfo = nil, charityAffiliations = nil, charitySeller = nil, payPalAccountLevel = nil, payPalAccountType = nil, payPalAccountStatus = nil, userSubscription = [], siteVerified = nil, skypeID = [], eBayWikiReadOnly = nil, tUVLevel = nil, vATID = nil, motorsDealer = nil, sellerPaymentMethod = nil)
    @aboutMePage = aboutMePage
    @eIASToken = eIASToken
    @rESTToken = rESTToken
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackPrivate = feedbackPrivate
    @feedbackRatingStar = feedbackRatingStar
    @iDVerified = iDVerified
    @eBayGoodStanding = eBayGoodStanding
    @newUser = newUser
    @registrationAddress = registrationAddress
    @registrationDate = registrationDate
    @site = site
    @status = status
    @userID = userID
    @userIDChanged = userIDChanged
    @userIDLastChanged = userIDLastChanged
    @vATStatus = vATStatus
    @buyerInfo = buyerInfo
    @sellerInfo = sellerInfo
    @charityAffiliations = charityAffiliations
    @charitySeller = charitySeller
    @payPalAccountLevel = payPalAccountLevel
    @payPalAccountType = payPalAccountType
    @payPalAccountStatus = payPalAccountStatus
    @userSubscription = userSubscription
    @siteVerified = siteVerified
    @skypeID = skypeID
    @eBayWikiReadOnly = eBayWikiReadOnly
    @tUVLevel = tUVLevel
    @vATID = vATID
    @motorsDealer = motorsDealer
    @sellerPaymentMethod = sellerPaymentMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VATDetailsType
class VATDetailsType
  @@schema_type = "VATDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["businessSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BusinessSeller")]],
    ["restrictedToBusiness", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RestrictedToBusiness")]],
    ["vATPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :businessSeller
  attr_accessor :restrictedToBusiness
  attr_accessor :vATPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(businessSeller = nil, restrictedToBusiness = nil, vATPercent = nil)
    @businessSeller = businessSeller
    @restrictedToBusiness = restrictedToBusiness
    @vATPercent = vATPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValType
class ValType
  @@schema_type = "ValType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["valueLiteral", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueLiteral")]],
    ["suggestedValueLiteral", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedValueLiteral")]],
    ["valueID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :valueLiteral
  attr_accessor :suggestedValueLiteral
  attr_accessor :valueID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(valueLiteral = nil, suggestedValueLiteral = [], valueID = nil)
    @valueLiteral = valueLiteral
    @suggestedValueLiteral = suggestedValueLiteral
    @valueID = valueID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValuePackEnabledDefinitionType
class ValuePackEnabledDefinitionType
  @@schema_type = "ValuePackEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VendorHostedPictureType
class VendorHostedPictureType
  @@schema_type = "VendorHostedPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["selfHostedURL", ["SOAP::SOAPAnyURI[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelfHostedURL")]],
    ["photoDisplay", ["PhotoDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhotoDisplay")]],
    ["galleryURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryURL")]],
    ["galleryType", ["GalleryTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :pictureURL
  attr_accessor :selfHostedURL
  attr_accessor :photoDisplay
  attr_accessor :galleryURL
  attr_accessor :galleryType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, selfHostedURL = [], photoDisplay = nil, galleryURL = nil, galleryType = nil)
    @pictureURL = pictureURL
    @selfHostedURL = selfHostedURL
    @photoDisplay = photoDisplay
    @galleryURL = galleryURL
    @galleryType = galleryType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifiedUserRequirementsType
class VerifiedUserRequirementsType
  @@schema_type = "VerifiedUserRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["verifiedUser", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VerifiedUser")]],
    ["minimumFeedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumFeedbackScore")]]
  ]

  attr_accessor :verifiedUser
  attr_accessor :minimumFeedbackScore

  def initialize(verifiedUser = nil, minimumFeedbackScore = nil)
    @verifiedUser = verifiedUser
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostArrayType
class WantItNowPostArrayType < ::Array
  @@schema_element = [
    ["WantItNowPost", ["WantItNowPostType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPost")]]
  ]
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostType
class WantItNowPostType
  @@schema_type = "WantItNowPostType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["responseCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseCount")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]]
  ]

  attr_accessor :categoryID
  attr_accessor :description
  attr_accessor :postID
  attr_accessor :site
  attr_accessor :startTime
  attr_accessor :responseCount
  attr_accessor :title

  def initialize(categoryID = nil, description = nil, postID = nil, site = nil, startTime = nil, responseCount = nil, title = nil)
    @categoryID = categoryID
    @description = description
    @postID = postID
    @site = site
    @startTime = startTime
    @responseCount = responseCount
    @title = title
  end
end

# {urn:ebay:apis:eBLBaseComponents}XSLFileType
class XSLFileType
  @@schema_type = "XSLFileType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]],
    ["fileContent", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileContent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :fileName
  attr_accessor :fileVersion
  attr_accessor :fileContent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(fileName = nil, fileVersion = nil, fileContent = nil)
    @fileName = fileName
    @fileVersion = fileVersion
    @fileContent = fileContent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBxOptInPreferenceType
class EBxOptInPreferenceType
  @@schema_type = "eBxOptInPreferenceType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBxOptInPreference", "SOAP::SOAPBoolean"],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]
  ]

  attr_accessor :eBxOptInPreference
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBxOptInPreference = nil)
    @eBxOptInPreference = eBxOptInPreference
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AckCodeType
class AckCodeType < ::String
  @@schema_type = "AckCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = AckCodeType.new("CustomCode")
  Failure = AckCodeType.new("Failure")
  PartialFailure = AckCodeType.new("PartialFailure")
  Success = AckCodeType.new("Success")
  Warning = AckCodeType.new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPaymentMethodCodeType
class BuyerPaymentMethodCodeType < ::String
  @@schema_type = "BuyerPaymentMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AmEx = BuyerPaymentMethodCodeType.new("AmEx")
  CCAccepted = BuyerPaymentMethodCodeType.new("CCAccepted")
  COD = BuyerPaymentMethodCodeType.new("COD")
  CODPrePayDelivery = BuyerPaymentMethodCodeType.new("CODPrePayDelivery")
  CashInPerson = BuyerPaymentMethodCodeType.new("CashInPerson")
  CashOnPickup = BuyerPaymentMethodCodeType.new("CashOnPickup")
  CustomCode = BuyerPaymentMethodCodeType.new("CustomCode")
  Discover = BuyerPaymentMethodCodeType.new("Discover")
  ELV = BuyerPaymentMethodCodeType.new("ELV")
  Escrow = BuyerPaymentMethodCodeType.new("Escrow")
  LoanCheck = BuyerPaymentMethodCodeType.new("LoanCheck")
  MOCC = BuyerPaymentMethodCodeType.new("MOCC")
  MoneyXferAccepted = BuyerPaymentMethodCodeType.new("MoneyXferAccepted")
  MoneyXferAcceptedInCheckout = BuyerPaymentMethodCodeType.new("MoneyXferAcceptedInCheckout")
  None = BuyerPaymentMethodCodeType.new("None")
  Other = BuyerPaymentMethodCodeType.new("Other")
  OtherOnlinePayments = BuyerPaymentMethodCodeType.new("OtherOnlinePayments")
  PaisaPayAccepted = BuyerPaymentMethodCodeType.new("PaisaPayAccepted")
  PayPal = BuyerPaymentMethodCodeType.new("PayPal")
  PaymentSeeDescription = BuyerPaymentMethodCodeType.new("PaymentSeeDescription")
  PersonalCheck = BuyerPaymentMethodCodeType.new("PersonalCheck")
  PostalTransfer = BuyerPaymentMethodCodeType.new("PostalTransfer")
  PrePayDelivery = BuyerPaymentMethodCodeType.new("PrePayDelivery")
  VisaMC = BuyerPaymentMethodCodeType.new("VisaMC")
end

# {urn:ebay:apis:eBLBaseComponents}DetailLevelCodeType
class DetailLevelCodeType < ::String
  @@schema_type = "DetailLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ItemReturnAttributes = DetailLevelCodeType.new("ItemReturnAttributes")
  ItemReturnCategories = DetailLevelCodeType.new("ItemReturnCategories")
  ItemReturnDescription = DetailLevelCodeType.new("ItemReturnDescription")
  ReturnAll = DetailLevelCodeType.new("ReturnAll")
  ReturnHeaders = DetailLevelCodeType.new("ReturnHeaders")
  ReturnMessages = DetailLevelCodeType.new("ReturnMessages")
  ReturnSummary = DetailLevelCodeType.new("ReturnSummary")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeActivityCodeType
class DisputeActivityCodeType < ::String
  @@schema_type = "DisputeActivityCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CameToAgreementNeedFVFCredit = DisputeActivityCodeType.new("CameToAgreementNeedFVFCredit")
  CustomCode = DisputeActivityCodeType.new("CustomCode")
  MutualAgreementOrNoBuyerResponse = DisputeActivityCodeType.new("MutualAgreementOrNoBuyerResponse")
  SellerAddInformation = DisputeActivityCodeType.new("SellerAddInformation")
  SellerComment = DisputeActivityCodeType.new("SellerComment")
  SellerCompletedTransaction = DisputeActivityCodeType.new("SellerCompletedTransaction")
  SellerEndCommunication = DisputeActivityCodeType.new("SellerEndCommunication")
  SellerOffersRefund = DisputeActivityCodeType.new("SellerOffersRefund")
  SellerPaymentNotReceived = DisputeActivityCodeType.new("SellerPaymentNotReceived")
  SellerShippedItem = DisputeActivityCodeType.new("SellerShippedItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeCreditEligibilityCodeType
class DisputeCreditEligibilityCodeType < ::String
  @@schema_type = "DisputeCreditEligibilityCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DisputeCreditEligibilityCodeType.new("CustomCode")
  Eligible = DisputeCreditEligibilityCodeType.new("Eligible")
  InEligible = DisputeCreditEligibilityCodeType.new("InEligible")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeExplanationCodeType
class DisputeExplanationCodeType < ::String
  @@schema_type = "DisputeExplanationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerHasNotResponded = DisputeExplanationCodeType.new("BuyerHasNotResponded")
  BuyerNoLongerRegistered = DisputeExplanationCodeType.new("BuyerNoLongerRegistered")
  BuyerNoLongerWantsItem = DisputeExplanationCodeType.new("BuyerNoLongerWantsItem")
  BuyerNotClearedToPay = DisputeExplanationCodeType.new("BuyerNotClearedToPay")
  BuyerPurchasingMistake = DisputeExplanationCodeType.new("BuyerPurchasingMistake")
  BuyerRefusedToPay = DisputeExplanationCodeType.new("BuyerRefusedToPay")
  BuyerReturnedItemForRefund = DisputeExplanationCodeType.new("BuyerReturnedItemForRefund")
  CustomCode = DisputeExplanationCodeType.new("CustomCode")
  OtherExplanation = DisputeExplanationCodeType.new("OtherExplanation")
  PaymentMethodNotSupported = DisputeExplanationCodeType.new("PaymentMethodNotSupported")
  ShipCountryNotSupported = DisputeExplanationCodeType.new("ShipCountryNotSupported")
  ShippingAddressNotConfirmed = DisputeExplanationCodeType.new("ShippingAddressNotConfirmed")
  UnableToResolveTerms = DisputeExplanationCodeType.new("UnableToResolveTerms")
  Unspecified = DisputeExplanationCodeType.new("Unspecified")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterTypeCodeType
class DisputeFilterTypeCodeType < ::String
  @@schema_type = "DisputeFilterTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AllInvolvedClosedDisputes = DisputeFilterTypeCodeType.new("AllInvolvedClosedDisputes")
  AllInvolvedDisputes = DisputeFilterTypeCodeType.new("AllInvolvedDisputes")
  CustomCode = DisputeFilterTypeCodeType.new("CustomCode")
  DisputesAwaitingMyResponse = DisputeFilterTypeCodeType.new("DisputesAwaitingMyResponse")
  DisputesAwaitingOtherPartyResponse = DisputeFilterTypeCodeType.new("DisputesAwaitingOtherPartyResponse")
  EligibleForCredit = DisputeFilterTypeCodeType.new("EligibleForCredit")
  ItemNotReceivedDisputes = DisputeFilterTypeCodeType.new("ItemNotReceivedDisputes")
  UnpaidItemDisputes = DisputeFilterTypeCodeType.new("UnpaidItemDisputes")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageSourceCodeType
class DisputeMessageSourceCodeType < ::String
  @@schema_type = "DisputeMessageSourceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Buyer = DisputeMessageSourceCodeType.new("Buyer")
  CustomCode = DisputeMessageSourceCodeType.new("CustomCode")
  EBay = DisputeMessageSourceCodeType.new("eBay")
  Seller = DisputeMessageSourceCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeReasonCodeType
class DisputeReasonCodeType < ::String
  @@schema_type = "DisputeReasonCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerHasNotPaid = DisputeReasonCodeType.new("BuyerHasNotPaid")
  CustomCode = DisputeReasonCodeType.new("CustomCode")
  ItemNotReceived = DisputeReasonCodeType.new("ItemNotReceived")
  SignificantlyNotAsDescribed = DisputeReasonCodeType.new("SignificantlyNotAsDescribed")
  TransactionMutuallyCanceled = DisputeReasonCodeType.new("TransactionMutuallyCanceled")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeRecordTypeCodeType
class DisputeRecordTypeCodeType < ::String
  @@schema_type = "DisputeRecordTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DisputeRecordTypeCodeType.new("CustomCode")
  ItemNotReceived = DisputeRecordTypeCodeType.new("ItemNotReceived")
  UnpaidItem = DisputeRecordTypeCodeType.new("UnpaidItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionReasonCodeType
class DisputeResolutionReasonCodeType < ::String
  @@schema_type = "DisputeResolutionReasonCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerPaidAuctionFees = DisputeResolutionReasonCodeType.new("BuyerPaidAuctionFees")
  CameToAgreement = DisputeResolutionReasonCodeType.new("CameToAgreement")
  ComputerTechnicalProblem = DisputeResolutionReasonCodeType.new("ComputerTechnicalProblem")
  CustomCode = DisputeResolutionReasonCodeType.new("CustomCode")
  FamilyEmergency = DisputeResolutionReasonCodeType.new("FamilyEmergency")
  FirstInfraction = DisputeResolutionReasonCodeType.new("FirstInfraction")
  ItemReturned = DisputeResolutionReasonCodeType.new("ItemReturned")
  NoContact = DisputeResolutionReasonCodeType.new("NoContact")
  OtherResolution = DisputeResolutionReasonCodeType.new("OtherResolution")
  ProofGivenInFeedback = DisputeResolutionReasonCodeType.new("ProofGivenInFeedback")
  ProofOfPayment = DisputeResolutionReasonCodeType.new("ProofOfPayment")
  SellerReceivedPayment = DisputeResolutionReasonCodeType.new("SellerReceivedPayment")
  Unresolved = DisputeResolutionReasonCodeType.new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionRecordTypeCodeType
class DisputeResolutionRecordTypeCodeType < ::String
  @@schema_type = "DisputeResolutionRecordTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AppealBuyerStrike = DisputeResolutionRecordTypeCodeType.new("AppealBuyerStrike")
  CustomCode = DisputeResolutionRecordTypeCodeType.new("CustomCode")
  FVFCredit = DisputeResolutionRecordTypeCodeType.new("FVFCredit")
  FVFCreditNotGranted = DisputeResolutionRecordTypeCodeType.new("FVFCreditNotGranted")
  GenerateCSTicketForSuspend = DisputeResolutionRecordTypeCodeType.new("GenerateCSTicketForSuspend")
  InsertionFeeCredit = DisputeResolutionRecordTypeCodeType.new("InsertionFeeCredit")
  ReverseFVFCredit = DisputeResolutionRecordTypeCodeType.new("ReverseFVFCredit")
  ReverseInsertionFeeCredit = DisputeResolutionRecordTypeCodeType.new("ReverseInsertionFeeCredit")
  StrikeBuyer = DisputeResolutionRecordTypeCodeType.new("StrikeBuyer")
  SuspendBuyer = DisputeResolutionRecordTypeCodeType.new("SuspendBuyer")
  UnsuspendBuyer = DisputeResolutionRecordTypeCodeType.new("UnsuspendBuyer")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeSortTypeCodeType
class DisputeSortTypeCodeType < ::String
  @@schema_type = "DisputeSortTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DisputeSortTypeCodeType.new("CustomCode")
  DisputeCreatedTimeAscending = DisputeSortTypeCodeType.new("DisputeCreatedTimeAscending")
  DisputeCreatedTimeDescending = DisputeSortTypeCodeType.new("DisputeCreatedTimeDescending")
  DisputeCreditEligibilityAscending = DisputeSortTypeCodeType.new("DisputeCreditEligibilityAscending")
  DisputeCreditEligibilityDescending = DisputeSortTypeCodeType.new("DisputeCreditEligibilityDescending")
  DisputeStatusAscending = DisputeSortTypeCodeType.new("DisputeStatusAscending")
  DisputeStatusDescending = DisputeSortTypeCodeType.new("DisputeStatusDescending")
  None = DisputeSortTypeCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStateCodeType
class DisputeStateCodeType < ::String
  @@schema_type = "DisputeStateCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerFirstResponseNoPayOption = DisputeStateCodeType.new("BuyerFirstResponseNoPayOption")
  BuyerFirstResponseNoPayOptionLateResponse = DisputeStateCodeType.new("BuyerFirstResponseNoPayOptionLateResponse")
  BuyerFirstResponsePayOption = DisputeStateCodeType.new("BuyerFirstResponsePayOption")
  BuyerFirstResponsePayOptionLateResponse = DisputeStateCodeType.new("BuyerFirstResponsePayOptionLateResponse")
  Closed = DisputeStateCodeType.new("Closed")
  CustomCode = DisputeStateCodeType.new("CustomCode")
  Locked = DisputeStateCodeType.new("Locked")
  MutualAgreementOrBuyerReturningItem = DisputeStateCodeType.new("MutualAgreementOrBuyerReturningItem")
  MutualCommunicationNoPayOption = DisputeStateCodeType.new("MutualCommunicationNoPayOption")
  MutualCommunicationPayOption = DisputeStateCodeType.new("MutualCommunicationPayOption")
  MutualWithdrawalAgreement = DisputeStateCodeType.new("MutualWithdrawalAgreement")
  MutualWithdrawalAgreementLate = DisputeStateCodeType.new("MutualWithdrawalAgreementLate")
  NotAsDescribedMutualCommunication = DisputeStateCodeType.new("NotAsDescribedMutualCommunication")
  NotAsDescribedNoSellerResponse = DisputeStateCodeType.new("NotAsDescribedNoSellerResponse")
  NotReceivedMutualCommunication = DisputeStateCodeType.new("NotReceivedMutualCommunication")
  NotReceivedNoSellerResponse = DisputeStateCodeType.new("NotReceivedNoSellerResponse")
  PendingResolve = DisputeStateCodeType.new("PendingResolve")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStatusCodeType
class DisputeStatusCodeType < ::String
  @@schema_type = "DisputeStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Closed = DisputeStatusCodeType.new("Closed")
  ClosedFVFCreditNoStrike = DisputeStatusCodeType.new("ClosedFVFCreditNoStrike")
  ClosedFVFCreditStrike = DisputeStatusCodeType.new("ClosedFVFCreditStrike")
  ClosedNoFVFCreditNoStrike = DisputeStatusCodeType.new("ClosedNoFVFCreditNoStrike")
  ClosedNoFVFCreditStrike = DisputeStatusCodeType.new("ClosedNoFVFCreditStrike")
  CustomCode = DisputeStatusCodeType.new("CustomCode")
  FVFCreditReversedAfterClosing = DisputeStatusCodeType.new("FVFCreditReversedAfterClosing")
  StrikeAppealedAfterClosing = DisputeStatusCodeType.new("StrikeAppealedAfterClosing")
  StrikeAppealedAndFVFCreditReversed = DisputeStatusCodeType.new("StrikeAppealedAndFVFCreditReversed")
  WaitingForBuyerResponse = DisputeStatusCodeType.new("WaitingForBuyerResponse")
  WaitingForSellerResponse = DisputeStatusCodeType.new("WaitingForSellerResponse")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorClassificationCodeType
class ErrorClassificationCodeType < ::String
  @@schema_type = "ErrorClassificationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ErrorClassificationCodeType.new("CustomCode")
  RequestError = ErrorClassificationCodeType.new("RequestError")
  SystemError = ErrorClassificationCodeType.new("SystemError")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorHandlingCodeType
class ErrorHandlingCodeType < ::String
  @@schema_type = "ErrorHandlingCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AllOrNothing = ErrorHandlingCodeType.new("AllOrNothing")
  BestEffort = ErrorHandlingCodeType.new("BestEffort")
  FailOnError = ErrorHandlingCodeType.new("FailOnError")
  Legacy = ErrorHandlingCodeType.new("Legacy")
end

# {urn:ebay:apis:eBLBaseComponents}InvocationStatusType
class InvocationStatusType < ::String
  @@schema_type = "InvocationStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = InvocationStatusType.new("CustomCode")
  Failure = InvocationStatusType.new("Failure")
  InProgress = InvocationStatusType.new("InProgress")
  Success = InvocationStatusType.new("Success")
end

# {urn:ebay:apis:eBLBaseComponents}MeasurementSystemCodeType
class MeasurementSystemCodeType < ::String
  @@schema_type = "MeasurementSystemCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  English = MeasurementSystemCodeType.new("English")
  Metric = MeasurementSystemCodeType.new("Metric")
end

# {urn:ebay:apis:eBLBaseComponents}SeverityCodeType
class SeverityCodeType < ::String
  @@schema_type = "SeverityCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = SeverityCodeType.new("CustomCode")
  Error = SeverityCodeType.new("Error")
  Warning = SeverityCodeType.new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}WarningLevelCodeType
class WarningLevelCodeType < ::String
  @@schema_type = "WarningLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  High = WarningLevelCodeType.new("High")
  Low = WarningLevelCodeType.new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleCurrentStatusCodeType
class AccessRuleCurrentStatusCodeType < ::String
  @@schema_type = "AccessRuleCurrentStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = AccessRuleCurrentStatusCodeType.new("CustomCode")
  DailyLimitExceeded = AccessRuleCurrentStatusCodeType.new("DailyLimitExceeded")
  DailySoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("DailySoftLimitExceeded")
  HourlyLimitExceeded = AccessRuleCurrentStatusCodeType.new("HourlyLimitExceeded")
  HourlySoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("HourlySoftLimitExceeded")
  NotSet = AccessRuleCurrentStatusCodeType.new("NotSet")
  PeriodicLimitExceeded = AccessRuleCurrentStatusCodeType.new("PeriodicLimitExceeded")
  PeriodicSoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("PeriodicSoftLimitExceeded")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleStatusCodeType
class AccessRuleStatusCodeType < ::String
  @@schema_type = "AccessRuleStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ApplicationBlocked = AccessRuleStatusCodeType.new("ApplicationBlocked")
  CustomCode = AccessRuleStatusCodeType.new("CustomCode")
  RuleOff = AccessRuleStatusCodeType.new("RuleOff")
  RuleOn = AccessRuleStatusCodeType.new("RuleOn")
end

# {urn:ebay:apis:eBLBaseComponents}AccountDetailEntryCodeType
class AccountDetailEntryCodeType < ::String
  @@schema_type = "AccountDetailEntryCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AWCredit = AccountDetailEntryCodeType.new("AWCredit")
  AWDebit = AccountDetailEntryCodeType.new("AWDebit")
  AWMemo = AccountDetailEntryCodeType.new("AWMemo")
  AccountStateSwitch = AccountDetailEntryCodeType.new("AccountStateSwitch")
  AllFeesCredit = AccountDetailEntryCodeType.new("AllFeesCredit")
  AutoPmntReqExempt = AccountDetailEntryCodeType.new("AutoPmntReqExempt")
  AutoPmntReqRein = AccountDetailEntryCodeType.new("AutoPmntReqRein")
  AutoTraderOff = AccountDetailEntryCodeType.new("AutoTraderOff")
  AutoTraderOn = AccountDetailEntryCodeType.new("AutoTraderOn")
  BBAdminCredit = AccountDetailEntryCodeType.new("BBAdminCredit")
  BBAdminDebit = AccountDetailEntryCodeType.new("BBAdminDebit")
  BasicBundleFee = AccountDetailEntryCodeType.new("BasicBundleFee")
  BasicBundleFeeCredit = AccountDetailEntryCodeType.new("BasicBundleFeeCredit")
  BasicUpgradePackBundleFee = AccountDetailEntryCodeType.new("BasicUpgradePackBundleFee")
  BasicUpgradePackBundleFeeCredit = AccountDetailEntryCodeType.new("BasicUpgradePackBundleFeeCredit")
  BonusPointsAddition = AccountDetailEntryCodeType.new("BonusPointsAddition")
  BonusPointsCashPayout = AccountDetailEntryCodeType.new("BonusPointsCashPayout")
  BonusPointsPaymentAutomatic = AccountDetailEntryCodeType.new("BonusPointsPaymentAutomatic")
  BonusPointsPaymentManual = AccountDetailEntryCodeType.new("BonusPointsPaymentManual")
  BonusPointsPaymentReversal = AccountDetailEntryCodeType.new("BonusPointsPaymentReversal")
  BonusPointsReduction = AccountDetailEntryCodeType.new("BonusPointsReduction")
  BorderFee = AccountDetailEntryCodeType.new("BorderFee")
  BorderFeeCredit = AccountDetailEntryCodeType.new("BorderFeeCredit")
  BulkUserSuspension = AccountDetailEntryCodeType.new("BulkUserSuspension")
  BuyItNowCredit = AccountDetailEntryCodeType.new("BuyItNowCredit")
  BuyItNowFee = AccountDetailEntryCodeType.new("BuyItNowFee")
  CCNotOnFilePerCustReq = AccountDetailEntryCodeType.new("CCNotOnFilePerCustReq")
  CCPaymentRejected = AccountDetailEntryCodeType.new("CCPaymentRejected")
  ChargeBack = AccountDetailEntryCodeType.new("ChargeBack")
  ChargeBackReversal = AccountDetailEntryCodeType.new("ChargeBackReversal")
  Chargeoff = AccountDetailEntryCodeType.new("Chargeoff")
  ChargeoffBankruptcy = AccountDetailEntryCodeType.new("ChargeoffBankruptcy")
  ChargeoffDeceased = AccountDetailEntryCodeType.new("ChargeoffDeceased")
  ChargeoffOther = AccountDetailEntryCodeType.new("ChargeoffOther")
  ChargeoffRecovery = AccountDetailEntryCodeType.new("ChargeoffRecovery")
  ChargeoffSuspended = AccountDetailEntryCodeType.new("ChargeoffSuspended")
  ChargeoffWacko = AccountDetailEntryCodeType.new("ChargeoffWacko")
  CreditAABasic = AccountDetailEntryCodeType.new("CreditAABasic")
  CreditAAPro = AccountDetailEntryCodeType.new("CreditAAPro")
  CreditBold = AccountDetailEntryCodeType.new("CreditBold")
  CreditCardNotOnFile = AccountDetailEntryCodeType.new("CreditCardNotOnFile")
  CreditCardOnFile = AccountDetailEntryCodeType.new("CreditCardOnFile")
  CreditCategoryFeatured = AccountDetailEntryCodeType.new("CreditCategoryFeatured")
  CreditCourtesy = AccountDetailEntryCodeType.new("CreditCourtesy")
  CreditDuplicateListing = AccountDetailEntryCodeType.new("CreditDuplicateListing")
  CreditEquifaxRealtimeFee = AccountDetailEntryCodeType.new("CreditEquifaxRealtimeFee")
  CreditFeatured = AccountDetailEntryCodeType.new("CreditFeatured")
  CreditFeaturedGallery = AccountDetailEntryCodeType.new("CreditFeaturedGallery")
  CreditFinalValue = AccountDetailEntryCodeType.new("CreditFinalValue")
  CreditFinalValueFixedPrice = AccountDetailEntryCodeType.new("CreditFinalValueFixedPrice")
  CreditGallery = AccountDetailEntryCodeType.new("CreditGallery")
  CreditGalleryPlus = AccountDetailEntryCodeType.new("CreditGalleryPlus")
  CreditGiftIcon = AccountDetailEntryCodeType.new("CreditGiftIcon")
  CreditHighlight = AccountDetailEntryCodeType.new("CreditHighlight")
  CreditIPIXPhoto = AccountDetailEntryCodeType.new("CreditIPIXPhoto")
  CreditIPIXSlideShow = AccountDetailEntryCodeType.new("CreditIPIXSlideShow")
  CreditInsertion = AccountDetailEntryCodeType.new("CreditInsertion")
  CreditInsertionFee = AccountDetailEntryCodeType.new("CreditInsertionFee")
  CreditInsertionFixedPrice = AccountDetailEntryCodeType.new("CreditInsertionFixedPrice")
  CreditLargePicture = AccountDetailEntryCodeType.new("CreditLargePicture")
  CreditNoSale = AccountDetailEntryCodeType.new("CreditNoSale")
  CreditPCGS = AccountDetailEntryCodeType.new("CreditPCGS")
  CreditPSA = AccountDetailEntryCodeType.new("CreditPSA")
  CreditPartialSale = AccountDetailEntryCodeType.new("CreditPartialSale")
  CreditPicturePackFull = AccountDetailEntryCodeType.new("CreditPicturePackFull")
  CreditPicturePackPartial = AccountDetailEntryCodeType.new("CreditPicturePackPartial")
  CreditPictureShow = AccountDetailEntryCodeType.new("CreditPictureShow")
  CreditRealEstate30DaysListing = AccountDetailEntryCodeType.new("CreditRealEstate30DaysListing")
  CreditReserve = AccountDetailEntryCodeType.new("CreditReserve")
  CreditSMBasic = AccountDetailEntryCodeType.new("CreditSMBasic")
  CreditSMBasicPro = AccountDetailEntryCodeType.new("CreditSMBasicPro")
  CreditSchedule = AccountDetailEntryCodeType.new("CreditSchedule")
  CreditSearchableMobileDE = AccountDetailEntryCodeType.new("CreditSearchableMobileDE")
  CreditSoftOutage = AccountDetailEntryCodeType.new("CreditSoftOutage")
  CreditTenDayAuction = AccountDetailEntryCodeType.new("CreditTenDayAuction")
  CreditTransferFrom = AccountDetailEntryCodeType.new("CreditTransferFrom")
  CrediteBayMotorsProFeatureFee = AccountDetailEntryCodeType.new("CrediteBayMotorsProFeatureFee")
  CrediteBayMotorsProFee = AccountDetailEntryCodeType.new("CrediteBayMotorsProFee")
  CrediteBayStores = AccountDetailEntryCodeType.new("CrediteBayStores")
  CustomCode = AccountDetailEntryCodeType.new("CustomCode")
  DebitTransferTo = AccountDetailEntryCodeType.new("DebitTransferTo")
  DirectDebitNotOnFile = AccountDetailEntryCodeType.new("DirectDebitNotOnFile")
  DirectDebitOnFile = AccountDetailEntryCodeType.new("DirectDebitOnFile")
  DirectDebitReturnedItem = AccountDetailEntryCodeType.new("DirectDebitReturnedItem")
  DirectDebitReversal = AccountDetailEntryCodeType.new("DirectDebitReversal")
  EBayCredit = AccountDetailEntryCodeType.new("eBayCredit")
  EBayDebit = AccountDetailEntryCodeType.new("eBayDebit")
  EBayMotorsProFeatureFee = AccountDetailEntryCodeType.new("eBayMotorsProFeatureFee")
  EBayMotorsProFee = AccountDetailEntryCodeType.new("eBayMotorsProFee")
  EBayStoreInventorySubscriptionCredit = AccountDetailEntryCodeType.new("eBayStoreInventorySubscriptionCredit")
  EBayVISACredit = AccountDetailEntryCodeType.new("eBayVISACredit")
  EOMRestriction = AccountDetailEntryCodeType.new("EOMRestriction")
  ElectronicInvoiceOff = AccountDetailEntryCodeType.new("ElectronicInvoiceOff")
  ElectronicInvoiceOn = AccountDetailEntryCodeType.new("ElectronicInvoiceOn")
  EmailMarketingCredit = AccountDetailEntryCodeType.new("EmailMarketingCredit")
  EmailMarketingFee = AccountDetailEntryCodeType.new("EmailMarketingFee")
  EquifaxRealtimeFee = AccountDetailEntryCodeType.new("EquifaxRealtimeFee")
  ExtendedAcutionCredit = AccountDetailEntryCodeType.new("ExtendedAcutionCredit")
  ExtendedAuctionFee = AccountDetailEntryCodeType.new("ExtendedAuctionFee")
  ExtendedDurationFee = AccountDetailEntryCodeType.new("ExtendedDurationFee")
  ExtendedDurationFeeCredit = AccountDetailEntryCodeType.new("ExtendedDurationFeeCredit")
  FVFCreditReversal = AccountDetailEntryCodeType.new("FVFCreditReversal")
  FVFCreditReversalAutomatic = AccountDetailEntryCodeType.new("FVFCreditReversalAutomatic")
  FeeBold = AccountDetailEntryCodeType.new("FeeBold")
  FeeCategoryFeatured = AccountDetailEntryCodeType.new("FeeCategoryFeatured")
  FeeFeatured = AccountDetailEntryCodeType.new("FeeFeatured")
  FeeFeaturedGallery = AccountDetailEntryCodeType.new("FeeFeaturedGallery")
  FeeFinalValue = AccountDetailEntryCodeType.new("FeeFinalValue")
  FeeFinalValueFixedPrice = AccountDetailEntryCodeType.new("FeeFinalValueFixedPrice")
  FeeGallery = AccountDetailEntryCodeType.new("FeeGallery")
  FeeGalleryPlus = AccountDetailEntryCodeType.new("FeeGalleryPlus")
  FeeGiftIcon = AccountDetailEntryCodeType.new("FeeGiftIcon")
  FeeHighlight = AccountDetailEntryCodeType.new("FeeHighlight")
  FeeIPIXPhoto = AccountDetailEntryCodeType.new("FeeIPIXPhoto")
  FeeIPIXSlideShow = AccountDetailEntryCodeType.new("FeeIPIXSlideShow")
  FeeInsertion = AccountDetailEntryCodeType.new("FeeInsertion")
  FeeInsertionFixedPrice = AccountDetailEntryCodeType.new("FeeInsertionFixedPrice")
  FeeLargePicture = AccountDetailEntryCodeType.new("FeeLargePicture")
  FeeNSFCheck = AccountDetailEntryCodeType.new("FeeNSFCheck")
  FeePartialSale = AccountDetailEntryCodeType.new("FeePartialSale")
  FeePicturePack = AccountDetailEntryCodeType.new("FeePicturePack")
  FeePictureShow = AccountDetailEntryCodeType.new("FeePictureShow")
  FeeRealEstate30DaysListing = AccountDetailEntryCodeType.new("FeeRealEstate30DaysListing")
  FeeRedepositCheck = AccountDetailEntryCodeType.new("FeeRedepositCheck")
  FeeReserve = AccountDetailEntryCodeType.new("FeeReserve")
  FeeReturnCheckClose = AccountDetailEntryCodeType.new("FeeReturnCheckClose")
  FeeReturnedCheck = AccountDetailEntryCodeType.new("FeeReturnedCheck")
  FeeSchedule = AccountDetailEntryCodeType.new("FeeSchedule")
  FeeSearchableMobileDE = AccountDetailEntryCodeType.new("FeeSearchableMobileDE")
  FeeTenDayAuction = AccountDetailEntryCodeType.new("FeeTenDayAuction")
  FinalEntry = AccountDetailEntryCodeType.new("FinalEntry")
  FinanceCharge = AccountDetailEntryCodeType.new("FinanceCharge")
  FinanceChargeReversal = AccountDetailEntryCodeType.new("FinanceChargeReversal")
  FixedPriceDurationCredit = AccountDetailEntryCodeType.new("FixedPriceDurationCredit")
  FixedPriceDurationFee = AccountDetailEntryCodeType.new("FixedPriceDurationFee")
  FlagDDDDPending = AccountDetailEntryCodeType.new("FlagDDDDPending")
  FlagDDPaymentConfirmed = AccountDetailEntryCodeType.new("FlagDDPaymentConfirmed")
  ForeignFundsCheckReversal = AccountDetailEntryCodeType.new("ForeignFundsCheckReversal")
  ForeignFundsConvert = AccountDetailEntryCodeType.new("ForeignFundsConvert")
  InternationalListingCredit = AccountDetailEntryCodeType.new("InternationalListingCredit")
  InternationalListingFee = AccountDetailEntryCodeType.new("InternationalListingFee")
  InvoiceCreditBalance = AccountDetailEntryCodeType.new("InvoiceCreditBalance")
  Invoiced = AccountDetailEntryCodeType.new("Invoiced")
  InvoicedCreditCard = AccountDetailEntryCodeType.new("InvoicedCreditCard")
  ItemMoveFee = AccountDetailEntryCodeType.new("ItemMoveFee")
  LAAudioVideoFee = AccountDetailEntryCodeType.new("LAAudioVideoFee")
  LAAudioVideoFeeRefund = AccountDetailEntryCodeType.new("LAAudioVideoFeeRefund")
  LABuyerPremiumPercentageFee = AccountDetailEntryCodeType.new("LABuyerPremiumPercentageFee")
  LABuyerPremiumPercentageFeeRefund = AccountDetailEntryCodeType.new("LABuyerPremiumPercentageFeeRefund")
  LACatalogFee = AccountDetailEntryCodeType.new("LACatalogFee")
  LACatalogInsertionRefund = AccountDetailEntryCodeType.new("LACatalogInsertionRefund")
  LACatalogItemFeeRefund = AccountDetailEntryCodeType.new("LACatalogItemFeeRefund")
  LAExtraItem = AccountDetailEntryCodeType.new("LAExtraItem")
  LAFinalValueFee = AccountDetailEntryCodeType.new("LAFinalValueFee")
  LAFinalValueFeeRefund = AccountDetailEntryCodeType.new("LAFinalValueFeeRefund")
  ListingDesignerCredit = AccountDetailEntryCodeType.new("ListingDesignerCredit")
  ListingDesignerFee = AccountDetailEntryCodeType.new("ListingDesignerFee")
  MarketplaceResearchBasicSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchBasicSubscriptionFee")
  MarketplaceResearchBasicSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchBasicSubscriptionFeeCredit")
  MarketplaceResearchExpiredSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchExpiredSubscriptionFee")
  MarketplaceResearchExpiredSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchExpiredSubscriptionFeeCredit")
  MarketplaceResearchProSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchProSubscriptionFee")
  MarketplaceResearchProSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchProSubscriptionFeeCredit")
  Memo = AccountDetailEntryCodeType.new("Memo")
  Merged = AccountDetailEntryCodeType.new("Merged")
  OutageCredit = AccountDetailEntryCodeType.new("OutageCredit")
  PaperInvoiceOff = AccountDetailEntryCodeType.new("PaperInvoiceOff")
  PaperInvoiceOn = AccountDetailEntryCodeType.new("PaperInvoiceOn")
  PayPalChargeBack = AccountDetailEntryCodeType.new("PayPalChargeBack")
  PayPalFailed = AccountDetailEntryCodeType.new("PayPalFailed")
  PayPalOTPPend = AccountDetailEntryCodeType.new("PayPalOTPPend")
  PayPalOTPSucc = AccountDetailEntryCodeType.new("PayPalOTPSucc")
  PayPalRefund = AccountDetailEntryCodeType.new("PayPalRefund")
  PaymentAdjustmentCredit = AccountDetailEntryCodeType.new("PaymentAdjustmentCredit")
  PaymentAdjustmentDebit = AccountDetailEntryCodeType.new("PaymentAdjustmentDebit")
  PaymentCC = AccountDetailEntryCodeType.new("PaymentCC")
  PaymentCCOnce = AccountDetailEntryCodeType.new("PaymentCCOnce")
  PaymentCash = AccountDetailEntryCodeType.new("PaymentCash")
  PaymentCheck = AccountDetailEntryCodeType.new("PaymentCheck")
  PaymentDirectDebit = AccountDetailEntryCodeType.new("PaymentDirectDebit")
  PaymentElectronicTransfer = AccountDetailEntryCodeType.new("PaymentElectronicTransfer")
  PaymentElectronicTransferReversal = AccountDetailEntryCodeType.new("PaymentElectronicTransferReversal")
  PaymentEquifaxCredit = AccountDetailEntryCodeType.new("PaymentEquifaxCredit")
  PaymentEquifaxDebit = AccountDetailEntryCodeType.new("PaymentEquifaxDebit")
  PaymentGiftCertificate = AccountDetailEntryCodeType.new("PaymentGiftCertificate")
  PaymentHomeBanking = AccountDetailEntryCodeType.new("PaymentHomeBanking")
  PaymentMoneyOrder = AccountDetailEntryCodeType.new("PaymentMoneyOrder")
  PaymentWireTransfer = AccountDetailEntryCodeType.new("PaymentWireTransfer")
  PaypalOffFile = AccountDetailEntryCodeType.new("PaypalOffFile")
  PaypalOnFile = AccountDetailEntryCodeType.new("PaypalOnFile")
  PaypalOnFileByCSR = AccountDetailEntryCodeType.new("PaypalOnFileByCSR")
  PictureManagerSubscriptionFee = AccountDetailEntryCodeType.new("PictureManagerSubscriptionFee")
  PictureManagerSubscriptionFeeCredit = AccountDetailEntryCodeType.new("PictureManagerSubscriptionFeeCredit")
  ProPackBundleFee = AccountDetailEntryCodeType.new("ProPackBundleFee")
  ProPackBundleFeeCredit = AccountDetailEntryCodeType.new("ProPackBundleFeeCredit")
  ProPackPlusBundleFee = AccountDetailEntryCodeType.new("ProPackPlusBundleFee")
  ProPackPlusBundleFeeCredit = AccountDetailEntryCodeType.new("ProPackPlusBundleFeeCredit")
  PromotionalCredit = AccountDetailEntryCodeType.new("PromotionalCredit")
  ReferrerCredit = AccountDetailEntryCodeType.new("ReferrerCredit")
  ReferrerDebit = AccountDetailEntryCodeType.new("ReferrerDebit")
  RefundCC = AccountDetailEntryCodeType.new("RefundCC")
  RefundCheck = AccountDetailEntryCodeType.new("RefundCheck")
  RevertUserState = AccountDetailEntryCodeType.new("RevertUserState")
  SMProListingDesignerCredit = AccountDetailEntryCodeType.new("SMProListingDesignerCredit")
  SMProListingDesignerFee = AccountDetailEntryCodeType.new("SMProListingDesignerFee")
  SalesReportsPlusCredit = AccountDetailEntryCodeType.new("SalesReportsPlusCredit")
  SalesReportsPlusFee = AccountDetailEntryCodeType.new("SalesReportsPlusFee")
  SellerReportsBasicCredit = AccountDetailEntryCodeType.new("SellerReportsBasicCredit")
  SellerReportsBasicFee = AccountDetailEntryCodeType.new("SellerReportsBasicFee")
  SellerReportsPlusCredit = AccountDetailEntryCodeType.new("SellerReportsPlusCredit")
  SellerReportsPlusFee = AccountDetailEntryCodeType.new("SellerReportsPlusFee")
  SetOnHold = AccountDetailEntryCodeType.new("SetOnHold")
  StoresGTCCredit = AccountDetailEntryCodeType.new("StoresGTCCredit")
  StoresGTCFee = AccountDetailEntryCodeType.new("StoresGTCFee")
  StoresReferralCredit = AccountDetailEntryCodeType.new("StoresReferralCredit")
  StoresReferralFee = AccountDetailEntryCodeType.new("StoresReferralFee")
  StoresSuccessfulListingFee = AccountDetailEntryCodeType.new("StoresSuccessfulListingFee")
  StoresSuccessfulListingFeeCredit = AccountDetailEntryCodeType.new("StoresSuccessfulListingFeeCredit")
  SubscriptionAABasic = AccountDetailEntryCodeType.new("SubscriptionAABasic")
  SubscriptionAAPro = AccountDetailEntryCodeType.new("SubscriptionAAPro")
  SubscriptionSMBasic = AccountDetailEntryCodeType.new("SubscriptionSMBasic")
  SubscriptionSMBasicPro = AccountDetailEntryCodeType.new("SubscriptionSMBasicPro")
  SubscriptioneBayStores = AccountDetailEntryCodeType.new("SubscriptioneBayStores")
  SubtitleFee = AccountDetailEntryCodeType.new("SubtitleFee")
  SubtitleFeeCredit = AccountDetailEntryCodeType.new("SubtitleFeeCredit")
  SwitchCurrency = AccountDetailEntryCodeType.new("SwitchCurrency")
  TemporaryCredit = AccountDetailEntryCodeType.new("TemporaryCredit")
  TemporaryCreditReversal = AccountDetailEntryCodeType.new("TemporaryCreditReversal")
  TradingLimitOverrideOff = AccountDetailEntryCodeType.new("TradingLimitOverrideOff")
  TradingLimitOverrideOn = AccountDetailEntryCodeType.new("TradingLimitOverrideOn")
  Unknown = AccountDetailEntryCodeType.new("Unknown")
  VATCredit = AccountDetailEntryCodeType.new("VATCredit")
  VATDebit = AccountDetailEntryCodeType.new("VATDebit")
  VATStatusChangeApproved = AccountDetailEntryCodeType.new("VATStatusChangeApproved")
  VATStatusChangePending = AccountDetailEntryCodeType.new("VATStatusChangePending")
  VATStatusChange_Denied = AccountDetailEntryCodeType.new("VATStatusChange_Denied")
  VATStatusDeletedByCSR = AccountDetailEntryCodeType.new("VATStatusDeletedByCSR")
  VATStatusDeletedByUser = AccountDetailEntryCodeType.new("VATStatusDeletedByUser")
  ValuePackBundleFee = AccountDetailEntryCodeType.new("ValuePackBundleFee")
  ValuePackBundleFeeCredit = AccountDetailEntryCodeType.new("ValuePackBundleFeeCredit")
  VehicleLocalFinalValueFee = AccountDetailEntryCodeType.new("VehicleLocalFinalValueFee")
  VehicleLocalFinalValueFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalFinalValueFeeCredit")
  VehicleLocalGTCFee = AccountDetailEntryCodeType.new("VehicleLocalGTCFee")
  VehicleLocalGTCFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalGTCFeeCredit")
  VehicleLocalInsertionFee = AccountDetailEntryCodeType.new("VehicleLocalInsertionFee")
  VehicleLocalInsertionFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalInsertionFeeCredit")
  VehicleLocalSubscriptionFee = AccountDetailEntryCodeType.new("VehicleLocalSubscriptionFee")
  VehicleLocalSubscriptionFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalSubscriptionFeeCredit")
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntrySortTypeCodeType
class AccountEntrySortTypeCodeType < ::String
  @@schema_type = "AccountEntrySortTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AccountEntryCreatedTimeAscending = AccountEntrySortTypeCodeType.new("AccountEntryCreatedTimeAscending")
  AccountEntryCreatedTimeDescending = AccountEntrySortTypeCodeType.new("AccountEntryCreatedTimeDescending")
  AccountEntryFeeTypeAscending = AccountEntrySortTypeCodeType.new("AccountEntryFeeTypeAscending")
  AccountEntryFeeTypeDescending = AccountEntrySortTypeCodeType.new("AccountEntryFeeTypeDescending")
  AccountEntryItemNumberAscending = AccountEntrySortTypeCodeType.new("AccountEntryItemNumberAscending")
  AccountEntryItemNumberDescending = AccountEntrySortTypeCodeType.new("AccountEntryItemNumberDescending")
  CustomCode = AccountEntrySortTypeCodeType.new("CustomCode")
  None = AccountEntrySortTypeCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}AccountHistorySelectionCodeType
class AccountHistorySelectionCodeType < ::String
  @@schema_type = "AccountHistorySelectionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BetweenSpecifiedDates = AccountHistorySelectionCodeType.new("BetweenSpecifiedDates")
  CustomCode = AccountHistorySelectionCodeType.new("CustomCode")
  LastInvoice = AccountHistorySelectionCodeType.new("LastInvoice")
  SpecifiedInvoice = AccountHistorySelectionCodeType.new("SpecifiedInvoice")
end

# {urn:ebay:apis:eBLBaseComponents}AccountStateCodeType
class AccountStateCodeType < ::String
  @@schema_type = "AccountStateCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = AccountStateCodeType.new("Active")
  CustomCode = AccountStateCodeType.new("CustomCode")
  Inactive = AccountStateCodeType.new("Inactive")
  Pending = AccountStateCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledCodeType
class AdFormatEnabledCodeType < ::String
  @@schema_type = "AdFormatEnabledCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ClassifiedAdEnabled = AdFormatEnabledCodeType.new("ClassifiedAdEnabled")
  ClassifiedAdOnly = AdFormatEnabledCodeType.new("ClassifiedAdOnly")
  Disabled = AdFormatEnabledCodeType.new("Disabled")
  Enabled = AdFormatEnabledCodeType.new("Enabled")
  Only = AdFormatEnabledCodeType.new("Only")
end

# {urn:ebay:apis:eBLBaseComponents}AddressOwnerCodeType
class AddressOwnerCodeType < ::String
  @@schema_type = "AddressOwnerCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = AddressOwnerCodeType.new("CustomCode")
  EBay = AddressOwnerCodeType.new("eBay")
  PayPal = AddressOwnerCodeType.new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}AddressRecordTypeCodeType
class AddressRecordTypeCodeType < ::String
  @@schema_type = "AddressRecordTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Business = AddressRecordTypeCodeType.new("Business")
  CustomCode = AddressRecordTypeCodeType.new("CustomCode")
  Residential = AddressRecordTypeCodeType.new("Residential")
end

# {urn:ebay:apis:eBLBaseComponents}AddressStatusCodeType
class AddressStatusCodeType < ::String
  @@schema_type = "AddressStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Confirmed = AddressStatusCodeType.new("Confirmed")
  CustomCode = AddressStatusCodeType.new("CustomCode")
  None = AddressStatusCodeType.new("None")
  Unconfirmed = AddressStatusCodeType.new("Unconfirmed")
end

# {urn:ebay:apis:eBLBaseComponents}BalanceCodeType
class BalanceCodeType < ::String
  @@schema_type = "BalanceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = BalanceCodeType.new("CustomCode")
  Other = BalanceCodeType.new("Other")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferActionCodeType
class BestOfferActionCodeType < ::String
  @@schema_type = "BestOfferActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Accept = BestOfferActionCodeType.new("Accept")
  Counter = BestOfferActionCodeType.new("Counter")
  CustomCode = BestOfferActionCodeType.new("CustomCode")
  Decline = BestOfferActionCodeType.new("Decline")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferStatusCodeType
class BestOfferStatusCodeType < ::String
  @@schema_type = "BestOfferStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Accepted = BestOfferStatusCodeType.new("Accepted")
  Active = BestOfferStatusCodeType.new("Active")
  AdminEnded = BestOfferStatusCodeType.new("AdminEnded")
  All = BestOfferStatusCodeType.new("All")
  Countered = BestOfferStatusCodeType.new("Countered")
  CustomCode = BestOfferStatusCodeType.new("CustomCode")
  Declined = BestOfferStatusCodeType.new("Declined")
  Expired = BestOfferStatusCodeType.new("Expired")
  Pending = BestOfferStatusCodeType.new("Pending")
  Retracted = BestOfferStatusCodeType.new("Retracted")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferTypeCodeType
class BestOfferTypeCodeType < ::String
  @@schema_type = "BestOfferTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerBestOffer = BestOfferTypeCodeType.new("BuyerBestOffer")
  BuyerCounterOffer = BestOfferTypeCodeType.new("BuyerCounterOffer")
  CustomCode = BestOfferTypeCodeType.new("CustomCode")
  SellerCounterOffer = BestOfferTypeCodeType.new("SellerCounterOffer")
end

# {urn:ebay:apis:eBLBaseComponents}BidActionCodeType
class BidActionCodeType < ::String
  @@schema_type = "BidActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Absentee = BidActionCodeType.new("Absentee")
  AutoCancel = BidActionCodeType.new("AutoCancel")
  AutoRetraction = BidActionCodeType.new("AutoRetraction")
  Bid = BidActionCodeType.new("Bid")
  BuyItNow = BidActionCodeType.new("BuyItNow")
  Cancelled = BidActionCodeType.new("Cancelled")
  CustomCode = BidActionCodeType.new("CustomCode")
  NotUsed = BidActionCodeType.new("NotUsed")
  Purchase = BidActionCodeType.new("Purchase")
  Retraction = BidActionCodeType.new("Retraction")
  Unknown = BidActionCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}BidderStatusCodeType
class BidderStatusCodeType < ::String
  @@schema_type = "BidderStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Approved = BidderStatusCodeType.new("Approved")
  CustomCode = BidderStatusCodeType.new("CustomCode")
  Denied = BidderStatusCodeType.new("Denied")
  Pending = BidderStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}BidderTypeCodeType
class BidderTypeCodeType < ::String
  @@schema_type = "BidderTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AllBidder = BidderTypeCodeType.new("AllBidder")
  CustomCode = BidderTypeCodeType.new("CustomCode")
  HighBidder = BidderTypeCodeType.new("HighBidder")
end

# {urn:ebay:apis:eBLBaseComponents}BulkCatalogListerStatusCodeType
class BulkCatalogListerStatusCodeType < ::String
  @@schema_type = "BulkCatalogListerStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = BulkCatalogListerStatusCodeType.new("Active")
  CustomCode = BulkCatalogListerStatusCodeType.new("CustomCode")
  OnHold = BulkCatalogListerStatusCodeType.new("OnHold")
  OnWatch = BulkCatalogListerStatusCodeType.new("OnWatch")
  Preapproved = BulkCatalogListerStatusCodeType.new("Preapproved")
  Suspended = BulkCatalogListerStatusCodeType.new("Suspended")
  WatchWarn = BulkCatalogListerStatusCodeType.new("WatchWarn")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionCodeType
class BuyerProtectionCodeType < ::String
  @@schema_type = "BuyerProtectionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = BuyerProtectionCodeType.new("CustomCode")
  ItemEligible = BuyerProtectionCodeType.new("ItemEligible")
  ItemIneligible = BuyerProtectionCodeType.new("ItemIneligible")
  ItemMarkedEligible = BuyerProtectionCodeType.new("ItemMarkedEligible")
  ItemMarkedIneligible = BuyerProtectionCodeType.new("ItemMarkedIneligible")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingChargeOptionCodeType
class CalculatedShippingChargeOptionCodeType < ::String
  @@schema_type = "CalculatedShippingChargeOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ChargeEachItem = CalculatedShippingChargeOptionCodeType.new("ChargeEachItem")
  ChargeEntireOrder = CalculatedShippingChargeOptionCodeType.new("ChargeEntireOrder")
  CustomCode = CalculatedShippingChargeOptionCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateOptionCodeType
class CalculatedShippingRateOptionCodeType < ::String
  @@schema_type = "CalculatedShippingRateOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CombinedItemWeight = CalculatedShippingRateOptionCodeType.new("CombinedItemWeight")
  CustomCode = CalculatedShippingRateOptionCodeType.new("CustomCode")
  IndividualItemWeight = CalculatedShippingRateOptionCodeType.new("IndividualItemWeight")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureDetailLevelCodeType
class CategoryFeatureDetailLevelCodeType < ::String
  @@schema_type = "CategoryFeatureDetailLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CategoryFeatureDetailLevelCodeType.new("CustomCode")
  ReturnAll = CategoryFeatureDetailLevelCodeType.new("ReturnAll")
  ReturnFeatureDefinitions = CategoryFeatureDetailLevelCodeType.new("ReturnFeatureDefinitions")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsOrderCodeType
class CategoryListingsOrderCodeType < ::String
  @@schema_type = "CategoryListingsOrderCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BestMatchSort = CategoryListingsOrderCodeType.new("BestMatchSort")
  CustomCode = CategoryListingsOrderCodeType.new("CustomCode")
  DistanceSort = CategoryListingsOrderCodeType.new("DistanceSort")
  ItemsBy24Hr = CategoryListingsOrderCodeType.new("ItemsBy24Hr")
  ItemsEndIn5Hr = CategoryListingsOrderCodeType.new("ItemsEndIn5Hr")
  ItemsEndToday = CategoryListingsOrderCodeType.new("ItemsEndToday")
  NoFilter = CategoryListingsOrderCodeType.new("NoFilter")
  SortByPriceAsc = CategoryListingsOrderCodeType.new("SortByPriceAsc")
  SortByPriceDesc = CategoryListingsOrderCodeType.new("SortByPriceDesc")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsSearchCodeType
class CategoryListingsSearchCodeType < ::String
  @@schema_type = "CategoryListingsSearchCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CategoryListingsSearchCodeType.new("CustomCode")
  Featured = CategoryListingsSearchCodeType.new("Featured")
  SuperFeatured = CategoryListingsSearchCodeType.new("SuperFeatured")
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSearchCodeType
class CharacteristicsSearchCodeType < ::String
  @@schema_type = "CharacteristicsSearchCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CharacteristicsSearchCodeType.new("CustomCode")
  Multi = CharacteristicsSearchCodeType.new("Multi")
  Single = CharacteristicsSearchCodeType.new("Single")
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationTypeCodeType
class CharityAffiliationTypeCodeType < ::String
  @@schema_type = "CharityAffiliationTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Community = CharityAffiliationTypeCodeType.new("Community")
  CustomCode = CharityAffiliationTypeCodeType.new("CustomCode")
  Direct = CharityAffiliationTypeCodeType.new("Direct")
  Remove = CharityAffiliationTypeCodeType.new("Remove")
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerStatusCodeType
class CharitySellerStatusCodeType < ::String
  @@schema_type = "CharitySellerStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Closed = CharitySellerStatusCodeType.new("Closed")
  CreditCardAboutToExpire = CharitySellerStatusCodeType.new("CreditCardAboutToExpire")
  CreditCardExpired = CharitySellerStatusCodeType.new("CreditCardExpired")
  CustomCode = CharitySellerStatusCodeType.new("CustomCode")
  DirectDebitRejected = CharitySellerStatusCodeType.new("DirectDebitRejected")
  NotRegisteredLostDirectSellerStatus = CharitySellerStatusCodeType.new("NotRegisteredLostDirectSellerStatus")
  Registered = CharitySellerStatusCodeType.new("Registered")
  RegisteredNoCreditCard = CharitySellerStatusCodeType.new("RegisteredNoCreditCard")
  Suspended = CharitySellerStatusCodeType.new("Suspended")
  TokenExpired = CharitySellerStatusCodeType.new("TokenExpired")
end

# {urn:ebay:apis:eBLBaseComponents}CharityStatusCodeType
class CharityStatusCodeType < ::String
  @@schema_type = "CharityStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CharityStatusCodeType.new("CustomCode")
  NoLongerValid = CharityStatusCodeType.new("NoLongerValid")
  Valid = CharityStatusCodeType.new("Valid")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutMethodCodeType
class CheckoutMethodCodeType < ::String
  @@schema_type = "CheckoutMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CheckoutMethodCodeType.new("CustomCode")
  Other = CheckoutMethodCodeType.new("Other")
  ThirdPartyCheckout = CheckoutMethodCodeType.new("ThirdPartyCheckout")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusCodeType
class CheckoutStatusCodeType < ::String
  @@schema_type = "CheckoutStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerRequestsTotal = CheckoutStatusCodeType.new("BuyerRequestsTotal")
  CheckoutComplete = CheckoutStatusCodeType.new("CheckoutComplete")
  CheckoutIncomplete = CheckoutStatusCodeType.new("CheckoutIncomplete")
  CustomCode = CheckoutStatusCodeType.new("CustomCode")
  SellerResponded = CheckoutStatusCodeType.new("SellerResponded")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentOptionCodeType
class CombinedPaymentOptionCodeType < ::String
  @@schema_type = "CombinedPaymentOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CombinedPaymentOptionCodeType.new("CustomCode")
  DiscountSpecified = CombinedPaymentOptionCodeType.new("DiscountSpecified")
  NoCombinedPayment = CombinedPaymentOptionCodeType.new("NoCombinedPayment")
  SpecifyDiscountLater = CombinedPaymentOptionCodeType.new("SpecifyDiscountLater")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPeriodCodeType
class CombinedPaymentPeriodCodeType < ::String
  @@schema_type = "CombinedPaymentPeriodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CombinedPaymentPeriodCodeType.new("CustomCode")
  Days_14 = CombinedPaymentPeriodCodeType.new("Days_14")
  Days_3 = CombinedPaymentPeriodCodeType.new("Days_3")
  Days_30 = CombinedPaymentPeriodCodeType.new("Days_30")
  Days_5 = CombinedPaymentPeriodCodeType.new("Days_5")
  Days_7 = CombinedPaymentPeriodCodeType.new("Days_7")
end

# {urn:ebay:apis:eBLBaseComponents}CommentTypeCodeType
class CommentTypeCodeType < ::String
  @@schema_type = "CommentTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = CommentTypeCodeType.new("CustomCode")
  IndependentlyWithdrawn = CommentTypeCodeType.new("IndependentlyWithdrawn")
  Negative = CommentTypeCodeType.new("Negative")
  Neutral = CommentTypeCodeType.new("Neutral")
  Positive = CommentTypeCodeType.new("Positive")
  Withdrawn = CommentTypeCodeType.new("Withdrawn")
end

# {urn:ebay:apis:eBLBaseComponents}CompleteStatusCodeType
class CompleteStatusCodeType < ::String
  @@schema_type = "CompleteStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Complete = CompleteStatusCodeType.new("Complete")
  CustomCode = CompleteStatusCodeType.new("CustomCode")
  Incomplete = CompleteStatusCodeType.new("Incomplete")
  Pending = CompleteStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}ConditionSelectionCodeType
class ConditionSelectionCodeType < ::String
  @@schema_type = "ConditionSelectionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  All = ConditionSelectionCodeType.new("All")
  CustomCode = ConditionSelectionCodeType.new("CustomCode")
  New = ConditionSelectionCodeType.new("New")
end

# {urn:ebay:apis:eBLBaseComponents}CountryCodeType
class CountryCodeType < ::String
  @@schema_type = "CountryCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AA = CountryCodeType.new("AA")
  AD = CountryCodeType.new("AD")
  AE = CountryCodeType.new("AE")
  AF = CountryCodeType.new("AF")
  AG = CountryCodeType.new("AG")
  AI = CountryCodeType.new("AI")
  AL = CountryCodeType.new("AL")
  AM = CountryCodeType.new("AM")
  AN = CountryCodeType.new("AN")
  AO = CountryCodeType.new("AO")
  AQ = CountryCodeType.new("AQ")
  AR = CountryCodeType.new("AR")
  AS = CountryCodeType.new("AS")
  AT = CountryCodeType.new("AT")
  AU = CountryCodeType.new("AU")
  AW = CountryCodeType.new("AW")
  AZ = CountryCodeType.new("AZ")
  BA = CountryCodeType.new("BA")
  BB = CountryCodeType.new("BB")
  BD = CountryCodeType.new("BD")
  BE = CountryCodeType.new("BE")
  BF = CountryCodeType.new("BF")
  BG = CountryCodeType.new("BG")
  BH = CountryCodeType.new("BH")
  BI = CountryCodeType.new("BI")
  BJ = CountryCodeType.new("BJ")
  BM = CountryCodeType.new("BM")
  BN = CountryCodeType.new("BN")
  BO = CountryCodeType.new("BO")
  BR = CountryCodeType.new("BR")
  BS = CountryCodeType.new("BS")
  BT = CountryCodeType.new("BT")
  BV = CountryCodeType.new("BV")
  BW = CountryCodeType.new("BW")
  BY = CountryCodeType.new("BY")
  BZ = CountryCodeType.new("BZ")
  CA = CountryCodeType.new("CA")
  CC = CountryCodeType.new("CC")
  CD = CountryCodeType.new("CD")
  CF = CountryCodeType.new("CF")
  CG = CountryCodeType.new("CG")
  CH = CountryCodeType.new("CH")
  CI = CountryCodeType.new("CI")
  CK = CountryCodeType.new("CK")
  CL = CountryCodeType.new("CL")
  CM = CountryCodeType.new("CM")
  CN = CountryCodeType.new("CN")
  CO = CountryCodeType.new("CO")
  CR = CountryCodeType.new("CR")
  CU = CountryCodeType.new("CU")
  CV = CountryCodeType.new("CV")
  CX = CountryCodeType.new("CX")
  CY = CountryCodeType.new("CY")
  CZ = CountryCodeType.new("CZ")
  CustomCode = CountryCodeType.new("CustomCode")
  DE = CountryCodeType.new("DE")
  DJ = CountryCodeType.new("DJ")
  DK = CountryCodeType.new("DK")
  DM = CountryCodeType.new("DM")
  DO = CountryCodeType.new("DO")
  DZ = CountryCodeType.new("DZ")
  EC = CountryCodeType.new("EC")
  EE = CountryCodeType.new("EE")
  EG = CountryCodeType.new("EG")
  EH = CountryCodeType.new("EH")
  ER = CountryCodeType.new("ER")
  ES = CountryCodeType.new("ES")
  ET = CountryCodeType.new("ET")
  FI = CountryCodeType.new("FI")
  FJ = CountryCodeType.new("FJ")
  FK = CountryCodeType.new("FK")
  FM = CountryCodeType.new("FM")
  FO = CountryCodeType.new("FO")
  FR = CountryCodeType.new("FR")
  GA = CountryCodeType.new("GA")
  GB = CountryCodeType.new("GB")
  GD = CountryCodeType.new("GD")
  GE = CountryCodeType.new("GE")
  GF = CountryCodeType.new("GF")
  GH = CountryCodeType.new("GH")
  GI = CountryCodeType.new("GI")
  GL = CountryCodeType.new("GL")
  GM = CountryCodeType.new("GM")
  GN = CountryCodeType.new("GN")
  GP = CountryCodeType.new("GP")
  GQ = CountryCodeType.new("GQ")
  GR = CountryCodeType.new("GR")
  GS = CountryCodeType.new("GS")
  GT = CountryCodeType.new("GT")
  GU = CountryCodeType.new("GU")
  GW = CountryCodeType.new("GW")
  GY = CountryCodeType.new("GY")
  HK = CountryCodeType.new("HK")
  HM = CountryCodeType.new("HM")
  HN = CountryCodeType.new("HN")
  HR = CountryCodeType.new("HR")
  HT = CountryCodeType.new("HT")
  HU = CountryCodeType.new("HU")
  ID = CountryCodeType.new("ID")
  IE = CountryCodeType.new("IE")
  IL = CountryCodeType.new("IL")
  IN = CountryCodeType.new("IN")
  IO = CountryCodeType.new("IO")
  IQ = CountryCodeType.new("IQ")
  IR = CountryCodeType.new("IR")
  IS = CountryCodeType.new("IS")
  IT = CountryCodeType.new("IT")
  JM = CountryCodeType.new("JM")
  JO = CountryCodeType.new("JO")
  JP = CountryCodeType.new("JP")
  KE = CountryCodeType.new("KE")
  KG = CountryCodeType.new("KG")
  KH = CountryCodeType.new("KH")
  KI = CountryCodeType.new("KI")
  KM = CountryCodeType.new("KM")
  KN = CountryCodeType.new("KN")
  KP = CountryCodeType.new("KP")
  KR = CountryCodeType.new("KR")
  KW = CountryCodeType.new("KW")
  KY = CountryCodeType.new("KY")
  KZ = CountryCodeType.new("KZ")
  LA = CountryCodeType.new("LA")
  LB = CountryCodeType.new("LB")
  LC = CountryCodeType.new("LC")
  LI = CountryCodeType.new("LI")
  LK = CountryCodeType.new("LK")
  LR = CountryCodeType.new("LR")
  LS = CountryCodeType.new("LS")
  LT = CountryCodeType.new("LT")
  LU = CountryCodeType.new("LU")
  LV = CountryCodeType.new("LV")
  LY = CountryCodeType.new("LY")
  MA = CountryCodeType.new("MA")
  MC = CountryCodeType.new("MC")
  MD = CountryCodeType.new("MD")
  MG = CountryCodeType.new("MG")
  MH = CountryCodeType.new("MH")
  MK = CountryCodeType.new("MK")
  ML = CountryCodeType.new("ML")
  MM = CountryCodeType.new("MM")
  MN = CountryCodeType.new("MN")
  MO = CountryCodeType.new("MO")
  MP = CountryCodeType.new("MP")
  MQ = CountryCodeType.new("MQ")
  MR = CountryCodeType.new("MR")
  MS = CountryCodeType.new("MS")
  MT = CountryCodeType.new("MT")
  MU = CountryCodeType.new("MU")
  MV = CountryCodeType.new("MV")
  MW = CountryCodeType.new("MW")
  MX = CountryCodeType.new("MX")
  MY = CountryCodeType.new("MY")
  MZ = CountryCodeType.new("MZ")
  NA = CountryCodeType.new("NA")
  NC = CountryCodeType.new("NC")
  NE = CountryCodeType.new("NE")
  NF = CountryCodeType.new("NF")
  NG = CountryCodeType.new("NG")
  NI = CountryCodeType.new("NI")
  NL = CountryCodeType.new("NL")
  NO = CountryCodeType.new("NO")
  NP = CountryCodeType.new("NP")
  NR = CountryCodeType.new("NR")
  NU = CountryCodeType.new("NU")
  NZ = CountryCodeType.new("NZ")
  OM = CountryCodeType.new("OM")
  PA = CountryCodeType.new("PA")
  PE = CountryCodeType.new("PE")
  PF = CountryCodeType.new("PF")
  PG = CountryCodeType.new("PG")
  PH = CountryCodeType.new("PH")
  PK = CountryCodeType.new("PK")
  PL = CountryCodeType.new("PL")
  PM = CountryCodeType.new("PM")
  PN = CountryCodeType.new("PN")
  PR = CountryCodeType.new("PR")
  PS = CountryCodeType.new("PS")
  PT = CountryCodeType.new("PT")
  PW = CountryCodeType.new("PW")
  PY = CountryCodeType.new("PY")
  QA = CountryCodeType.new("QA")
  QM = CountryCodeType.new("QM")
  QN = CountryCodeType.new("QN")
  QO = CountryCodeType.new("QO")
  QP = CountryCodeType.new("QP")
  RE = CountryCodeType.new("RE")
  RO = CountryCodeType.new("RO")
  RU = CountryCodeType.new("RU")
  RW = CountryCodeType.new("RW")
  SA = CountryCodeType.new("SA")
  SB = CountryCodeType.new("SB")
  SC = CountryCodeType.new("SC")
  SD = CountryCodeType.new("SD")
  SE = CountryCodeType.new("SE")
  SG = CountryCodeType.new("SG")
  SH = CountryCodeType.new("SH")
  SI = CountryCodeType.new("SI")
  SJ = CountryCodeType.new("SJ")
  SK = CountryCodeType.new("SK")
  SL = CountryCodeType.new("SL")
  SM = CountryCodeType.new("SM")
  SN = CountryCodeType.new("SN")
  SO = CountryCodeType.new("SO")
  SR = CountryCodeType.new("SR")
  ST = CountryCodeType.new("ST")
  SV = CountryCodeType.new("SV")
  SY = CountryCodeType.new("SY")
  SZ = CountryCodeType.new("SZ")
  TC = CountryCodeType.new("TC")
  TD = CountryCodeType.new("TD")
  TF = CountryCodeType.new("TF")
  TG = CountryCodeType.new("TG")
  TH = CountryCodeType.new("TH")
  TJ = CountryCodeType.new("TJ")
  TK = CountryCodeType.new("TK")
  TM = CountryCodeType.new("TM")
  TN = CountryCodeType.new("TN")
  TO = CountryCodeType.new("TO")
  TP = CountryCodeType.new("TP")
  TR = CountryCodeType.new("TR")
  TT = CountryCodeType.new("TT")
  TV = CountryCodeType.new("TV")
  TW = CountryCodeType.new("TW")
  TZ = CountryCodeType.new("TZ")
  UA = CountryCodeType.new("UA")
  UG = CountryCodeType.new("UG")
  UM = CountryCodeType.new("UM")
  US = CountryCodeType.new("US")
  UY = CountryCodeType.new("UY")
  UZ = CountryCodeType.new("UZ")
  VA = CountryCodeType.new("VA")
  VC = CountryCodeType.new("VC")
  VE = CountryCodeType.new("VE")
  VG = CountryCodeType.new("VG")
  VI = CountryCodeType.new("VI")
  VN = CountryCodeType.new("VN")
  VU = CountryCodeType.new("VU")
  WF = CountryCodeType.new("WF")
  WS = CountryCodeType.new("WS")
  YE = CountryCodeType.new("YE")
  YT = CountryCodeType.new("YT")
  YU = CountryCodeType.new("YU")
  ZA = CountryCodeType.new("ZA")
  ZM = CountryCodeType.new("ZM")
  ZW = CountryCodeType.new("ZW")
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyCodeType
class CurrencyCodeType < ::String
  @@schema_type = "CurrencyCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ADP = CurrencyCodeType.new("ADP")
  AED = CurrencyCodeType.new("AED")
  AFA = CurrencyCodeType.new("AFA")
  ALL = CurrencyCodeType.new("ALL")
  AMD = CurrencyCodeType.new("AMD")
  ANG = CurrencyCodeType.new("ANG")
  AOA = CurrencyCodeType.new("AOA")
  ARS = CurrencyCodeType.new("ARS")
  AUD = CurrencyCodeType.new("AUD")
  AWG = CurrencyCodeType.new("AWG")
  AZM = CurrencyCodeType.new("AZM")
  BAM = CurrencyCodeType.new("BAM")
  BBD = CurrencyCodeType.new("BBD")
  BDT = CurrencyCodeType.new("BDT")
  BGL = CurrencyCodeType.new("BGL")
  BGN = CurrencyCodeType.new("BGN")
  BHD = CurrencyCodeType.new("BHD")
  BIF = CurrencyCodeType.new("BIF")
  BMD = CurrencyCodeType.new("BMD")
  BND = CurrencyCodeType.new("BND")
  BOB = CurrencyCodeType.new("BOB")
  BOV = CurrencyCodeType.new("BOV")
  BRL = CurrencyCodeType.new("BRL")
  BSD = CurrencyCodeType.new("BSD")
  BTN = CurrencyCodeType.new("BTN")
  BWP = CurrencyCodeType.new("BWP")
  BYR = CurrencyCodeType.new("BYR")
  BZD = CurrencyCodeType.new("BZD")
  CAD = CurrencyCodeType.new("CAD")
  CDF = CurrencyCodeType.new("CDF")
  CHF = CurrencyCodeType.new("CHF")
  CLF = CurrencyCodeType.new("CLF")
  CLP = CurrencyCodeType.new("CLP")
  CNY = CurrencyCodeType.new("CNY")
  COP = CurrencyCodeType.new("COP")
  CRC = CurrencyCodeType.new("CRC")
  CUP = CurrencyCodeType.new("CUP")
  CVE = CurrencyCodeType.new("CVE")
  CYP = CurrencyCodeType.new("CYP")
  CZK = CurrencyCodeType.new("CZK")
  CustomCode = CurrencyCodeType.new("CustomCode")
  DJF = CurrencyCodeType.new("DJF")
  DKK = CurrencyCodeType.new("DKK")
  DOP = CurrencyCodeType.new("DOP")
  DZD = CurrencyCodeType.new("DZD")
  ECS = CurrencyCodeType.new("ECS")
  ECV = CurrencyCodeType.new("ECV")
  EEK = CurrencyCodeType.new("EEK")
  EGP = CurrencyCodeType.new("EGP")
  ERN = CurrencyCodeType.new("ERN")
  ETB = CurrencyCodeType.new("ETB")
  EUR = CurrencyCodeType.new("EUR")
  FJD = CurrencyCodeType.new("FJD")
  FKP = CurrencyCodeType.new("FKP")
  GBP = CurrencyCodeType.new("GBP")
  GEL = CurrencyCodeType.new("GEL")
  GHC = CurrencyCodeType.new("GHC")
  GIP = CurrencyCodeType.new("GIP")
  GMD = CurrencyCodeType.new("GMD")
  GNF = CurrencyCodeType.new("GNF")
  GTQ = CurrencyCodeType.new("GTQ")
  GWP = CurrencyCodeType.new("GWP")
  GYD = CurrencyCodeType.new("GYD")
  HKD = CurrencyCodeType.new("HKD")
  HNL = CurrencyCodeType.new("HNL")
  HRK = CurrencyCodeType.new("HRK")
  HTG = CurrencyCodeType.new("HTG")
  HUF = CurrencyCodeType.new("HUF")
  IDR = CurrencyCodeType.new("IDR")
  ILS = CurrencyCodeType.new("ILS")
  INR = CurrencyCodeType.new("INR")
  IQD = CurrencyCodeType.new("IQD")
  IRR = CurrencyCodeType.new("IRR")
  ISK = CurrencyCodeType.new("ISK")
  JMD = CurrencyCodeType.new("JMD")
  JOD = CurrencyCodeType.new("JOD")
  JPY = CurrencyCodeType.new("JPY")
  KES = CurrencyCodeType.new("KES")
  KGS = CurrencyCodeType.new("KGS")
  KHR = CurrencyCodeType.new("KHR")
  KMF = CurrencyCodeType.new("KMF")
  KPW = CurrencyCodeType.new("KPW")
  KRW = CurrencyCodeType.new("KRW")
  KWD = CurrencyCodeType.new("KWD")
  KYD = CurrencyCodeType.new("KYD")
  KZT = CurrencyCodeType.new("KZT")
  LAK = CurrencyCodeType.new("LAK")
  LBP = CurrencyCodeType.new("LBP")
  LKR = CurrencyCodeType.new("LKR")
  LRD = CurrencyCodeType.new("LRD")
  LSL = CurrencyCodeType.new("LSL")
  LTL = CurrencyCodeType.new("LTL")
  LVL = CurrencyCodeType.new("LVL")
  LYD = CurrencyCodeType.new("LYD")
  MAD = CurrencyCodeType.new("MAD")
  MDL = CurrencyCodeType.new("MDL")
  MGF = CurrencyCodeType.new("MGF")
  MKD = CurrencyCodeType.new("MKD")
  MMK = CurrencyCodeType.new("MMK")
  MNT = CurrencyCodeType.new("MNT")
  MOP = CurrencyCodeType.new("MOP")
  MRO = CurrencyCodeType.new("MRO")
  MTL = CurrencyCodeType.new("MTL")
  MUR = CurrencyCodeType.new("MUR")
  MVR = CurrencyCodeType.new("MVR")
  MWK = CurrencyCodeType.new("MWK")
  MXN = CurrencyCodeType.new("MXN")
  MXV = CurrencyCodeType.new("MXV")
  MYR = CurrencyCodeType.new("MYR")
  MZM = CurrencyCodeType.new("MZM")
  NAD = CurrencyCodeType.new("NAD")
  NGN = CurrencyCodeType.new("NGN")
  NIO = CurrencyCodeType.new("NIO")
  NOK = CurrencyCodeType.new("NOK")
  NPR = CurrencyCodeType.new("NPR")
  NZD = CurrencyCodeType.new("NZD")
  OMR = CurrencyCodeType.new("OMR")
  PAB = CurrencyCodeType.new("PAB")
  PEN = CurrencyCodeType.new("PEN")
  PGK = CurrencyCodeType.new("PGK")
  PHP = CurrencyCodeType.new("PHP")
  PKR = CurrencyCodeType.new("PKR")
  PLN = CurrencyCodeType.new("PLN")
  PYG = CurrencyCodeType.new("PYG")
  QAR = CurrencyCodeType.new("QAR")
  ROL = CurrencyCodeType.new("ROL")
  RUB = CurrencyCodeType.new("RUB")
  RUR = CurrencyCodeType.new("RUR")
  RWF = CurrencyCodeType.new("RWF")
  SAR = CurrencyCodeType.new("SAR")
  SBD = CurrencyCodeType.new("SBD")
  SCR = CurrencyCodeType.new("SCR")
  SDD = CurrencyCodeType.new("SDD")
  SEK = CurrencyCodeType.new("SEK")
  SGD = CurrencyCodeType.new("SGD")
  SHP = CurrencyCodeType.new("SHP")
  SIT = CurrencyCodeType.new("SIT")
  SKK = CurrencyCodeType.new("SKK")
  SLL = CurrencyCodeType.new("SLL")
  SOS = CurrencyCodeType.new("SOS")
  SRG = CurrencyCodeType.new("SRG")
  STD = CurrencyCodeType.new("STD")
  SVC = CurrencyCodeType.new("SVC")
  SYP = CurrencyCodeType.new("SYP")
  SZL = CurrencyCodeType.new("SZL")
  THB = CurrencyCodeType.new("THB")
  TJS = CurrencyCodeType.new("TJS")
  TMM = CurrencyCodeType.new("TMM")
  TND = CurrencyCodeType.new("TND")
  TOP = CurrencyCodeType.new("TOP")
  TPE = CurrencyCodeType.new("TPE")
  TRL = CurrencyCodeType.new("TRL")
  TTD = CurrencyCodeType.new("TTD")
  TWD = CurrencyCodeType.new("TWD")
  TZS = CurrencyCodeType.new("TZS")
  UAH = CurrencyCodeType.new("UAH")
  UGX = CurrencyCodeType.new("UGX")
  USD = CurrencyCodeType.new("USD")
  USN = CurrencyCodeType.new("USN")
  USS = CurrencyCodeType.new("USS")
  UYU = CurrencyCodeType.new("UYU")
  UZS = CurrencyCodeType.new("UZS")
  VEB = CurrencyCodeType.new("VEB")
  VND = CurrencyCodeType.new("VND")
  VUV = CurrencyCodeType.new("VUV")
  WST = CurrencyCodeType.new("WST")
  XAF = CurrencyCodeType.new("XAF")
  XCD = CurrencyCodeType.new("XCD")
  XOF = CurrencyCodeType.new("XOF")
  XPF = CurrencyCodeType.new("XPF")
  YER = CurrencyCodeType.new("YER")
  YUM = CurrencyCodeType.new("YUM")
  ZAR = CurrencyCodeType.new("ZAR")
  ZMK = CurrencyCodeType.new("ZMK")
  ZWD = CurrencyCodeType.new("ZWD")
end

# {urn:ebay:apis:eBLBaseComponents}DateSpecifierCodeType
class DateSpecifierCodeType < ::String
  @@schema_type = "DateSpecifierCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DateSpecifierCodeType.new("CustomCode")
  D = DateSpecifierCodeType.new("D")
  M = DateSpecifierCodeType.new("M")
  Y = DateSpecifierCodeType.new("Y")
end

# {urn:ebay:apis:eBLBaseComponents}DepositTypeCodeType
class DepositTypeCodeType < ::String
  @@schema_type = "DepositTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DepositTypeCodeType.new("CustomCode")
  FastDeposit = DepositTypeCodeType.new("FastDeposit")
  None = DepositTypeCodeType.new("None")
  OtherMethod = DepositTypeCodeType.new("OtherMethod")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionReviseModeCodeType
class DescriptionReviseModeCodeType < ::String
  @@schema_type = "DescriptionReviseModeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Append = DescriptionReviseModeCodeType.new("Append")
  CustomCode = DescriptionReviseModeCodeType.new("CustomCode")
  Prepend = DescriptionReviseModeCodeType.new("Prepend")
  Replace = DescriptionReviseModeCodeType.new("Replace")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateCodeType
class DescriptionTemplateCodeType < ::String
  @@schema_type = "DescriptionTemplateCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DescriptionTemplateCodeType.new("CustomCode")
  Layout = DescriptionTemplateCodeType.new("Layout")
  Theme = DescriptionTemplateCodeType.new("Theme")
end

# {urn:ebay:apis:eBLBaseComponents}DetailNameCodeType
class DetailNameCodeType < ::String
  @@schema_type = "DetailNameCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CountryDetails = DetailNameCodeType.new("CountryDetails")
  CurrencyDetails = DetailNameCodeType.new("CurrencyDetails")
  CustomCode = DetailNameCodeType.new("CustomCode")
  DispatchTimeMaxDetails = DetailNameCodeType.new("DispatchTimeMaxDetails")
  PaymentOptionDetails = DetailNameCodeType.new("PaymentOptionDetails")
  RegionDetails = DetailNameCodeType.new("RegionDetails")
  ShippingLocationDetails = DetailNameCodeType.new("ShippingLocationDetails")
  ShippingServiceDetails = DetailNameCodeType.new("ShippingServiceDetails")
  SiteDetails = DetailNameCodeType.new("SiteDetails")
  TaxJurisdiction = DetailNameCodeType.new("TaxJurisdiction")
  URLDetails = DetailNameCodeType.new("URLDetails")
end

# {urn:ebay:apis:eBLBaseComponents}DeviceTypeCodeType
class DeviceTypeCodeType < ::String
  @@schema_type = "DeviceTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DeviceTypeCodeType.new("CustomCode")
  Platform = DeviceTypeCodeType.new("Platform")
  SMS = DeviceTypeCodeType.new("SMS")
end

# {urn:ebay:apis:eBLBaseComponents}DigitalDeliveryEnabledCodeType
class DigitalDeliveryEnabledCodeType < ::String
  @@schema_type = "DigitalDeliveryEnabledCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DigitalDeliveryEnabledCodeType.new("CustomCode")
  Disabled = DigitalDeliveryEnabledCodeType.new("Disabled")
  Enabled = DigitalDeliveryEnabledCodeType.new("Enabled")
  Promoted = DigitalDeliveryEnabledCodeType.new("Promoted")
end

# {urn:ebay:apis:eBLBaseComponents}DigitalDeliveryMethodCodeType
class DigitalDeliveryMethodCodeType < ::String
  @@schema_type = "DigitalDeliveryMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AlternateDeliveryInstructions = DigitalDeliveryMethodCodeType.new("AlternateDeliveryInstructions")
  CustomCode = DigitalDeliveryMethodCodeType.new("CustomCode")
  DownloadURL = DigitalDeliveryMethodCodeType.new("DownloadURL")
  None = DigitalDeliveryMethodCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}DisplayPayNowButtonCodeType
class DisplayPayNowButtonCodeType < ::String
  @@schema_type = "DisplayPayNowButtonCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = DisplayPayNowButtonCodeType.new("CustomCode")
  ShowPayNowButtonForAllPaymentMethods = DisplayPayNowButtonCodeType.new("ShowPayNowButtonForAllPaymentMethods")
  ShowPayNowButtonForPayPalOnly = DisplayPayNowButtonCodeType.new("ShowPayNowButtonForPayPalOnly")
end

# {urn:ebay:apis:eBLBaseComponents}EBaySubscriptionTypeCodeType
class EBaySubscriptionTypeCodeType < ::String
  @@schema_type = "EBaySubscriptionTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = EBaySubscriptionTypeCodeType.new("CustomCode")
  EBayStoreAnchor = EBaySubscriptionTypeCodeType.new("EBayStoreAnchor")
  EBayStoreBasic = EBaySubscriptionTypeCodeType.new("EBayStoreBasic")
  EBayStoreFeatured = EBaySubscriptionTypeCodeType.new("EBayStoreFeatured")
  FileExchange = EBaySubscriptionTypeCodeType.new("FileExchange")
  LocalMarketPremium = EBaySubscriptionTypeCodeType.new("LocalMarketPremium")
  LocalMarketRegular = EBaySubscriptionTypeCodeType.new("LocalMarketRegular")
  LocalMarketSpecialty = EBaySubscriptionTypeCodeType.new("LocalMarketSpecialty")
  PictureManagerLevel1 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel1")
  PictureManagerLevel2 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel2")
  PictureManagerLevel3 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel3")
  PictureManagerLevel4 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel4")
  PictureManagerLevel5 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel5")
  PictureManagerLevel6 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel6")
  PictureManagerLevel7 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel7")
  SellerAssistant = EBaySubscriptionTypeCodeType.new("SellerAssistant")
  SellerAssistantPro = EBaySubscriptionTypeCodeType.new("SellerAssistantPro")
  SellerReportsBasic = EBaySubscriptionTypeCodeType.new("SellerReportsBasic")
  SellerReportsPlus = EBaySubscriptionTypeCodeType.new("SellerReportsPlus")
  SellingManager = EBaySubscriptionTypeCodeType.new("SellingManager")
  SellingManagerPro = EBaySubscriptionTypeCodeType.new("SellingManagerPro")
end

# {urn:ebay:apis:eBLBaseComponents}EnableCodeType
class EnableCodeType < ::String
  @@schema_type = "EnableCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = EnableCodeType.new("CustomCode")
  Disable = EnableCodeType.new("Disable")
  Enable = EnableCodeType.new("Enable")
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionLogoTypeCodeType
class EndOfAuctionLogoTypeCodeType < ::String
  @@schema_type = "EndOfAuctionLogoTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = EndOfAuctionLogoTypeCodeType.new("CustomCode")
  Customized = EndOfAuctionLogoTypeCodeType.new("Customized")
  None = EndOfAuctionLogoTypeCodeType.new("None")
  Store = EndOfAuctionLogoTypeCodeType.new("Store")
  WinningBidderNotice = EndOfAuctionLogoTypeCodeType.new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}EndReasonCodeType
class EndReasonCodeType < ::String
  @@schema_type = "EndReasonCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = EndReasonCodeType.new("CustomCode")
  Incorrect = EndReasonCodeType.new("Incorrect")
  LostOrBroken = EndReasonCodeType.new("LostOrBroken")
  NotAvailable = EndReasonCodeType.new("NotAvailable")
  OtherListingError = EndReasonCodeType.new("OtherListingError")
  SellToHighBidder = EndReasonCodeType.new("SellToHighBidder")
end

# {urn:ebay:apis:eBLBaseComponents}EscrowCodeType
class EscrowCodeType < ::String
  @@schema_type = "EscrowCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ByBuyer = EscrowCodeType.new("ByBuyer")
  BySeller = EscrowCodeType.new("BySeller")
  CustomCode = EscrowCodeType.new("CustomCode")
  None = EscrowCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressDetailLevelCodeType
class ExpressDetailLevelCodeType < ::String
  @@schema_type = "ExpressDetailLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Coarse = ExpressDetailLevelCodeType.new("Coarse")
  CustomCode = ExpressDetailLevelCodeType.new("CustomCode")
  Fine = ExpressDetailLevelCodeType.new("Fine")
  None = ExpressDetailLevelCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramSortCodeType
class ExpressHistogramSortCodeType < ::String
  @@schema_type = "ExpressHistogramSortCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Alphabetical = ExpressHistogramSortCodeType.new("Alphabetical")
  CustomCode = ExpressHistogramSortCodeType.new("CustomCode")
  ItemCount = ExpressHistogramSortCodeType.new("ItemCount")
  ProductCount = ExpressHistogramSortCodeType.new("ProductCount")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressItemSortCodeType
class ExpressItemSortCodeType < ::String
  @@schema_type = "ExpressItemSortCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ExpressItemSortCodeType.new("CustomCode")
  HighestTotalCost = ExpressItemSortCodeType.new("HighestTotalCost")
  LowestTotalCost = ExpressItemSortCodeType.new("LowestTotalCost")
  Relevance = ExpressItemSortCodeType.new("Relevance")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressProductSortCodeType
class ExpressProductSortCodeType < ::String
  @@schema_type = "ExpressProductSortCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ExpressProductSortCodeType.new("CustomCode")
  HighestPrice = ExpressProductSortCodeType.new("HighestPrice")
  LowestPrice = ExpressProductSortCodeType.new("LowestPrice")
  SalesRank = ExpressProductSortCodeType.new("SalesRank")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressSellingPreferenceCodeType
class ExpressSellingPreferenceCodeType < ::String
  @@schema_type = "ExpressSellingPreferenceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  All = ExpressSellingPreferenceCodeType.new("All")
  CustomCode = ExpressSellingPreferenceCodeType.new("CustomCode")
  ExpressOnly = ExpressSellingPreferenceCodeType.new("ExpressOnly")
  OptOut = ExpressSellingPreferenceCodeType.new("OptOut")
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductCodeType
class ExternalProductCodeType < ::String
  @@schema_type = "ExternalProductCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ExternalProductCodeType.new("CustomCode")
  EAN = ExternalProductCodeType.new("EAN")
  ISBN = ExternalProductCodeType.new("ISBN")
  Keywords = ExternalProductCodeType.new("Keywords")
  ProductID = ExternalProductCodeType.new("ProductID")
  UPC = ExternalProductCodeType.new("UPC")
end

# {urn:ebay:apis:eBLBaseComponents}FeatureIDCodeType
class FeatureIDCodeType < ::String
  @@schema_type = "FeatureIDCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AdFormatEnabled = FeatureIDCodeType.new("AdFormatEnabled")
  BasicUpgradePack = FeatureIDCodeType.new("BasicUpgradePack")
  BestOfferAutoDeclineEnabled = FeatureIDCodeType.new("BestOfferAutoDeclineEnabled")
  BestOfferCounterEnabled = FeatureIDCodeType.new("BestOfferCounterEnabled")
  BestOfferEnabled = FeatureIDCodeType.new("BestOfferEnabled")
  CustomCode = FeatureIDCodeType.new("CustomCode")
  DigitalDeliveryEnabled = FeatureIDCodeType.new("DigitalDeliveryEnabled")
  DutchBINEnabled = FeatureIDCodeType.new("DutchBINEnabled")
  ExpressConditionRequired = FeatureIDCodeType.new("ExpressConditionRequired")
  ExpressEnabled = FeatureIDCodeType.new("ExpressEnabled")
  ExpressPicturesRequired = FeatureIDCodeType.new("ExpressPicturesRequired")
  HomePageFeaturedEnabled = FeatureIDCodeType.new("HomePageFeaturedEnabled")
  ListingDurations = FeatureIDCodeType.new("ListingDurations")
  LocalListingDistances = FeatureIDCodeType.new("LocalListingDistances")
  LocalMarketNonSubscription = FeatureIDCodeType.new("LocalMarketNonSubscription")
  LocalMarketPremiumSubscription = FeatureIDCodeType.new("LocalMarketPremiumSubscription")
  LocalMarketRegularSubscription = FeatureIDCodeType.new("LocalMarketRegularSubscription")
  LocalMarketSpecialitySubscription = FeatureIDCodeType.new("LocalMarketSpecialitySubscription")
  MinimumReservePrice = FeatureIDCodeType.new("MinimumReservePrice")
  ProPack = FeatureIDCodeType.new("ProPack")
  ProPackPlus = FeatureIDCodeType.new("ProPackPlus")
  SellerContactDetailsEnabled = FeatureIDCodeType.new("SellerContactDetailsEnabled")
  ShippingTermsRequired = FeatureIDCodeType.new("ShippingTermsRequired")
  SkypeMeNonTransactionalEnabled = FeatureIDCodeType.new("SkypeMeNonTransactionalEnabled")
  SkypeMeTransactionalEnabled = FeatureIDCodeType.new("SkypeMeTransactionalEnabled")
  StoreInventoryEnabled = FeatureIDCodeType.new("StoreInventoryEnabled")
  TransactionConfirmationRequestEnabled = FeatureIDCodeType.new("TransactionConfirmationRequestEnabled")
  UserConsentRequired = FeatureIDCodeType.new("UserConsentRequired")
  ValuePack = FeatureIDCodeType.new("ValuePack")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingStarCodeType
class FeedbackRatingStarCodeType < ::String
  @@schema_type = "FeedbackRatingStarCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Blue = FeedbackRatingStarCodeType.new("Blue")
  CustomCode = FeedbackRatingStarCodeType.new("CustomCode")
  Green = FeedbackRatingStarCodeType.new("Green")
  None = FeedbackRatingStarCodeType.new("None")
  Purple = FeedbackRatingStarCodeType.new("Purple")
  PurpleShooting = FeedbackRatingStarCodeType.new("PurpleShooting")
  Red = FeedbackRatingStarCodeType.new("Red")
  RedShooting = FeedbackRatingStarCodeType.new("RedShooting")
  Turquoise = FeedbackRatingStarCodeType.new("Turquoise")
  TurquoiseShooting = FeedbackRatingStarCodeType.new("TurquoiseShooting")
  Yellow = FeedbackRatingStarCodeType.new("Yellow")
  YellowShooting = FeedbackRatingStarCodeType.new("YellowShooting")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackResponseCodeType
class FeedbackResponseCodeType < ::String
  @@schema_type = "FeedbackResponseCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  FollowUp = FeedbackResponseCodeType.new("FollowUp")
  Reply = FeedbackResponseCodeType.new("Reply")
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCodeType
class FlatRateInsuranceRangeCodeType < ::String
  @@schema_type = "FlatRateInsuranceRangeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = FlatRateInsuranceRangeCodeType.new("CustomCode")
  FlatRateInsuranceRange1 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange1")
  FlatRateInsuranceRange2 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange2")
  FlatRateInsuranceRange3 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange3")
  FlatRateInsuranceRange4 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange4")
  FlatRateInsuranceRange5 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange5")
  FlatRateInsuranceRange6 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange6")
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingRateOptionCodeType
class FlatShippingRateOptionCodeType < ::String
  @@schema_type = "FlatShippingRateOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ChargeAmountForEachAdditionalItem = FlatShippingRateOptionCodeType.new("ChargeAmountForEachAdditionalItem")
  CustomCode = FlatShippingRateOptionCodeType.new("CustomCode")
  DeductAmountFromEachAdditionalItem = FlatShippingRateOptionCodeType.new("DeductAmountFromEachAdditionalItem")
  ShipAdditionalItemsFree = FlatShippingRateOptionCodeType.new("ShipAdditionalItemsFree")
end

# {urn:ebay:apis:eBLBaseComponents}GallerySortFilterCodeType
class GallerySortFilterCodeType < ::String
  @@schema_type = "GallerySortFilterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = GallerySortFilterCodeType.new("CustomCode")
  ShowAnyItems = GallerySortFilterCodeType.new("ShowAnyItems")
  ShowItemsWithGalleryImagesFirst = GallerySortFilterCodeType.new("ShowItemsWithGalleryImagesFirst")
  ShowOnlyItemsWithGalleryImages = GallerySortFilterCodeType.new("ShowOnlyItemsWithGalleryImages")
end

# {urn:ebay:apis:eBLBaseComponents}GalleryTypeCodeType
class GalleryTypeCodeType < ::String
  @@schema_type = "GalleryTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = GalleryTypeCodeType.new("CustomCode")
  Featured = GalleryTypeCodeType.new("Featured")
  Gallery = GalleryTypeCodeType.new("Gallery")
  None = GalleryTypeCodeType.new("None")
  Plus = GalleryTypeCodeType.new("Plus")
end

# {urn:ebay:apis:eBLBaseComponents}GeneralPaymentMethodCodeType
class GeneralPaymentMethodCodeType < ::String
  @@schema_type = "GeneralPaymentMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ACH = GeneralPaymentMethodCodeType.new("ACH")
  Creditcard = GeneralPaymentMethodCodeType.new("Creditcard")
  CustomCode = GeneralPaymentMethodCodeType.new("CustomCode")
  Echeck = GeneralPaymentMethodCodeType.new("Echeck")
  Other = GeneralPaymentMethodCodeType.new("Other")
  PayPalBalance = GeneralPaymentMethodCodeType.new("PayPalBalance")
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersModeCodeType
class GetAllBiddersModeCodeType < ::String
  @@schema_type = "GetAllBiddersModeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = GetAllBiddersModeCodeType.new("CustomCode")
  EndedListing = GetAllBiddersModeCodeType.new("EndedListing")
  SecondChanceEligibleEndedListing = GetAllBiddersModeCodeType.new("SecondChanceEligibleEndedListing")
  ViewAll = GetAllBiddersModeCodeType.new("ViewAll")
end

# {urn:ebay:apis:eBLBaseComponents}GiftServicesCodeType
class GiftServicesCodeType < ::String
  @@schema_type = "GiftServicesCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = GiftServicesCodeType.new("CustomCode")
  GiftExpressShipping = GiftServicesCodeType.new("GiftExpressShipping")
  GiftShipToRecipient = GiftServicesCodeType.new("GiftShipToRecipient")
  GiftWrap = GiftServicesCodeType.new("GiftWrap")
end

# {urn:ebay:apis:eBLBaseComponents}GranularityLevelCodeType
class GranularityLevelCodeType < ::String
  @@schema_type = "GranularityLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Coarse = GranularityLevelCodeType.new("Coarse")
  Fine = GranularityLevelCodeType.new("Fine")
  Medium = GranularityLevelCodeType.new("Medium")
end

# {urn:ebay:apis:eBLBaseComponents}HitCounterCodeType
class HitCounterCodeType < ::String
  @@schema_type = "HitCounterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BasicStyle = HitCounterCodeType.new("BasicStyle")
  CustomCode = HitCounterCodeType.new("CustomCode")
  GreenLED = HitCounterCodeType.new("GreenLED")
  Hidden = HitCounterCodeType.new("Hidden")
  HiddenStyle = HitCounterCodeType.new("HiddenStyle")
  HonestyStyle = HitCounterCodeType.new("HonestyStyle")
  NoHitCounter = HitCounterCodeType.new("NoHitCounter")
  RetroStyle = HitCounterCodeType.new("RetroStyle")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceOptionCodeType
class InsuranceOptionCodeType < ::String
  @@schema_type = "InsuranceOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = InsuranceOptionCodeType.new("CustomCode")
  IncludedInShippingHandling = InsuranceOptionCodeType.new("IncludedInShippingHandling")
  NotOffered = InsuranceOptionCodeType.new("NotOffered")
  NotOfferedOnSite = InsuranceOptionCodeType.new("NotOfferedOnSite")
  Optional = InsuranceOptionCodeType.new("Optional")
  Required = InsuranceOptionCodeType.new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceSelectedCodeType
class InsuranceSelectedCodeType < ::String
  @@schema_type = "InsuranceSelectedCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = InsuranceSelectedCodeType.new("CustomCode")
  IncludedInShippingHandling = InsuranceSelectedCodeType.new("IncludedInShippingHandling")
  NotOffered = InsuranceSelectedCodeType.new("NotOffered")
  OfferedNotSelected = InsuranceSelectedCodeType.new("OfferedNotSelected")
  OfferedSelected = InsuranceSelectedCodeType.new("OfferedSelected")
  Required = InsuranceSelectedCodeType.new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}ItemFormatSortFilterCodeType
class ItemFormatSortFilterCodeType < ::String
  @@schema_type = "ItemFormatSortFilterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ItemFormatSortFilterCodeType.new("CustomCode")
  ShowAnyItems = ItemFormatSortFilterCodeType.new("ShowAnyItems")
  ShowItemsWithBINFirst = ItemFormatSortFilterCodeType.new("ShowItemsWithBINFirst")
  ShowOnlyItemsWithBIN = ItemFormatSortFilterCodeType.new("ShowOnlyItemsWithBIN")
  ShowOnlyStoreItems = ItemFormatSortFilterCodeType.new("ShowOnlyStoreItems")
end

# {urn:ebay:apis:eBLBaseComponents}ItemLocationCodeType
class ItemLocationCodeType < ::String
  @@schema_type = "ItemLocationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ItemLocationCodeType.new("CustomCode")
  ItemAvailableIn = ItemLocationCodeType.new("ItemAvailableIn")
  ItemLocatedIn = ItemLocationCodeType.new("ItemLocatedIn")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortFilterCodeType
class ItemSortFilterCodeType < ::String
  @@schema_type = "ItemSortFilterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ItemSortFilterCodeType.new("CustomCode")
  EndingLast = ItemSortFilterCodeType.new("EndingLast")
  EndingSoonest = ItemSortFilterCodeType.new("EndingSoonest")
  HighestPrice = ItemSortFilterCodeType.new("HighestPrice")
  LowestPrice = ItemSortFilterCodeType.new("LowestPrice")
  NewlyListed = ItemSortFilterCodeType.new("NewlyListed")
  RandomlySelected = ItemSortFilterCodeType.new("RandomlySelected")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortTypeCodeType
class ItemSortTypeCodeType < ::String
  @@schema_type = "ItemSortTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BestOffer = ItemSortTypeCodeType.new("BestOffer")
  BestOfferCount = ItemSortTypeCodeType.new("BestOfferCount")
  BestOfferCountDescending = ItemSortTypeCodeType.new("BestOfferCountDescending")
  BestOfferDescending = ItemSortTypeCodeType.new("BestOfferDescending")
  BidCount = ItemSortTypeCodeType.new("BidCount")
  BidCountDescending = ItemSortTypeCodeType.new("BidCountDescending")
  BidderCount = ItemSortTypeCodeType.new("BidderCount")
  BidderCountDescending = ItemSortTypeCodeType.new("BidderCountDescending")
  BuyerEmail = ItemSortTypeCodeType.new("BuyerEmail")
  BuyerEmailDescending = ItemSortTypeCodeType.new("BuyerEmailDescending")
  BuyerPostalCode = ItemSortTypeCodeType.new("BuyerPostalCode")
  BuyerPostalCodeDescending = ItemSortTypeCodeType.new("BuyerPostalCodeDescending")
  BuyerUserID = ItemSortTypeCodeType.new("BuyerUserID")
  BuyerUserIDDescending = ItemSortTypeCodeType.new("BuyerUserIDDescending")
  CurrentPrice = ItemSortTypeCodeType.new("CurrentPrice")
  CurrentPriceDescending = ItemSortTypeCodeType.new("CurrentPriceDescending")
  CustomCode = ItemSortTypeCodeType.new("CustomCode")
  EndTime = ItemSortTypeCodeType.new("EndTime")
  EndTimeDescending = ItemSortTypeCodeType.new("EndTimeDescending")
  FeedbackLeft = ItemSortTypeCodeType.new("FeedbackLeft")
  FeedbackLeftDescending = ItemSortTypeCodeType.new("FeedbackLeftDescending")
  FeedbackReceived = ItemSortTypeCodeType.new("FeedbackReceived")
  FeedbackReceivedDescending = ItemSortTypeCodeType.new("FeedbackReceivedDescending")
  HighBidderUserID = ItemSortTypeCodeType.new("HighBidderUserID")
  HighBidderUserIDDescending = ItemSortTypeCodeType.new("HighBidderUserIDDescending")
  ItemID = ItemSortTypeCodeType.new("ItemID")
  ItemIDDescending = ItemSortTypeCodeType.new("ItemIDDescending")
  ListingDuration = ItemSortTypeCodeType.new("ListingDuration")
  ListingDurationDescending = ItemSortTypeCodeType.new("ListingDurationDescending")
  ListingType = ItemSortTypeCodeType.new("ListingType")
  ListingTypeDescending = ItemSortTypeCodeType.new("ListingTypeDescending")
  MaxBid = ItemSortTypeCodeType.new("MaxBid")
  MaxBidDescending = ItemSortTypeCodeType.new("MaxBidDescending")
  Price = ItemSortTypeCodeType.new("Price")
  PriceDescending = ItemSortTypeCodeType.new("PriceDescending")
  Quantity = ItemSortTypeCodeType.new("Quantity")
  QuantityAvailable = ItemSortTypeCodeType.new("QuantityAvailable")
  QuantityAvailableDescending = ItemSortTypeCodeType.new("QuantityAvailableDescending")
  QuantityDescending = ItemSortTypeCodeType.new("QuantityDescending")
  QuantityPurchased = ItemSortTypeCodeType.new("QuantityPurchased")
  QuantityPurchasedDescending = ItemSortTypeCodeType.new("QuantityPurchasedDescending")
  QuantitySold = ItemSortTypeCodeType.new("QuantitySold")
  QuantitySoldDescending = ItemSortTypeCodeType.new("QuantitySoldDescending")
  QuestionCount = ItemSortTypeCodeType.new("QuestionCount")
  QuestionCountDescending = ItemSortTypeCodeType.new("QuestionCountDescending")
  ReservePrice = ItemSortTypeCodeType.new("ReservePrice")
  ReservePriceDescending = ItemSortTypeCodeType.new("ReservePriceDescending")
  SellerEmail = ItemSortTypeCodeType.new("SellerEmail")
  SellerEmailDescending = ItemSortTypeCodeType.new("SellerEmailDescending")
  SellerUserID = ItemSortTypeCodeType.new("SellerUserID")
  SellerUserIDDescending = ItemSortTypeCodeType.new("SellerUserIDDescending")
  ShippingServiceCost = ItemSortTypeCodeType.new("ShippingServiceCost")
  ShippingServiceCostDescending = ItemSortTypeCodeType.new("ShippingServiceCostDescending")
  SoldPlatform = ItemSortTypeCodeType.new("SoldPlatform")
  SoldPlatformDescending = ItemSortTypeCodeType.new("SoldPlatformDescending")
  StartPrice = ItemSortTypeCodeType.new("StartPrice")
  StartPriceDescending = ItemSortTypeCodeType.new("StartPriceDescending")
  StartTime = ItemSortTypeCodeType.new("StartTime")
  StartTimeDescending = ItemSortTypeCodeType.new("StartTimeDescending")
  TimeLeft = ItemSortTypeCodeType.new("TimeLeft")
  TimeLeftDescending = ItemSortTypeCodeType.new("TimeLeftDescending")
  Title = ItemSortTypeCodeType.new("Title")
  TitleDescending = ItemSortTypeCodeType.new("TitleDescending")
  TotalPrice = ItemSortTypeCodeType.new("TotalPrice")
  TotalPriceDescending = ItemSortTypeCodeType.new("TotalPriceDescending")
  UserID = ItemSortTypeCodeType.new("UserID")
  UserIDDescending = ItemSortTypeCodeType.new("UserIDDescending")
  WatchCount = ItemSortTypeCodeType.new("WatchCount")
  WatchCountDescending = ItemSortTypeCodeType.new("WatchCountDescending")
  WonPlatform = ItemSortTypeCodeType.new("WonPlatform")
  WonPlatformDescending = ItemSortTypeCodeType.new("WonPlatformDescending")
end

# {urn:ebay:apis:eBLBaseComponents}ItemTypeFilterCodeType
class ItemTypeFilterCodeType < ::String
  @@schema_type = "ItemTypeFilterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AllFixedPriceItemTypes = ItemTypeFilterCodeType.new("AllFixedPriceItemTypes")
  AllItemTypes = ItemTypeFilterCodeType.new("AllItemTypes")
  AllItems = ItemTypeFilterCodeType.new("AllItems")
  AuctionItemsOnly = ItemTypeFilterCodeType.new("AuctionItemsOnly")
  ClassifiedItemsOnly = ItemTypeFilterCodeType.new("ClassifiedItemsOnly")
  CustomCode = ItemTypeFilterCodeType.new("CustomCode")
  ExcludeStoreInventory = ItemTypeFilterCodeType.new("ExcludeStoreInventory")
  FixedPriceExcludeStoreInventory = ItemTypeFilterCodeType.new("FixedPriceExcludeStoreInventory")
  FixedPricedItem = ItemTypeFilterCodeType.new("FixedPricedItem")
  StoreInventoryOnly = ItemTypeFilterCodeType.new("StoreInventoryOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationCodeType
class ListingDurationCodeType < ::String
  @@schema_type = "ListingDurationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ListingDurationCodeType.new("CustomCode")
  Days_1 = ListingDurationCodeType.new("Days_1")
  Days_10 = ListingDurationCodeType.new("Days_10")
  Days_120 = ListingDurationCodeType.new("Days_120")
  Days_14 = ListingDurationCodeType.new("Days_14")
  Days_21 = ListingDurationCodeType.new("Days_21")
  Days_3 = ListingDurationCodeType.new("Days_3")
  Days_30 = ListingDurationCodeType.new("Days_30")
  Days_5 = ListingDurationCodeType.new("Days_5")
  Days_60 = ListingDurationCodeType.new("Days_60")
  Days_7 = ListingDurationCodeType.new("Days_7")
  Days_90 = ListingDurationCodeType.new("Days_90")
  GTC = ListingDurationCodeType.new("GTC")
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementsCodeType
class ListingEnhancementsCodeType < ::String
  @@schema_type = "ListingEnhancementsCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BasicUpgradePackBundle = ListingEnhancementsCodeType.new("BasicUpgradePackBundle")
  BoldTitle = ListingEnhancementsCodeType.new("BoldTitle")
  Border = ListingEnhancementsCodeType.new("Border")
  CustomCode = ListingEnhancementsCodeType.new("CustomCode")
  Featured = ListingEnhancementsCodeType.new("Featured")
  Highlight = ListingEnhancementsCodeType.new("Highlight")
  HomePageFeatured = ListingEnhancementsCodeType.new("HomePageFeatured")
  ProPackBundle = ListingEnhancementsCodeType.new("ProPackBundle")
  ProPackPlusBundle = ListingEnhancementsCodeType.new("ProPackPlusBundle")
  ValuePackBundle = ListingEnhancementsCodeType.new("ValuePackBundle")
end

# {urn:ebay:apis:eBLBaseComponents}ListingFlowCodeType
class ListingFlowCodeType < ::String
  @@schema_type = "ListingFlowCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AddItem = ListingFlowCodeType.new("AddItem")
  CustomCode = ListingFlowCodeType.new("CustomCode")
  RelistItem = ListingFlowCodeType.new("RelistItem")
  ReviseItem = ListingFlowCodeType.new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}ListingStatusCodeType
class ListingStatusCodeType < ::String
  @@schema_type = "ListingStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = ListingStatusCodeType.new("Active")
  Completed = ListingStatusCodeType.new("Completed")
  Custom = ListingStatusCodeType.new("Custom")
  CustomCode = ListingStatusCodeType.new("CustomCode")
  Ended = ListingStatusCodeType.new("Ended")
end

# {urn:ebay:apis:eBLBaseComponents}ListingSubtypeEnum
class ListingSubtypeEnum < ::String
  @@schema_type = "ListingSubtypeEnum"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ClassifiedAd = ListingSubtypeEnum.new("ClassifiedAd")
end

# {urn:ebay:apis:eBLBaseComponents}ListingTypeCodeType
class ListingTypeCodeType < ::String
  @@schema_type = "ListingTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AdType = ListingTypeCodeType.new("AdType")
  Auction = ListingTypeCodeType.new("Auction")
  Chinese = ListingTypeCodeType.new("Chinese")
  CustomCode = ListingTypeCodeType.new("CustomCode")
  Dutch = ListingTypeCodeType.new("Dutch")
  Express = ListingTypeCodeType.new("Express")
  FixedPriceItem = ListingTypeCodeType.new("FixedPriceItem")
  Half = ListingTypeCodeType.new("Half")
  LeadGeneration = ListingTypeCodeType.new("LeadGeneration")
  Live = ListingTypeCodeType.new("Live")
  PersonalOffer = ListingTypeCodeType.new("PersonalOffer")
  StoresFixedPrice = ListingTypeCodeType.new("StoresFixedPrice")
  Unknown = ListingTypeCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}LogoTypeCodeType
class LogoTypeCodeType < ::String
  @@schema_type = "LogoTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Custom = LogoTypeCodeType.new("Custom")
  CustomCode = LogoTypeCodeType.new("CustomCode")
  Store = LogoTypeCodeType.new("Store")
  WinningBidderNotice = LogoTypeCodeType.new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}MailOptionsTypeCodeType
class MailOptionsTypeCodeType < ::String
  @@schema_type = "MailOptionsTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = MailOptionsTypeCodeType.new("CustomCode")
  DoNotSendEmail = MailOptionsTypeCodeType.new("DoNotSendEmail")
  EmailCopyToSender = MailOptionsTypeCodeType.new("EmailCopyToSender")
  HideSenderEmailAddress = MailOptionsTypeCodeType.new("HideSenderEmailAddress")
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventTypeCodeType
class MarkUpMarkDownEventTypeCodeType < ::String
  @@schema_type = "MarkUpMarkDownEventTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = MarkUpMarkDownEventTypeCodeType.new("CustomCode")
  MarkDown = MarkUpMarkDownEventTypeCodeType.new("MarkDown")
  MarkUp = MarkUpMarkDownEventTypeCodeType.new("MarkUp")
end

# {urn:ebay:apis:eBLBaseComponents}MerchDisplayCodeType
class MerchDisplayCodeType < ::String
  @@schema_type = "MerchDisplayCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = MerchDisplayCodeType.new("CustomCode")
  DefaultTheme = MerchDisplayCodeType.new("DefaultTheme")
  StoreTheme = MerchDisplayCodeType.new("StoreTheme")
end

# {urn:ebay:apis:eBLBaseComponents}MerchandizingPrefCodeType
class MerchandizingPrefCodeType < ::String
  @@schema_type = "MerchandizingPrefCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = MerchandizingPrefCodeType.new("CustomCode")
  OptIn = MerchandizingPrefCodeType.new("OptIn")
  OptOut = MerchandizingPrefCodeType.new("OptOut")
end

# {urn:ebay:apis:eBLBaseComponents}MessageStatusTypeCodeType
class MessageStatusTypeCodeType < ::String
  @@schema_type = "MessageStatusTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Answered = MessageStatusTypeCodeType.new("Answered")
  CustomCode = MessageStatusTypeCodeType.new("CustomCode")
  Unanswered = MessageStatusTypeCodeType.new("Unanswered")
end

# {urn:ebay:apis:eBLBaseComponents}MessageTypeCodeType
class MessageTypeCodeType < ::String
  @@schema_type = "MessageTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AskSellerQuestion = MessageTypeCodeType.new("AskSellerQuestion")
  ContactEbayMember = MessageTypeCodeType.new("ContactEbayMember")
  ContactTransactionPartner = MessageTypeCodeType.new("ContactTransactionPartner")
  CustomCode = MessageTypeCodeType.new("CustomCode")
  ResponseToASQQuestion = MessageTypeCodeType.new("ResponseToASQQuestion")
end

# {urn:ebay:apis:eBLBaseComponents}ModifyActionCodeType
class ModifyActionCodeType < ::String
  @@schema_type = "ModifyActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Add = ModifyActionCodeType.new("Add")
  CustomCode = ModifyActionCodeType.new("CustomCode")
  Delete = ModifyActionCodeType.new("Delete")
  Update = ModifyActionCodeType.new("Update")
end

# {urn:ebay:apis:eBLBaseComponents}ModifyCodeType
class ModifyCodeType < ::String
  @@schema_type = "ModifyCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ModifyCodeType.new("CustomCode")
  Dropped = ModifyCodeType.new("Dropped")
  Modify = ModifyCodeType.new("Modify")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertResolutionStatusCode
class MyMessagesAlertResolutionStatusCode < ::String
  @@schema_type = "MyMessagesAlertResolutionStatusCode"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ResolvedByAutoResolution = MyMessagesAlertResolutionStatusCode.new("ResolvedByAutoResolution")
  ResolvedByUser = MyMessagesAlertResolutionStatusCode.new("ResolvedByUser")
  Unresolved = MyMessagesAlertResolutionStatusCode.new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderOperationCodeType
class MyMessagesFolderOperationCodeType < ::String
  @@schema_type = "MyMessagesFolderOperationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = MyMessagesFolderOperationCodeType.new("CustomCode")
  Display = MyMessagesFolderOperationCodeType.new("Display")
  Remove = MyMessagesFolderOperationCodeType.new("Remove")
  Rename = MyMessagesFolderOperationCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDeliveryStatusCodeType
class NotificationDeliveryStatusCodeType < ::String
  @@schema_type = "NotificationDeliveryStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = NotificationDeliveryStatusCodeType.new("CustomCode")
  Delivered = NotificationDeliveryStatusCodeType.new("Delivered")
  Failed = NotificationDeliveryStatusCodeType.new("Failed")
  MarkedDown = NotificationDeliveryStatusCodeType.new("MarkedDown")
  Rejected = NotificationDeliveryStatusCodeType.new("Rejected")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyNameCodeType
class NotificationEventPropertyNameCodeType < ::String
  @@schema_type = "NotificationEventPropertyNameCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = NotificationEventPropertyNameCodeType.new("CustomCode")
  TimeLeft = NotificationEventPropertyNameCodeType.new("TimeLeft")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventStateCodeType
class NotificationEventStateCodeType < ::String
  @@schema_type = "NotificationEventStateCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Canceled = NotificationEventStateCodeType.new("Canceled")
  CustomCode = NotificationEventStateCodeType.new("CustomCode")
  Delivered = NotificationEventStateCodeType.new("Delivered")
  Failed = NotificationEventStateCodeType.new("Failed")
  FailedPending = NotificationEventStateCodeType.new("FailedPending")
  MarkedDown = NotificationEventStateCodeType.new("MarkedDown")
  MarkedDownPending = NotificationEventStateCodeType.new("MarkedDownPending")
  New = NotificationEventStateCodeType.new("New")
  Pending = NotificationEventStateCodeType.new("Pending")
  Rejected = NotificationEventStateCodeType.new("Rejected")
  Undeliverable = NotificationEventStateCodeType.new("Undeliverable")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventTypeCodeType
class NotificationEventTypeCodeType < ::String
  @@schema_type = "NotificationEventTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AccountSummary = NotificationEventTypeCodeType.new("AccountSummary")
  AccountSuspended = NotificationEventTypeCodeType.new("AccountSuspended")
  AskSellerQuestion = NotificationEventTypeCodeType.new("AskSellerQuestion")
  AuctionCheckoutComplete = NotificationEventTypeCodeType.new("AuctionCheckoutComplete")
  BestOffer = NotificationEventTypeCodeType.new("BestOffer")
  BuyerResponseDispute = NotificationEventTypeCodeType.new("BuyerResponseDispute")
  Checkout = NotificationEventTypeCodeType.new("Checkout")
  CheckoutBuyerRequestsTotal = NotificationEventTypeCodeType.new("CheckoutBuyerRequestsTotal")
  CustomCode = NotificationEventTypeCodeType.new("CustomCode")
  EmailAddressChanged = NotificationEventTypeCodeType.new("EmailAddressChanged")
  EndOfAuction = NotificationEventTypeCodeType.new("EndOfAuction")
  Feedback = NotificationEventTypeCodeType.new("Feedback")
  FeedbackForSeller = NotificationEventTypeCodeType.new("FeedbackForSeller")
  FixedPriceEndOfTransaction = NotificationEventTypeCodeType.new("FixedPriceEndOfTransaction")
  FixedPriceTransaction = NotificationEventTypeCodeType.new("FixedPriceTransaction")
  INRBuyerClosedDispute = NotificationEventTypeCodeType.new("INRBuyerClosedDispute")
  INRBuyerOpenedDispute = NotificationEventTypeCodeType.new("INRBuyerOpenedDispute")
  INRBuyerRespondedToDispute = NotificationEventTypeCodeType.new("INRBuyerRespondedToDispute")
  INRSellerRespondedToDispute = NotificationEventTypeCodeType.new("INRSellerRespondedToDispute")
  ItemClosed = NotificationEventTypeCodeType.new("ItemClosed")
  ItemExtended = NotificationEventTypeCodeType.new("ItemExtended")
  ItemListed = NotificationEventTypeCodeType.new("ItemListed")
  ItemRevised = NotificationEventTypeCodeType.new("ItemRevised")
  ItemSold = NotificationEventTypeCodeType.new("ItemSold")
  ItemSuspended = NotificationEventTypeCodeType.new("ItemSuspended")
  MyMessagesAlert = NotificationEventTypeCodeType.new("MyMessagesAlert")
  MyMessagesAlertHeader = NotificationEventTypeCodeType.new("MyMessagesAlertHeader")
  MyMessagesM2MMessage = NotificationEventTypeCodeType.new("MyMessagesM2MMessage")
  MyMessagesM2MMessageHeader = NotificationEventTypeCodeType.new("MyMessagesM2MMessageHeader")
  MyMessageseBayMessage = NotificationEventTypeCodeType.new("MyMessageseBayMessage")
  MyMessageseBayMessageHeader = NotificationEventTypeCodeType.new("MyMessageseBayMessageHeader")
  None = NotificationEventTypeCodeType.new("None")
  OutBid = NotificationEventTypeCodeType.new("OutBid")
  PasswordChanged = NotificationEventTypeCodeType.new("PasswordChanged")
  PasswordHintChanged = NotificationEventTypeCodeType.new("PasswordHintChanged")
  PaymentDetailChanged = NotificationEventTypeCodeType.new("PaymentDetailChanged")
  SecondChanceOffer = NotificationEventTypeCodeType.new("SecondChanceOffer")
  SellerClosedDispute = NotificationEventTypeCodeType.new("SellerClosedDispute")
  SellerOpenedDispute = NotificationEventTypeCodeType.new("SellerOpenedDispute")
  SellerRespondedToDispute = NotificationEventTypeCodeType.new("SellerRespondedToDispute")
  UserIDChanged = NotificationEventTypeCodeType.new("UserIDChanged")
  WatchedItemEndingSoon = NotificationEventTypeCodeType.new("WatchedItemEndingSoon")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationPayloadTypeCodeType
class NotificationPayloadTypeCodeType < ::String
  @@schema_type = "NotificationPayloadTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = NotificationPayloadTypeCodeType.new("CustomCode")
  EBLSchemaSOAP = NotificationPayloadTypeCodeType.new("eBLSchemaSOAP")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationRoleCodeType
class NotificationRoleCodeType < ::String
  @@schema_type = "NotificationRoleCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Application = NotificationRoleCodeType.new("Application")
  CustomCode = NotificationRoleCodeType.new("CustomCode")
  Event = NotificationRoleCodeType.new("Event")
  User = NotificationRoleCodeType.new("User")
  UserData = NotificationRoleCodeType.new("UserData")
end

# {urn:ebay:apis:eBLBaseComponents}OperationTypeCodeType
class OperationTypeCodeType < ::String
  @@schema_type = "OperationTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = OperationTypeCodeType.new("CustomCode")
  ItemRules = OperationTypeCodeType.new("ItemRules")
  ReplaceAllDefaultRules = OperationTypeCodeType.new("ReplaceAllDefaultRules")
end

# {urn:ebay:apis:eBLBaseComponents}OrderRoleCodeType
class OrderRoleCodeType < ::String
  @@schema_type = "OrderRoleCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Buyer = OrderRoleCodeType.new("Buyer")
  CustomCode = OrderRoleCodeType.new("CustomCode")
  Seller = OrderRoleCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}OrderStatusCodeType
class OrderStatusCodeType < ::String
  @@schema_type = "OrderStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = OrderStatusCodeType.new("Active")
  Cancelled = OrderStatusCodeType.new("Cancelled")
  Completed = OrderStatusCodeType.new("Completed")
  CustomCode = OrderStatusCodeType.new("CustomCode")
  Inactive = OrderStatusCodeType.new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}PaidStatusCodeType
class PaidStatusCodeType < ::String
  @@schema_type = "PaidStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerHasNotCompletedCheckout = PaidStatusCodeType.new("BuyerHasNotCompletedCheckout")
  CustomCode = PaidStatusCodeType.new("CustomCode")
  EscrowPaymentCancelled = PaidStatusCodeType.new("EscrowPaymentCancelled")
  MarkedAsPaid = PaidStatusCodeType.new("MarkedAsPaid")
  NotPaid = PaidStatusCodeType.new("NotPaid")
  PaidWithEscrow = PaidStatusCodeType.new("PaidWithEscrow")
  PaidWithPaisaPay = PaidStatusCodeType.new("PaidWithPaisaPay")
  PaidWithPayPal = PaidStatusCodeType.new("PaidWithPayPal")
  PaymentPending = PaidStatusCodeType.new("PaymentPending")
  PaymentPendingWithEscrow = PaidStatusCodeType.new("PaymentPendingWithEscrow")
  PaymentPendingWithPaisaPay = PaidStatusCodeType.new("PaymentPendingWithPaisaPay")
  PaymentPendingWithPayPal = PaidStatusCodeType.new("PaymentPendingWithPayPal")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountLevelCodeType
class PayPalAccountLevelCodeType < ::String
  @@schema_type = "PayPalAccountLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = PayPalAccountLevelCodeType.new("CustomCode")
  InternationalUnverified = PayPalAccountLevelCodeType.new("InternationalUnverified")
  InternationalVerified = PayPalAccountLevelCodeType.new("InternationalVerified")
  Invalid = PayPalAccountLevelCodeType.new("Invalid")
  Trusted = PayPalAccountLevelCodeType.new("Trusted")
  Unknown = PayPalAccountLevelCodeType.new("Unknown")
  Unverified = PayPalAccountLevelCodeType.new("Unverified")
  Verified = PayPalAccountLevelCodeType.new("Verified")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountStatusCodeType
class PayPalAccountStatusCodeType < ::String
  @@schema_type = "PayPalAccountStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = PayPalAccountStatusCodeType.new("Active")
  Closed = PayPalAccountStatusCodeType.new("Closed")
  CustomCode = PayPalAccountStatusCodeType.new("CustomCode")
  HighRestricted = PayPalAccountStatusCodeType.new("HighRestricted")
  Invalid = PayPalAccountStatusCodeType.new("Invalid")
  Locked = PayPalAccountStatusCodeType.new("Locked")
  LowRestricted = PayPalAccountStatusCodeType.new("LowRestricted")
  Unknown = PayPalAccountStatusCodeType.new("Unknown")
  WireOff = PayPalAccountStatusCodeType.new("WireOff")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountTypeCodeType
class PayPalAccountTypeCodeType < ::String
  @@schema_type = "PayPalAccountTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Business = PayPalAccountTypeCodeType.new("Business")
  CustomCode = PayPalAccountTypeCodeType.new("CustomCode")
  Invalid = PayPalAccountTypeCodeType.new("Invalid")
  Personal = PayPalAccountTypeCodeType.new("Personal")
  Premier = PayPalAccountTypeCodeType.new("Premier")
  Unknown = PayPalAccountTypeCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMethodSearchCodeType
class PaymentMethodSearchCodeType < ::String
  @@schema_type = "PaymentMethodSearchCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  PaisaPay = PaymentMethodSearchCodeType.new("PaisaPay")
  PayPal = PaymentMethodSearchCodeType.new("PayPal")
  PayPalOrPaisaPay = PaymentMethodSearchCodeType.new("PayPalOrPaisaPay")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentStatusCodeType
class PaymentStatusCodeType < ::String
  @@schema_type = "PaymentStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerCreditCardFailed = PaymentStatusCodeType.new("BuyerCreditCardFailed")
  BuyerECheckBounced = PaymentStatusCodeType.new("BuyerECheckBounced")
  BuyerFailedPaymentReportedBySeller = PaymentStatusCodeType.new("BuyerFailedPaymentReportedBySeller")
  CustomCode = PaymentStatusCodeType.new("CustomCode")
  NoPaymentFailure = PaymentStatusCodeType.new("NoPaymentFailure")
  PayPalPaymentInProcess = PaymentStatusCodeType.new("PayPalPaymentInProcess")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTypeCodeType
class PaymentTypeCodeType < ::String
  @@schema_type = "PaymentTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AdminReversal = PaymentTypeCodeType.new("AdminReversal")
  AllOther = PaymentTypeCodeType.new("AllOther")
  CustomCode = PaymentTypeCodeType.new("CustomCode")
  Refund = PaymentTypeCodeType.new("Refund")
  Sale = PaymentTypeCodeType.new("Sale")
  SellerDeniedPayment = PaymentTypeCodeType.new("SellerDeniedPayment")
end

# {urn:ebay:apis:eBLBaseComponents}PhotoDisplayCodeType
class PhotoDisplayCodeType < ::String
  @@schema_type = "PhotoDisplayCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = PhotoDisplayCodeType.new("CustomCode")
  None = PhotoDisplayCodeType.new("None")
  PicturePack = PhotoDisplayCodeType.new("PicturePack")
  SiteHostedPictureShow = PhotoDisplayCodeType.new("SiteHostedPictureShow")
  SlideShow = PhotoDisplayCodeType.new("SlideShow")
  SuperSize = PhotoDisplayCodeType.new("SuperSize")
  SuperSizePictureShow = PhotoDisplayCodeType.new("SuperSizePictureShow")
  VendorHostedPictureShow = PhotoDisplayCodeType.new("VendorHostedPictureShow")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerActionCodeType
class PictureManagerActionCodeType < ::String
  @@schema_type = "PictureManagerActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Add = PictureManagerActionCodeType.new("Add")
  Change = PictureManagerActionCodeType.new("Change")
  CustomCode = PictureManagerActionCodeType.new("CustomCode")
  Delete = PictureManagerActionCodeType.new("Delete")
  Move = PictureManagerActionCodeType.new("Move")
  Rename = PictureManagerActionCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailLevelCodeType
class PictureManagerDetailLevelCodeType < ::String
  @@schema_type = "PictureManagerDetailLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = PictureManagerDetailLevelCodeType.new("CustomCode")
  ReturnAll = PictureManagerDetailLevelCodeType.new("ReturnAll")
  ReturnPicture = PictureManagerDetailLevelCodeType.new("ReturnPicture")
  ReturnSubscription = PictureManagerDetailLevelCodeType.new("ReturnSubscription")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayTypeCodeType
class PictureManagerPictureDisplayTypeCodeType < ::String
  @@schema_type = "PictureManagerPictureDisplayTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BIBO = PictureManagerPictureDisplayTypeCodeType.new("BIBO")
  CustomCode = PictureManagerPictureDisplayTypeCodeType.new("CustomCode")
  Large = PictureManagerPictureDisplayTypeCodeType.new("Large")
  Original = PictureManagerPictureDisplayTypeCodeType.new("Original")
  Standard = PictureManagerPictureDisplayTypeCodeType.new("Standard")
  Supersize = PictureManagerPictureDisplayTypeCodeType.new("Supersize")
  Thumbnail = PictureManagerPictureDisplayTypeCodeType.new("Thumbnail")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionLevelCodeType
class PictureManagerSubscriptionLevelCodeType < ::String
  @@schema_type = "PictureManagerSubscriptionLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = PictureManagerSubscriptionLevelCodeType.new("CustomCode")
  Free = PictureManagerSubscriptionLevelCodeType.new("Free")
  Level1 = PictureManagerSubscriptionLevelCodeType.new("Level1")
  Level2 = PictureManagerSubscriptionLevelCodeType.new("Level2")
  Level3 = PictureManagerSubscriptionLevelCodeType.new("Level3")
  Level4 = PictureManagerSubscriptionLevelCodeType.new("Level4")
end

# {urn:ebay:apis:eBLBaseComponents}PictureSourceCodeType
class PictureSourceCodeType < ::String
  @@schema_type = "PictureSourceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = PictureSourceCodeType.new("CustomCode")
  EPS = PictureSourceCodeType.new("EPS")
  PictureManager = PictureSourceCodeType.new("PictureManager")
  Vendor = PictureSourceCodeType.new("Vendor")
end

# {urn:ebay:apis:eBLBaseComponents}ProductUseCaseCodeType
class ProductUseCaseCodeType < ::String
  @@schema_type = "ProductUseCaseCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AddItem = ProductUseCaseCodeType.new("AddItem")
  CustomCode = ProductUseCaseCodeType.new("CustomCode")
  RelistItem = ProductUseCaseCodeType.new("RelistItem")
  ReviseItem = ProductUseCaseCodeType.new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemPriceTypeCodeType
class PromotionItemPriceTypeCodeType < ::String
  @@schema_type = "PromotionItemPriceTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AuctionPrice = PromotionItemPriceTypeCodeType.new("AuctionPrice")
  BestOfferOnlyPrice = PromotionItemPriceTypeCodeType.new("BestOfferOnlyPrice")
  BuyItNowPrice = PromotionItemPriceTypeCodeType.new("BuyItNowPrice")
  ClassifiedAdPrice = PromotionItemPriceTypeCodeType.new("ClassifiedAdPrice")
  CustomCode = PromotionItemPriceTypeCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemSelectionCodeType
class PromotionItemSelectionCodeType < ::String
  @@schema_type = "PromotionItemSelectionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Automatic = PromotionItemSelectionCodeType.new("Automatic")
  CustomCode = PromotionItemSelectionCodeType.new("CustomCode")
  Manual = PromotionItemSelectionCodeType.new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionMethodCodeType
class PromotionMethodCodeType < ::String
  @@schema_type = "PromotionMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CrossSell = PromotionMethodCodeType.new("CrossSell")
  CustomCode = PromotionMethodCodeType.new("CustomCode")
  UpSell = PromotionMethodCodeType.new("UpSell")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionSchemeCodeType
class PromotionSchemeCodeType < ::String
  @@schema_type = "PromotionSchemeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CategoryProximity = PromotionSchemeCodeType.new("CategoryProximity")
  CustomCode = PromotionSchemeCodeType.new("CustomCode")
  DefaultRule = PromotionSchemeCodeType.new("DefaultRule")
  ItemToDefaultRule = PromotionSchemeCodeType.new("ItemToDefaultRule")
  ItemToItem = PromotionSchemeCodeType.new("ItemToItem")
  ItemToStoreCat = PromotionSchemeCodeType.new("ItemToStoreCat")
  RelatedCategoryRule = PromotionSchemeCodeType.new("RelatedCategoryRule")
  StoreToStoreCat = PromotionSchemeCodeType.new("StoreToStoreCat")
end

# {urn:ebay:apis:eBLBaseComponents}PurchasePurposeTypeCodeType
class PurchasePurposeTypeCodeType < ::String
  @@schema_type = "PurchasePurposeTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AuctionItem = PurchasePurposeTypeCodeType.new("AuctionItem")
  BuyNowItem = PurchasePurposeTypeCodeType.new("BuyNowItem")
  CustomCode = PurchasePurposeTypeCodeType.new("CustomCode")
  Donation = PurchasePurposeTypeCodeType.new("Donation")
  EBayBilling = PurchasePurposeTypeCodeType.new("eBayBilling")
  GiftCertificates = PurchasePurposeTypeCodeType.new("GiftCertificates")
  Other = PurchasePurposeTypeCodeType.new("Other")
  ShoppingCart = PurchasePurposeTypeCodeType.new("ShoppingCart")
  Subscription = PurchasePurposeTypeCodeType.new("Subscription")
end

# {urn:ebay:apis:eBLBaseComponents}QuantityOperatorCodeType
class QuantityOperatorCodeType < ::String
  @@schema_type = "QuantityOperatorCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = QuantityOperatorCodeType.new("CustomCode")
  Equal = QuantityOperatorCodeType.new("Equal")
  GreaterThan = QuantityOperatorCodeType.new("GreaterThan")
  GreaterThanOrEqual = QuantityOperatorCodeType.new("GreaterThanOrEqual")
  LessThan = QuantityOperatorCodeType.new("LessThan")
  LessThanOrEqual = QuantityOperatorCodeType.new("LessThanOrEqual")
end

# {urn:ebay:apis:eBLBaseComponents}QuestionTypeCodeType
class QuestionTypeCodeType < ::String
  @@schema_type = "QuestionTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = QuestionTypeCodeType.new("CustomCode")
  General = QuestionTypeCodeType.new("General")
  MultipleItemShipping = QuestionTypeCodeType.new("MultipleItemShipping")
  Payment = QuestionTypeCodeType.new("Payment")
  Shipping = QuestionTypeCodeType.new("Shipping")
end

# {urn:ebay:apis:eBLBaseComponents}RCSPaymentStatusCodeType
class RCSPaymentStatusCodeType < ::String
  @@schema_type = "RCSPaymentStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Canceled = RCSPaymentStatusCodeType.new("Canceled")
  CustomCode = RCSPaymentStatusCodeType.new("CustomCode")
  Paid = RCSPaymentStatusCodeType.new("Paid")
  Pending = RCSPaymentStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}RangeCodeType
class RangeCodeType < ::String
  @@schema_type = "RangeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = RangeCodeType.new("CustomCode")
  High = RangeCodeType.new("High")
  Low = RangeCodeType.new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}RecipientRelationCodeType
class RecipientRelationCodeType < ::String
  @@schema_type = "RecipientRelationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  C_1 = RecipientRelationCodeType.new("1")
  C_2 = RecipientRelationCodeType.new("2")
  C_3 = RecipientRelationCodeType.new("3")
  C_4 = RecipientRelationCodeType.new("4")
  CustomCode = RecipientRelationCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationEngineCodeType
class RecommendationEngineCodeType < ::String
  @@schema_type = "RecommendationEngineCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = RecommendationEngineCodeType.new("CustomCode")
  ListingAnalyzer = RecommendationEngineCodeType.new("ListingAnalyzer")
  ProductPricing = RecommendationEngineCodeType.new("ProductPricing")
  SIFFTAS = RecommendationEngineCodeType.new("SIFFTAS")
  SuggestedAttributes = RecommendationEngineCodeType.new("SuggestedAttributes")
end

# {urn:ebay:apis:eBLBaseComponents}RefundReasonCodeType
class RefundReasonCodeType < ::String
  @@schema_type = "RefundReasonCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerRemorse = RefundReasonCodeType.new("BuyerRemorse")
  CannotShipProduct = RefundReasonCodeType.new("CannotShipProduct")
  CustomCode = RefundReasonCodeType.new("CustomCode")
  ItemBadQuality = RefundReasonCodeType.new("ItemBadQuality")
  ItemDamaged = RefundReasonCodeType.new("ItemDamaged")
  Other = RefundReasonCodeType.new("Other")
  WrongItemShipped = RefundReasonCodeType.new("WrongItemShipped")
end

# {urn:ebay:apis:eBLBaseComponents}RefundTypeCodeType
class RefundTypeCodeType < ::String
  @@schema_type = "RefundTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = RefundTypeCodeType.new("CustomCode")
  CustomOrPartial = RefundTypeCodeType.new("CustomOrPartial")
  Full = RefundTypeCodeType.new("Full")
  FullPlusShipping = RefundTypeCodeType.new("FullPlusShipping")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionErrorCodeCodeType
class SMSSubscriptionErrorCodeCodeType < ::String
  @@schema_type = "SMSSubscriptionErrorCodeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = SMSSubscriptionErrorCodeCodeType.new("CustomCode")
  PhoneNumberCarrierChanged = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberCarrierChanged")
  PhoneNumberChanged = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberChanged")
  PhoneNumberInvalid = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberInvalid")
  SMSAggregatorNotAvailable = SMSSubscriptionErrorCodeCodeType.new("SMSAggregatorNotAvailable")
  UserRequestedUnregistration = SMSSubscriptionErrorCodeCodeType.new("UserRequestedUnregistration")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionUserStatusCodeType
class SMSSubscriptionUserStatusCodeType < ::String
  @@schema_type = "SMSSubscriptionUserStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = SMSSubscriptionUserStatusCodeType.new("CustomCode")
  Failed = SMSSubscriptionUserStatusCodeType.new("Failed")
  Pending = SMSSubscriptionUserStatusCodeType.new("Pending")
  Registered = SMSSubscriptionUserStatusCodeType.new("Registered")
  Unregistered = SMSSubscriptionUserStatusCodeType.new("Unregistered")
end

# {urn:ebay:apis:eBLBaseComponents}SearchFlagsCodeType
class SearchFlagsCodeType < ::String
  @@schema_type = "SearchFlagsCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Charity = SearchFlagsCodeType.new("Charity")
  CustomCode = SearchFlagsCodeType.new("CustomCode")
  NowAndNew = SearchFlagsCodeType.new("NowAndNew")
  PayPalBuyerPaymentOption = SearchFlagsCodeType.new("PayPalBuyerPaymentOption")
  SearchInDescription = SearchFlagsCodeType.new("SearchInDescription")
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultValuesCodeType
class SearchResultValuesCodeType < ::String
  @@schema_type = "SearchResultValuesCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CharityListing = SearchResultValuesCodeType.new("CharityListing")
  CustomCode = SearchResultValuesCodeType.new("CustomCode")
  Escrow = SearchResultValuesCodeType.new("Escrow")
  Gift = SearchResultValuesCodeType.new("Gift")
  New = SearchResultValuesCodeType.new("New")
  Picture = SearchResultValuesCodeType.new("Picture")
end

# {urn:ebay:apis:eBLBaseComponents}SearchSortOrderCodeType
class SearchSortOrderCodeType < ::String
  @@schema_type = "SearchSortOrderCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BestMatchSort = SearchSortOrderCodeType.new("BestMatchSort")
  CustomCode = SearchSortOrderCodeType.new("CustomCode")
  SortByBidCountAsc = SearchSortOrderCodeType.new("SortByBidCountAsc")
  SortByBidCountDesc = SearchSortOrderCodeType.new("SortByBidCountDesc")
  SortByCountryAsc = SearchSortOrderCodeType.new("SortByCountryAsc")
  SortByCountryDesc = SearchSortOrderCodeType.new("SortByCountryDesc")
  SortByCurrentBid = SearchSortOrderCodeType.new("SortByCurrentBid")
  SortByCurrentBidAsc = SearchSortOrderCodeType.new("SortByCurrentBidAsc")
  SortByCurrentBidDesc = SearchSortOrderCodeType.new("SortByCurrentBidDesc")
  SortByDistanceAsc = SearchSortOrderCodeType.new("SortByDistanceAsc")
  SortByEndDate = SearchSortOrderCodeType.new("SortByEndDate")
  SortByEscrowAsc = SearchSortOrderCodeType.new("SortByEscrowAsc")
  SortByEscrowDesc = SearchSortOrderCodeType.new("SortByEscrowDesc")
  SortByListingDate = SearchSortOrderCodeType.new("SortByListingDate")
  SortByPayPalAsc = SearchSortOrderCodeType.new("SortByPayPalAsc")
  SortByPayPalDesc = SearchSortOrderCodeType.new("SortByPayPalDesc")
  SortByStartDate = SearchSortOrderCodeType.new("SortByStartDate")
end

# {urn:ebay:apis:eBLBaseComponents}SearchTypeCodeType
class SearchTypeCodeType < ::String
  @@schema_type = "SearchTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  All = SearchTypeCodeType.new("All")
  CustomCode = SearchTypeCodeType.new("CustomCode")
  Gallery = SearchTypeCodeType.new("Gallery")
end

# {urn:ebay:apis:eBLBaseComponents}SecondChanceOfferDurationCodeType
class SecondChanceOfferDurationCodeType < ::String
  @@schema_type = "SecondChanceOfferDurationCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = SecondChanceOfferDurationCodeType.new("CustomCode")
  Days_1 = SecondChanceOfferDurationCodeType.new("Days_1")
  Days_3 = SecondChanceOfferDurationCodeType.new("Days_3")
  Days_5 = SecondChanceOfferDurationCodeType.new("Days_5")
  Days_7 = SecondChanceOfferDurationCodeType.new("Days_7")
end

# {urn:ebay:apis:eBLBaseComponents}SelectionModeCodeType
class SelectionModeCodeType < ::String
  @@schema_type = "SelectionModeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Automatic = SelectionModeCodeType.new("Automatic")
  CustomCode = SelectionModeCodeType.new("CustomCode")
  Manual = SelectionModeCodeType.new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}SellerBusinessCodeType
class SellerBusinessCodeType < ::String
  @@schema_type = "SellerBusinessCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Commercial = SellerBusinessCodeType.new("Commercial")
  Private = SellerBusinessCodeType.new("Private")
  Undefined = SellerBusinessCodeType.new("Undefined")
end

# {urn:ebay:apis:eBLBaseComponents}SellerGuaranteeLevelCodeType
class SellerGuaranteeLevelCodeType < ::String
  @@schema_type = "SellerGuaranteeLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = SellerGuaranteeLevelCodeType.new("CustomCode")
  NotEligible = SellerGuaranteeLevelCodeType.new("NotEligible")
  Premium = SellerGuaranteeLevelCodeType.new("Premium")
  Regular = SellerGuaranteeLevelCodeType.new("Regular")
  Ultra = SellerGuaranteeLevelCodeType.new("Ultra")
end

# {urn:ebay:apis:eBLBaseComponents}SellerLevelCodeType
class SellerLevelCodeType < ::String
  @@schema_type = "SellerLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Bronze = SellerLevelCodeType.new("Bronze")
  CustomCode = SellerLevelCodeType.new("CustomCode")
  Gold = SellerLevelCodeType.new("Gold")
  None = SellerLevelCodeType.new("None")
  Platinum = SellerLevelCodeType.new("Platinum")
  Silver = SellerLevelCodeType.new("Silver")
  Titanium = SellerLevelCodeType.new("Titanium")
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentMethodCodeType
class SellerPaymentMethodCodeType < ::String
  @@schema_type = "SellerPaymentMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CreditCard = SellerPaymentMethodCodeType.new("CreditCard")
  CustomCode = SellerPaymentMethodCodeType.new("CustomCode")
  DirectDebit = SellerPaymentMethodCodeType.new("DirectDebit")
  DirectDebitPendingSignatureMandate = SellerPaymentMethodCodeType.new("DirectDebitPendingSignatureMandate")
  EBayDirectPay = SellerPaymentMethodCodeType.new("eBayDirectPay")
  NothingOnFile = SellerPaymentMethodCodeType.new("NothingOnFile")
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesActionCodeType
class SetUserNotesActionCodeType < ::String
  @@schema_type = "SetUserNotesActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AddOrUpdate = SetUserNotesActionCodeType.new("AddOrUpdate")
  Delete = SetUserNotesActionCodeType.new("Delete")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentDeliveryStatusCodeType
class ShipmentDeliveryStatusCodeType < ::String
  @@schema_type = "ShipmentDeliveryStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Canceled = ShipmentDeliveryStatusCodeType.new("Canceled")
  Created = ShipmentDeliveryStatusCodeType.new("Created")
  CustomCode = ShipmentDeliveryStatusCodeType.new("CustomCode")
  Delivered = ShipmentDeliveryStatusCodeType.new("Delivered")
  DroppedOff = ShipmentDeliveryStatusCodeType.new("DroppedOff")
  InTransit = ShipmentDeliveryStatusCodeType.new("InTransit")
  LabelPrinted = ShipmentDeliveryStatusCodeType.new("LabelPrinted")
  Returned = ShipmentDeliveryStatusCodeType.new("Returned")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentStatusCodeType
class ShipmentStatusCodeType < ::String
  @@schema_type = "ShipmentStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = ShipmentStatusCodeType.new("Active")
  Canceled = ShipmentStatusCodeType.new("Canceled")
  CustomCode = ShipmentStatusCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierCodeType
class ShippingCarrierCodeType < ::String
  @@schema_type = "ShippingCarrierCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ShippingCarrierCodeType.new("CustomCode")
  DHL = ShippingCarrierCodeType.new("DHL")
  DeutschePost = ShippingCarrierCodeType.new("DeutschePost")
  Hermes = ShippingCarrierCodeType.new("Hermes")
  ILoxx = ShippingCarrierCodeType.new("iLoxx")
  Other = ShippingCarrierCodeType.new("Other")
  UPS = ShippingCarrierCodeType.new("UPS")
  USPS = ShippingCarrierCodeType.new("USPS")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingFeatureCodeType
class ShippingFeatureCodeType < ::String
  @@schema_type = "ShippingFeatureCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ShippingFeatureCodeType.new("CustomCode")
  DeliveryConfirmation = ShippingFeatureCodeType.new("DeliveryConfirmation")
  NotDefined = ShippingFeatureCodeType.new("NotDefined")
  Other = ShippingFeatureCodeType.new("Other")
  SaturdayDelivery = ShippingFeatureCodeType.new("SaturdayDelivery")
  SignatureConfirmation = ShippingFeatureCodeType.new("SignatureConfirmation")
  StealthPostage = ShippingFeatureCodeType.new("StealthPostage")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingOptionCodeType
class ShippingOptionCodeType < ::String
  @@schema_type = "ShippingOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ShippingOptionCodeType.new("CustomCode")
  SiteOnly = ShippingOptionCodeType.new("SiteOnly")
  SitePlusRegions = ShippingOptionCodeType.new("SitePlusRegions")
  WillNotShip = ShippingOptionCodeType.new("WillNotShip")
  WorldWide = ShippingOptionCodeType.new("WorldWide")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageCodeType
class ShippingPackageCodeType < ::String
  @@schema_type = "ShippingPackageCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BulkyGoods = ShippingPackageCodeType.new("BulkyGoods")
  Caravan = ShippingPackageCodeType.new("Caravan")
  Cars = ShippingPackageCodeType.new("Cars")
  CustomCode = ShippingPackageCodeType.new("CustomCode")
  Europallet = ShippingPackageCodeType.new("Europallet")
  ExtraLargePack = ShippingPackageCodeType.new("ExtraLargePack")
  Furniture = ShippingPackageCodeType.new("Furniture")
  IndustryVehicles = ShippingPackageCodeType.new("IndustryVehicles")
  LargeEnvelope = ShippingPackageCodeType.new("LargeEnvelope")
  Letter = ShippingPackageCodeType.new("Letter")
  Motorbikes = ShippingPackageCodeType.new("Motorbikes")
  None = ShippingPackageCodeType.new("None")
  OneWayPallet = ShippingPackageCodeType.new("OneWayPallet")
  PackageThickEnvelope = ShippingPackageCodeType.new("PackageThickEnvelope")
  Roll = ShippingPackageCodeType.new("Roll")
  UPSLetter = ShippingPackageCodeType.new("UPSLetter")
  USPSFlatRateEnvelope = ShippingPackageCodeType.new("USPSFlatRateEnvelope")
  USPSLargePack = ShippingPackageCodeType.new("USPSLargePack")
  VeryLargePack = ShippingPackageCodeType.new("VeryLargePack")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRateTypeCodeType
class ShippingRateTypeCodeType < ::String
  @@schema_type = "ShippingRateTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = ShippingRateTypeCodeType.new("CustomCode")
  DailyPickup = ShippingRateTypeCodeType.new("DailyPickup")
  OnDemand = ShippingRateTypeCodeType.new("OnDemand")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRegionCodeType
class ShippingRegionCodeType < ::String
  @@schema_type = "ShippingRegionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Africa = ShippingRegionCodeType.new("Africa")
  Americas = ShippingRegionCodeType.new("Americas")
  Asia = ShippingRegionCodeType.new("Asia")
  Caribbean = ShippingRegionCodeType.new("Caribbean")
  CustomCode = ShippingRegionCodeType.new("CustomCode")
  Europe = ShippingRegionCodeType.new("Europe")
  EuropeanUnion = ShippingRegionCodeType.new("EuropeanUnion")
  LatinAmerica = ShippingRegionCodeType.new("LatinAmerica")
  MiddleEast = ShippingRegionCodeType.new("MiddleEast")
  None = ShippingRegionCodeType.new("None")
  NorthAmerica = ShippingRegionCodeType.new("NorthAmerica")
  Oceania = ShippingRegionCodeType.new("Oceania")
  SouthAmerica = ShippingRegionCodeType.new("SouthAmerica")
  WillNotShip = ShippingRegionCodeType.new("WillNotShip")
  Worldwide = ShippingRegionCodeType.new("Worldwide")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCodeType
class ShippingServiceCodeType < ::String
  @@schema_type = "ShippingServiceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AT_COD = ShippingServiceCodeType.new("AT_COD")
  AT_ExpressOrCourier = ShippingServiceCodeType.new("AT_ExpressOrCourier")
  AT_InsuredDispatch = ShippingServiceCodeType.new("AT_InsuredDispatch")
  AT_InsuredExpressOrCourier = ShippingServiceCodeType.new("AT_InsuredExpressOrCourier")
  AT_InsuredSpecialDispatch = ShippingServiceCodeType.new("AT_InsuredSpecialDispatch")
  AT_Sonstige = ShippingServiceCodeType.new("AT_Sonstige")
  AT_SonstigerVersandInternational = ShippingServiceCodeType.new("AT_SonstigerVersandInternational")
  AT_SpecialDispatch = ShippingServiceCodeType.new("AT_SpecialDispatch")
  AT_StandardDispatch = ShippingServiceCodeType.new("AT_StandardDispatch")
  AT_UnversicherterExpressVersandInternational = ShippingServiceCodeType.new("AT_UnversicherterExpressVersandInternational")
  AT_UnversicherterVersandInternational = ShippingServiceCodeType.new("AT_UnversicherterVersandInternational")
  AT_VersicherterExpressVersandInternational = ShippingServiceCodeType.new("AT_VersicherterExpressVersandInternational")
  AT_VersicherterVersandInternational = ShippingServiceCodeType.new("AT_VersicherterVersandInternational")
  AT_Writing = ShippingServiceCodeType.new("AT_Writing")
  AU_AirMailInternational = ShippingServiceCodeType.new("AU_AirMailInternational")
  AU_Courier = ShippingServiceCodeType.new("AU_Courier")
  AU_EMSInternationalCourierDocuments = ShippingServiceCodeType.new("AU_EMSInternationalCourierDocuments")
  AU_EMSInternationalCourierParcels = ShippingServiceCodeType.new("AU_EMSInternationalCourierParcels")
  AU_EconomyAirInternational = ShippingServiceCodeType.new("AU_EconomyAirInternational")
  AU_ExpeditedInternational = ShippingServiceCodeType.new("AU_ExpeditedInternational")
  AU_Express = ShippingServiceCodeType.new("AU_Express")
  AU_ExpressPostInternationalDocuments = ShippingServiceCodeType.new("AU_ExpressPostInternationalDocuments")
  AU_Other = ShippingServiceCodeType.new("AU_Other")
  AU_OtherInternational = ShippingServiceCodeType.new("AU_OtherInternational")
  AU_Registered = ShippingServiceCodeType.new("AU_Registered")
  AU_Regular = ShippingServiceCodeType.new("AU_Regular")
  AU_SeaMailInternational = ShippingServiceCodeType.new("AU_SeaMailInternational")
  AU_StandardInternational = ShippingServiceCodeType.new("AU_StandardInternational")
  BEFR_DHLInternational = ShippingServiceCodeType.new("BEFR_DHLInternational")
  BEFR_DePostInternational = ShippingServiceCodeType.new("BEFR_DePostInternational")
  BEFR_ExpeditedInternational = ShippingServiceCodeType.new("BEFR_ExpeditedInternational")
  BEFR_ExpressTaxipost = ShippingServiceCodeType.new("BEFR_ExpressTaxipost")
  BEFR_FedExInternational = ShippingServiceCodeType.new("BEFR_FedExInternational")
  BEFR_LaPosteEnvoiNONPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiNONPRIOR")
  BEFR_LaPosteEnvoiPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiPRIOR")
  BEFR_LaPosteEnvoiRecommande = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiRecommande")
  BEFR_LaPosteInternational = ShippingServiceCodeType.new("BEFR_LaPosteInternational")
  BEFR_LaPosteenvoieNONPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteenvoieNONPRIOR")
  BEFR_LaPosteenvoiePRIOR = ShippingServiceCodeType.new("BEFR_LaPosteenvoiePRIOR")
  BEFR_LaPosteenvoieRecommande = ShippingServiceCodeType.new("BEFR_LaPosteenvoieRecommande")
  BEFR_LivraisonExpressInternationalePrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonExpressInternationalePrixforFaitaire")
  BEFR_LivraisonExpressPrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonExpressPrixforFaitaire")
  BEFR_LivraisonSecurise = ShippingServiceCodeType.new("BEFR_LivraisonSecurise")
  BEFR_LivraisonSecuriseInternational = ShippingServiceCodeType.new("BEFR_LivraisonSecuriseInternational")
  BEFR_LivraisonStandardInternationalePrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonStandardInternationalePrixforFaitaire")
  BEFR_LivraisonStandardPrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonStandardPrixforFaitaire")
  BEFR_Other = ShippingServiceCodeType.new("BEFR_Other")
  BEFR_OtherInternational = ShippingServiceCodeType.new("BEFR_OtherInternational")
  BEFR_PaquetKilopost = ShippingServiceCodeType.new("BEFR_PaquetKilopost")
  BEFR_PaquetKilopostInternationale = ShippingServiceCodeType.new("BEFR_PaquetKilopostInternationale")
  BEFR_ParcelPost = ShippingServiceCodeType.new("BEFR_ParcelPost")
  BEFR_PointRetraitKiala = ShippingServiceCodeType.new("BEFR_PointRetraitKiala")
  BEFR_PriorityDelivery = ShippingServiceCodeType.new("BEFR_PriorityDelivery")
  BEFR_RegisteredMail = ShippingServiceCodeType.new("BEFR_RegisteredMail")
  BEFR_StandardDelivery = ShippingServiceCodeType.new("BEFR_StandardDelivery")
  BEFR_StandardInternational = ShippingServiceCodeType.new("BEFR_StandardInternational")
  BEFR_TPGPostTNTInternational = ShippingServiceCodeType.new("BEFR_TPGPostTNTInternational")
  BEFR_Taxipost = ShippingServiceCodeType.new("BEFR_Taxipost")
  BEFR_UPSInternational = ShippingServiceCodeType.new("BEFR_UPSInternational")
  BENL_DHLInternational = ShippingServiceCodeType.new("BENL_DHLInternational")
  BENL_DePostInternational = ShippingServiceCodeType.new("BENL_DePostInternational")
  BENL_DePostZendingAangetekend = ShippingServiceCodeType.new("BENL_DePostZendingAangetekend")
  BENL_DePostZendingAangetekendInternational = ShippingServiceCodeType.new("BENL_DePostZendingAangetekendInternational")
  BENL_DePostZendingNONPRIOR = ShippingServiceCodeType.new("BENL_DePostZendingNONPRIOR")
  BENL_DePostZendingNONPRIORInternational = ShippingServiceCodeType.new("BENL_DePostZendingNONPRIORInternational")
  BENL_DePostZendingPRIOR = ShippingServiceCodeType.new("BENL_DePostZendingPRIOR")
  BENL_DePostZendingPRIORInternational = ShippingServiceCodeType.new("BENL_DePostZendingPRIORInternational")
  BENL_ExpeditedInternational = ShippingServiceCodeType.new("BENL_ExpeditedInternational")
  BENL_FedExInternational = ShippingServiceCodeType.new("BENL_FedExInternational")
  BENL_KialaAfhaalpunt = ShippingServiceCodeType.new("BENL_KialaAfhaalpunt")
  BENL_KilopostPakje = ShippingServiceCodeType.new("BENL_KilopostPakje")
  BENL_KilopostPakjeInternational = ShippingServiceCodeType.new("BENL_KilopostPakjeInternational")
  BENL_LaPosteInternational = ShippingServiceCodeType.new("BENL_LaPosteInternational")
  BENL_Other = ShippingServiceCodeType.new("BENL_Other")
  BENL_OtherInternational = ShippingServiceCodeType.new("BENL_OtherInternational")
  BENL_ParcelPost = ShippingServiceCodeType.new("BENL_ParcelPost")
  BENL_PriorityDelivery = ShippingServiceCodeType.new("BENL_PriorityDelivery")
  BENL_RegisteredMail = ShippingServiceCodeType.new("BENL_RegisteredMail")
  BENL_StandardDelivery = ShippingServiceCodeType.new("BENL_StandardDelivery")
  BENL_StandardInternational = ShippingServiceCodeType.new("BENL_StandardInternational")
  BENL_TPGPostTNTInternational = ShippingServiceCodeType.new("BENL_TPGPostTNTInternational")
  BENL_Taxipost = ShippingServiceCodeType.new("BENL_Taxipost")
  BENL_TaxipostExpressverzending = ShippingServiceCodeType.new("BENL_TaxipostExpressverzending")
  BENL_UPSInternational = ShippingServiceCodeType.new("BENL_UPSInternational")
  BENL_VasteKostenStandaardVerzending = ShippingServiceCodeType.new("BENL_VasteKostenStandaardVerzending")
  BENL_VasteKostenVersneldeVerzending = ShippingServiceCodeType.new("BENL_VasteKostenVersneldeVerzending")
  BENL_VerzekerdeVerzending = ShippingServiceCodeType.new("BENL_VerzekerdeVerzending")
  BENL_VerzekerdeVerzendingInternational = ShippingServiceCodeType.new("BENL_VerzekerdeVerzendingInternational")
  CA_ExpeditedDelivery = ShippingServiceCodeType.new("CA_ExpeditedDelivery")
  CA_ExpeditedInternational = ShippingServiceCodeType.new("CA_ExpeditedInternational")
  CA_OtherInternational = ShippingServiceCodeType.new("CA_OtherInternational")
  CA_PostExpeditedParcel = ShippingServiceCodeType.new("CA_PostExpeditedParcel")
  CA_PostExpeditedParcelUSA = ShippingServiceCodeType.new("CA_PostExpeditedParcelUSA")
  CA_PostInternationalLetterPost = ShippingServiceCodeType.new("CA_PostInternationalLetterPost")
  CA_PostInternationalParcelAir = ShippingServiceCodeType.new("CA_PostInternationalParcelAir")
  CA_PostInternationalParcelSurface = ShippingServiceCodeType.new("CA_PostInternationalParcelSurface")
  CA_PostLettermail = ShippingServiceCodeType.new("CA_PostLettermail")
  CA_PostPriorityCourier = ShippingServiceCodeType.new("CA_PostPriorityCourier")
  CA_PostRegularParcel = ShippingServiceCodeType.new("CA_PostRegularParcel")
  CA_PostSmallPacketsUSA = ShippingServiceCodeType.new("CA_PostSmallPacketsUSA")
  CA_PostSmallPacketsUSAAir = ShippingServiceCodeType.new("CA_PostSmallPacketsUSAAir")
  CA_PostSmallPacketsUSAGround = ShippingServiceCodeType.new("CA_PostSmallPacketsUSAGround")
  CA_PostUSALetterPost = ShippingServiceCodeType.new("CA_PostUSALetterPost")
  CA_PostXpresspost = ShippingServiceCodeType.new("CA_PostXpresspost")
  CA_PostXpresspostInternational = ShippingServiceCodeType.new("CA_PostXpresspostInternational")
  CA_PostXpresspostUSA = ShippingServiceCodeType.new("CA_PostXpresspostUSA")
  CA_PurolatorInternational = ShippingServiceCodeType.new("CA_PurolatorInternational")
  CA_SmallPacketsInternational = ShippingServiceCodeType.new("CA_SmallPacketsInternational")
  CA_SmallPacketsInternationalAir = ShippingServiceCodeType.new("CA_SmallPacketsInternationalAir")
  CA_SmallPacketsInternationalGround = ShippingServiceCodeType.new("CA_SmallPacketsInternationalGround")
  CA_StandardDelivery = ShippingServiceCodeType.new("CA_StandardDelivery")
  CA_StandardInternational = ShippingServiceCodeType.new("CA_StandardInternational")
  CA_UPS3DaySelectUnitedStates = ShippingServiceCodeType.new("CA_UPS3DaySelectUnitedStates")
  CA_UPSExpeditedCanada = ShippingServiceCodeType.new("CA_UPSExpeditedCanada")
  CA_UPSExpeditedUnitedStates = ShippingServiceCodeType.new("CA_UPSExpeditedUnitedStates")
  CA_UPSExpressCanada = ShippingServiceCodeType.new("CA_UPSExpressCanada")
  CA_UPSExpressSaverCanada = ShippingServiceCodeType.new("CA_UPSExpressSaverCanada")
  CA_UPSExpressUnitedStates = ShippingServiceCodeType.new("CA_UPSExpressUnitedStates")
  CA_UPSStandardCanada = ShippingServiceCodeType.new("CA_UPSStandardCanada")
  CA_UPSStandardUnitedStates = ShippingServiceCodeType.new("CA_UPSStandardUnitedStates")
  CA_UPSWorldWideExpedited = ShippingServiceCodeType.new("CA_UPSWorldWideExpedited")
  CA_UPSWorldWideExpress = ShippingServiceCodeType.new("CA_UPSWorldWideExpress")
  CH_COD = ShippingServiceCodeType.new("CH_COD")
  CH_EconomySendungenInternational = ShippingServiceCodeType.new("CH_EconomySendungenInternational")
  CH_ExpressOrCourier = ShippingServiceCodeType.new("CH_ExpressOrCourier")
  CH_InsuredDispatch = ShippingServiceCodeType.new("CH_InsuredDispatch")
  CH_InsuredExpressOrCourier = ShippingServiceCodeType.new("CH_InsuredExpressOrCourier")
  CH_InsuredSpecialDispatch = ShippingServiceCodeType.new("CH_InsuredSpecialDispatch")
  CH_PrioritySendungenInternational = ShippingServiceCodeType.new("CH_PrioritySendungenInternational")
  CH_Sonstige = ShippingServiceCodeType.new("CH_Sonstige")
  CH_SonstigerVersandInternational = ShippingServiceCodeType.new("CH_SonstigerVersandInternational")
  CH_SpecialDispatch = ShippingServiceCodeType.new("CH_SpecialDispatch")
  CH_StandardDispatchAPost = ShippingServiceCodeType.new("CH_StandardDispatchAPost")
  CH_StandardDispatchBPost = ShippingServiceCodeType.new("CH_StandardDispatchBPost")
  CH_UrgentSendungenInternational = ShippingServiceCodeType.new("CH_UrgentSendungenInternational")
  CH_Writing = ShippingServiceCodeType.new("CH_Writing")
  CN_CODInternational = ShippingServiceCodeType.new("CN_CODInternational")
  CN_DeliveryCompanyExpress = ShippingServiceCodeType.new("CN_DeliveryCompanyExpress")
  CN_EMSInternational = ShippingServiceCodeType.new("CN_EMSInternational")
  CN_ExpeditedInternational = ShippingServiceCodeType.new("CN_ExpeditedInternational")
  CN_ExpressDeliveryOtherCities = ShippingServiceCodeType.new("CN_ExpressDeliveryOtherCities")
  CN_ExpressDeliverySameCity = ShippingServiceCodeType.new("CN_ExpressDeliverySameCity")
  CN_FastPostOffice = ShippingServiceCodeType.new("CN_FastPostOffice")
  CN_OtherInternational = ShippingServiceCodeType.new("CN_OtherInternational")
  CN_Others = ShippingServiceCodeType.new("CN_Others")
  CN_OthersInternational = ShippingServiceCodeType.new("CN_OthersInternational")
  CN_PersonalDelivery = ShippingServiceCodeType.new("CN_PersonalDelivery")
  CN_PostOfficeExpress = ShippingServiceCodeType.new("CN_PostOfficeExpress")
  CN_RegularLogisticsInternational = ShippingServiceCodeType.new("CN_RegularLogisticsInternational")
  CN_RegularPackage = ShippingServiceCodeType.new("CN_RegularPackage")
  CN_StandardInternational = ShippingServiceCodeType.new("CN_StandardInternational")
  CN_StandardMailingInternational = ShippingServiceCodeType.new("CN_StandardMailingInternational")
  CustomCode = ShippingServiceCodeType.new("CustomCode")
  DE_COD = ShippingServiceCodeType.new("DE_COD")
  DE_DHLPackchen = ShippingServiceCodeType.new("DE_DHLPackchen")
  DE_DHLPackchenInternational = ShippingServiceCodeType.new("DE_DHLPackchenInternational")
  DE_DHLPostpaket = ShippingServiceCodeType.new("DE_DHLPostpaket")
  DE_DHLPostpaketInternational = ShippingServiceCodeType.new("DE_DHLPostpaketInternational")
  DE_DeutschePostBrief = ShippingServiceCodeType.new("DE_DeutschePostBrief")
  DE_DeutschePostBriefLandInternational = ShippingServiceCodeType.new("DE_DeutschePostBriefLandInternational")
  DE_DeutschePostBriefLuftInternational = ShippingServiceCodeType.new("DE_DeutschePostBriefLuftInternational")
  DE_DeutschePostBuchersendung = ShippingServiceCodeType.new("DE_DeutschePostBuchersendung")
  DE_DeutschePostWarensendung = ShippingServiceCodeType.new("DE_DeutschePostWarensendung")
  DE_ExpressOrCourier = ShippingServiceCodeType.new("DE_ExpressOrCourier")
  DE_HermesPaketUnversichert = ShippingServiceCodeType.new("DE_HermesPaketUnversichert")
  DE_HermesPaketVersichert = ShippingServiceCodeType.new("DE_HermesPaketVersichert")
  DE_IloxxEuropaInternational = ShippingServiceCodeType.new("DE_IloxxEuropaInternational")
  DE_IloxxStandard = ShippingServiceCodeType.new("DE_IloxxStandard")
  DE_IloxxTransportXXL = ShippingServiceCodeType.new("DE_IloxxTransportXXL")
  DE_IloxxUbernachtExpress = ShippingServiceCodeType.new("DE_IloxxUbernachtExpress")
  DE_IloxxWorldWideInternational = ShippingServiceCodeType.new("DE_IloxxWorldWideInternational")
  DE_InsuredDispatch = ShippingServiceCodeType.new("DE_InsuredDispatch")
  DE_InsuredExpressOrCourier = ShippingServiceCodeType.new("DE_InsuredExpressOrCourier")
  DE_InsuredSpecialDispatch = ShippingServiceCodeType.new("DE_InsuredSpecialDispatch")
  DE_Sonstige = ShippingServiceCodeType.new("DE_Sonstige")
  DE_SonstigerVersandInternational = ShippingServiceCodeType.new("DE_SonstigerVersandInternational")
  DE_SpecialDispatch = ShippingServiceCodeType.new("DE_SpecialDispatch")
  DE_StandardDispatch = ShippingServiceCodeType.new("DE_StandardDispatch")
  DE_UnversicherterExpressVersandInternational = ShippingServiceCodeType.new("DE_UnversicherterExpressVersandInternational")
  DE_UnversicherterVersand = ShippingServiceCodeType.new("DE_UnversicherterVersand")
  DE_UnversicherterVersandInternational = ShippingServiceCodeType.new("DE_UnversicherterVersandInternational")
  DE_VersicherterExpressVersandInternational = ShippingServiceCodeType.new("DE_VersicherterExpressVersandInternational")
  DE_VersicherterVersandInternational = ShippingServiceCodeType.new("DE_VersicherterVersandInternational")
  DE_Writing = ShippingServiceCodeType.new("DE_Writing")
  ES_CartasInternacionalesDeMas20 = ShippingServiceCodeType.new("ES_CartasInternacionalesDeMas20")
  ES_CartasInternacionalesHasta20 = ShippingServiceCodeType.new("ES_CartasInternacionalesHasta20")
  ES_CartasNacionalesDeMas20 = ShippingServiceCodeType.new("ES_CartasNacionalesDeMas20")
  ES_CartasNacionalesHasta20 = ShippingServiceCodeType.new("ES_CartasNacionalesHasta20")
  ES_CartasPostalInternational = ShippingServiceCodeType.new("ES_CartasPostalInternational")
  ES_EconomyPacketInternational = ShippingServiceCodeType.new("ES_EconomyPacketInternational")
  ES_EmsPostalExpressInternational = ShippingServiceCodeType.new("ES_EmsPostalExpressInternational")
  ES_ExpeditedInternational = ShippingServiceCodeType.new("ES_ExpeditedInternational")
  ES_OtherInternational = ShippingServiceCodeType.new("ES_OtherInternational")
  ES_Otros = ShippingServiceCodeType.new("ES_Otros")
  ES_PaqueteAzulDeMas2kg = ShippingServiceCodeType.new("ES_PaqueteAzulDeMas2kg")
  ES_PaqueteAzulHasta2kg = ShippingServiceCodeType.new("ES_PaqueteAzulHasta2kg")
  ES_PaqueteInternacionalEconomico = ShippingServiceCodeType.new("ES_PaqueteInternacionalEconomico")
  ES_StandardInternational = ShippingServiceCodeType.new("ES_StandardInternational")
  ES_Urgente = ShippingServiceCodeType.new("ES_Urgente")
  ExpeditedInternational = ShippingServiceCodeType.new("ExpeditedInternational")
  FR_AuteModeDenvoiDeColis = ShippingServiceCodeType.new("FR_AuteModeDenvoiDeColis")
  FR_Autre = ShippingServiceCodeType.new("FR_Autre")
  FR_Chronopost = ShippingServiceCodeType.new("FR_Chronopost")
  FR_ChronopostClassicInternational = ShippingServiceCodeType.new("FR_ChronopostClassicInternational")
  FR_ChronopostPremiumInternational = ShippingServiceCodeType.new("FR_ChronopostPremiumInternational")
  FR_ChronoposteInternationalClassic = ShippingServiceCodeType.new("FR_ChronoposteInternationalClassic")
  FR_Colieco = ShippingServiceCodeType.new("FR_Colieco")
  FR_ColiposteColissimo = ShippingServiceCodeType.new("FR_ColiposteColissimo")
  FR_ColiposteColissimoDirect = ShippingServiceCodeType.new("FR_ColiposteColissimoDirect")
  FR_ColiposteColissimoRecommended = ShippingServiceCodeType.new("FR_ColiposteColissimoRecommended")
  FR_DHLExpressEuropack = ShippingServiceCodeType.new("FR_DHLExpressEuropack")
  FR_DHLInternational = ShippingServiceCodeType.new("FR_DHLInternational")
  FR_Ecopli = ShippingServiceCodeType.new("FR_Ecopli")
  FR_ExpeditedInternational = ShippingServiceCodeType.new("FR_ExpeditedInternational")
  FR_LaPosteColisEconomiqueInternational = ShippingServiceCodeType.new("FR_LaPosteColisEconomiqueInternational")
  FR_LaPosteColissimoEmballageInternational = ShippingServiceCodeType.new("FR_LaPosteColissimoEmballageInternational")
  FR_LaPosteColissimoInternational = ShippingServiceCodeType.new("FR_LaPosteColissimoInternational")
  FR_LaPosteInternationalEconomyCourier = ShippingServiceCodeType.new("FR_LaPosteInternationalEconomyCourier")
  FR_LaPosteInternationalPriorityCourier = ShippingServiceCodeType.new("FR_LaPosteInternationalPriorityCourier")
  FR_OtherInternational = ShippingServiceCodeType.new("FR_OtherInternational")
  FR_PostOfficeLetter = ShippingServiceCodeType.new("FR_PostOfficeLetter")
  FR_PostOfficeLetterFollowed = ShippingServiceCodeType.new("FR_PostOfficeLetterFollowed")
  FR_PostOfficeLetterRecommended = ShippingServiceCodeType.new("FR_PostOfficeLetterRecommended")
  FR_RemiseEnMainPropre = ShippingServiceCodeType.new("FR_RemiseEnMainPropre")
  FR_StandardInternational = ShippingServiceCodeType.new("FR_StandardInternational")
  FR_UPSExpressInternational = ShippingServiceCodeType.new("FR_UPSExpressInternational")
  FR_UPSStandard = ShippingServiceCodeType.new("FR_UPSStandard")
  FR_UPSStandardAgainstRefund = ShippingServiceCodeType.new("FR_UPSStandardAgainstRefund")
  FR_UPSStandardInternational = ShippingServiceCodeType.new("FR_UPSStandardInternational")
  FreightShipping = ShippingServiceCodeType.new("FreightShipping")
  FreightShippingInternational = ShippingServiceCodeType.new("FreightShippingInternational")
  HK_DomesticRegularShipping = ShippingServiceCodeType.new("HK_DomesticRegularShipping")
  HK_DomesticSpecialShipping = ShippingServiceCodeType.new("HK_DomesticSpecialShipping")
  HK_InternationalRegularShipping = ShippingServiceCodeType.new("HK_InternationalRegularShipping")
  HK_InternationalSpecialShipping = ShippingServiceCodeType.new("HK_InternationalSpecialShipping")
  HK_LocalCourier = ShippingServiceCodeType.new("HK_LocalCourier")
  HK_LocalPickUpOnly = ShippingServiceCodeType.new("HK_LocalPickUpOnly")
  IE_CollectionInPerson = ShippingServiceCodeType.new("IE_CollectionInPerson")
  IE_CollectionInPersonInternational = ShippingServiceCodeType.new("IE_CollectionInPersonInternational")
  IE_EMSSDSCourier = ShippingServiceCodeType.new("IE_EMSSDSCourier")
  IE_EMSSDSCourierInternational = ShippingServiceCodeType.new("IE_EMSSDSCourierInternational")
  IE_EconomySDSCourier = ShippingServiceCodeType.new("IE_EconomySDSCourier")
  IE_EconomySDSCourierInternational = ShippingServiceCodeType.new("IE_EconomySDSCourierInternational")
  IE_FirstClassLetterService = ShippingServiceCodeType.new("IE_FirstClassLetterService")
  IE_InternationalEconomyService = ShippingServiceCodeType.new("IE_InternationalEconomyService")
  IE_InternationalPriorityService = ShippingServiceCodeType.new("IE_InternationalPriorityService")
  IE_OtherCourier = ShippingServiceCodeType.new("IE_OtherCourier")
  IE_OtherCourierInternational = ShippingServiceCodeType.new("IE_OtherCourierInternational")
  IE_RegisteredPost = ShippingServiceCodeType.new("IE_RegisteredPost")
  IE_SellersStandardRate = ShippingServiceCodeType.new("IE_SellersStandardRate")
  IE_SellersStandardRateInternational = ShippingServiceCodeType.new("IE_SellersStandardRateInternational")
  IE_SwiftPostExpressInternational = ShippingServiceCodeType.new("IE_SwiftPostExpressInternational")
  IE_SwiftPostInternational = ShippingServiceCodeType.new("IE_SwiftPostInternational")
  IE_SwiftPostNational = ShippingServiceCodeType.new("IE_SwiftPostNational")
  IN_BuyerPicksUpAndPays = ShippingServiceCodeType.new("IN_BuyerPicksUpAndPays")
  IN_Courier = ShippingServiceCodeType.new("IN_Courier")
  IN_ExpeditedInternational = ShippingServiceCodeType.new("IN_ExpeditedInternational")
  IN_Express = ShippingServiceCodeType.new("IN_Express")
  IN_FlatRateCOD = ShippingServiceCodeType.new("IN_FlatRateCOD")
  IN_LocalCOD = ShippingServiceCodeType.new("IN_LocalCOD")
  IN_NationalCOD = ShippingServiceCodeType.new("IN_NationalCOD")
  IN_OtherInternational = ShippingServiceCodeType.new("IN_OtherInternational")
  IN_Regular = ShippingServiceCodeType.new("IN_Regular")
  IN_StandardInternational = ShippingServiceCodeType.new("IN_StandardInternational")
  IT_ExpeditedInternational = ShippingServiceCodeType.new("IT_ExpeditedInternational")
  IT_ExpressCourier = ShippingServiceCodeType.new("IT_ExpressCourier")
  IT_InsuredMail = ShippingServiceCodeType.new("IT_InsuredMail")
  IT_MailRegisteredLetter = ShippingServiceCodeType.new("IT_MailRegisteredLetter")
  IT_MailRegisteredLetterWithMark = ShippingServiceCodeType.new("IT_MailRegisteredLetterWithMark")
  IT_OtherInternational = ShippingServiceCodeType.new("IT_OtherInternational")
  IT_PriorityMail = ShippingServiceCodeType.new("IT_PriorityMail")
  IT_QuickMail = ShippingServiceCodeType.new("IT_QuickMail")
  IT_QuickPackage1 = ShippingServiceCodeType.new("IT_QuickPackage1")
  IT_QuickPackage3 = ShippingServiceCodeType.new("IT_QuickPackage3")
  IT_RegularMail = ShippingServiceCodeType.new("IT_RegularMail")
  IT_RegularPackage = ShippingServiceCodeType.new("IT_RegularPackage")
  IT_StandardInternational = ShippingServiceCodeType.new("IT_StandardInternational")
  InternationalNotSelected = ShippingServiceCodeType.new("InternationalNotSelected")
  LocalDelivery = ShippingServiceCodeType.new("LocalDelivery")
  NL_DHLInternational = ShippingServiceCodeType.new("NL_DHLInternational")
  NL_DPDGBRInternational = ShippingServiceCodeType.new("NL_DPDGBRInternational")
  NL_ExpeditedInternational = ShippingServiceCodeType.new("NL_ExpeditedInternational")
  NL_FedExInternational = ShippingServiceCodeType.new("NL_FedExInternational")
  NL_GLSBusinessInternational = ShippingServiceCodeType.new("NL_GLSBusinessInternational")
  NL_Other = ShippingServiceCodeType.new("NL_Other")
  NL_OtherInternational = ShippingServiceCodeType.new("NL_OtherInternational")
  NL_ParcelPost = ShippingServiceCodeType.new("NL_ParcelPost")
  NL_RegisteredMail = ShippingServiceCodeType.new("NL_RegisteredMail")
  NL_StandardDelivery = ShippingServiceCodeType.new("NL_StandardDelivery")
  NL_StandardInternational = ShippingServiceCodeType.new("NL_StandardInternational")
  NL_TPGPostTNTInternational = ShippingServiceCodeType.new("NL_TPGPostTNTInternational")
  NL_UPSInternational = ShippingServiceCodeType.new("NL_UPSInternational")
  NotSelected = ShippingServiceCodeType.new("NotSelected")
  Other = ShippingServiceCodeType.new("Other")
  OtherInternational = ShippingServiceCodeType.new("OtherInternational")
  PL_DomesticRegular = ShippingServiceCodeType.new("PL_DomesticRegular")
  PL_DomesticSpecial = ShippingServiceCodeType.new("PL_DomesticSpecial")
  SG_DomesticNonStandardMail = ShippingServiceCodeType.new("SG_DomesticNonStandardMail")
  SG_DomesticSpeedpostIslandwide = ShippingServiceCodeType.new("SG_DomesticSpeedpostIslandwide")
  SG_DomesticStandardMail = ShippingServiceCodeType.new("SG_DomesticStandardMail")
  SG_InternationalCourier = ShippingServiceCodeType.new("SG_InternationalCourier")
  SG_InternationalExpressMailService = ShippingServiceCodeType.new("SG_InternationalExpressMailService")
  SG_InternationalStandardMail = ShippingServiceCodeType.new("SG_InternationalStandardMail")
  SG_LocalCourier = ShippingServiceCodeType.new("SG_LocalCourier")
  SG_LocalPickUpOnly = ShippingServiceCodeType.new("SG_LocalPickUpOnly")
  ShippingMethodExpress = ShippingServiceCodeType.new("ShippingMethodExpress")
  ShippingMethodOvernight = ShippingServiceCodeType.new("ShippingMethodOvernight")
  ShippingMethodStandard = ShippingServiceCodeType.new("ShippingMethodStandard")
  StandardInternational = ShippingServiceCodeType.new("StandardInternational")
  TW_COD = ShippingServiceCodeType.new("TW_COD")
  TW_CPInternationalEMS = ShippingServiceCodeType.new("TW_CPInternationalEMS")
  TW_CPInternationalLetterPost = ShippingServiceCodeType.new("TW_CPInternationalLetterPost")
  TW_CPInternationalOceanShippingParcel = ShippingServiceCodeType.new("TW_CPInternationalOceanShippingParcel")
  TW_CPInternationalParcelPost = ShippingServiceCodeType.new("TW_CPInternationalParcelPost")
  TW_CPInternationalRegisteredLetterPost = ShippingServiceCodeType.new("TW_CPInternationalRegisteredLetterPost")
  TW_CPInternationalRegisteredParcelPost = ShippingServiceCodeType.new("TW_CPInternationalRegisteredParcelPost")
  TW_DwellingMatchCOD = ShippingServiceCodeType.new("TW_DwellingMatchCOD")
  TW_DwellingMatchPost = ShippingServiceCodeType.new("TW_DwellingMatchPost")
  TW_ExpressMail = ShippingServiceCodeType.new("TW_ExpressMail")
  TW_FedExInternationalEconomy = ShippingServiceCodeType.new("TW_FedExInternationalEconomy")
  TW_FedExInternationalPriority = ShippingServiceCodeType.new("TW_FedExInternationalPriority")
  TW_Other = ShippingServiceCodeType.new("TW_Other")
  TW_OtherInternational = ShippingServiceCodeType.new("TW_OtherInternational")
  TW_ParcelPost = ShippingServiceCodeType.new("TW_ParcelPost")
  TW_RegisteredMail = ShippingServiceCodeType.new("TW_RegisteredMail")
  TW_SelfPickup = ShippingServiceCodeType.new("TW_SelfPickup")
  TW_UPSWorldwideExpedited = ShippingServiceCodeType.new("TW_UPSWorldwideExpedited")
  TW_UPSWorldwideExpress = ShippingServiceCodeType.new("TW_UPSWorldwideExpress")
  TW_UPSWorldwideExpressPlus = ShippingServiceCodeType.new("TW_UPSWorldwideExpressPlus")
  TW_UnregisteredMail = ShippingServiceCodeType.new("TW_UnregisteredMail")
  UK_CollectInPerson = ShippingServiceCodeType.new("UK_CollectInPerson")
  UK_CollectInPersonInternational = ShippingServiceCodeType.new("UK_CollectInPersonInternational")
  UK_OtherCourier = ShippingServiceCodeType.new("UK_OtherCourier")
  UK_OtherCourierOrDeliveryInternational = ShippingServiceCodeType.new("UK_OtherCourierOrDeliveryInternational")
  UK_ParcelForceEuro48International = ShippingServiceCodeType.new("UK_ParcelForceEuro48International")
  UK_ParcelForceInternationalDatapost = ShippingServiceCodeType.new("UK_ParcelForceInternationalDatapost")
  UK_ParcelForceInternationalScheduled = ShippingServiceCodeType.new("UK_ParcelForceInternationalScheduled")
  UK_ParcelForceIreland24International = ShippingServiceCodeType.new("UK_ParcelForceIreland24International")
  UK_Parcelforce24 = ShippingServiceCodeType.new("UK_Parcelforce24")
  UK_Parcelforce48 = ShippingServiceCodeType.new("UK_Parcelforce48")
  UK_RoyalMailAirmailInternational = ShippingServiceCodeType.new("UK_RoyalMailAirmailInternational")
  UK_RoyalMailAirsureInternational = ShippingServiceCodeType.new("UK_RoyalMailAirsureInternational")
  UK_RoyalMailFirstClassRecorded = ShippingServiceCodeType.new("UK_RoyalMailFirstClassRecorded")
  UK_RoyalMailFirstClassStandard = ShippingServiceCodeType.new("UK_RoyalMailFirstClassStandard")
  UK_RoyalMailHMForcesMailInternational = ShippingServiceCodeType.new("UK_RoyalMailHMForcesMailInternational")
  UK_RoyalMailInternationalSignedFor = ShippingServiceCodeType.new("UK_RoyalMailInternationalSignedFor")
  UK_RoyalMailSecondClassRecorded = ShippingServiceCodeType.new("UK_RoyalMailSecondClassRecorded")
  UK_RoyalMailSecondClassStandard = ShippingServiceCodeType.new("UK_RoyalMailSecondClassStandard")
  UK_RoyalMailSpecialDelivery = ShippingServiceCodeType.new("UK_RoyalMailSpecialDelivery")
  UK_RoyalMailStandardParcel = ShippingServiceCodeType.new("UK_RoyalMailStandardParcel")
  UK_RoyalMailSurfaceMailInternational = ShippingServiceCodeType.new("UK_RoyalMailSurfaceMailInternational")
  UK_SellersStandardInternationalRate = ShippingServiceCodeType.new("UK_SellersStandardInternationalRate")
  UK_SellersStandardRate = ShippingServiceCodeType.new("UK_SellersStandardRate")
  UPS2DayAirAM = ShippingServiceCodeType.new("UPS2DayAirAM")
  UPS2ndDay = ShippingServiceCodeType.new("UPS2ndDay")
  UPS3rdDay = ShippingServiceCodeType.new("UPS3rdDay")
  UPSGround = ShippingServiceCodeType.new("UPSGround")
  UPSNextDay = ShippingServiceCodeType.new("UPSNextDay")
  UPSNextDayAir = ShippingServiceCodeType.new("UPSNextDayAir")
  UPSStandardToCanada = ShippingServiceCodeType.new("UPSStandardToCanada")
  UPSWorldWideExpedited = ShippingServiceCodeType.new("UPSWorldWideExpedited")
  UPSWorldWideExpress = ShippingServiceCodeType.new("UPSWorldWideExpress")
  UPSWorldWideExpressBox10kg = ShippingServiceCodeType.new("UPSWorldWideExpressBox10kg")
  UPSWorldWideExpressBox25kg = ShippingServiceCodeType.new("UPSWorldWideExpressBox25kg")
  UPSWorldWideExpressPlus = ShippingServiceCodeType.new("UPSWorldWideExpressPlus")
  UPSWorldWideExpressPlusBox10kg = ShippingServiceCodeType.new("UPSWorldWideExpressPlusBox10kg")
  UPSWorldWideExpressPlusBox25kg = ShippingServiceCodeType.new("UPSWorldWideExpressPlusBox25kg")
  USPSAirmailLetter = ShippingServiceCodeType.new("USPSAirmailLetter")
  USPSAirmailParcel = ShippingServiceCodeType.new("USPSAirmailParcel")
  USPSEconomyLetter = ShippingServiceCodeType.new("USPSEconomyLetter")
  USPSEconomyParcel = ShippingServiceCodeType.new("USPSEconomyParcel")
  USPSExpressFlatRateEnvelope = ShippingServiceCodeType.new("USPSExpressFlatRateEnvelope")
  USPSExpressMail = ShippingServiceCodeType.new("USPSExpressMail")
  USPSFirstClass = ShippingServiceCodeType.new("USPSFirstClass")
  USPSGlobalExpress = ShippingServiceCodeType.new("USPSGlobalExpress")
  USPSGlobalPriority = ShippingServiceCodeType.new("USPSGlobalPriority")
  USPSGlobalPriorityLargeEnvelope = ShippingServiceCodeType.new("USPSGlobalPriorityLargeEnvelope")
  USPSGlobalPrioritySmallEnvelope = ShippingServiceCodeType.new("USPSGlobalPrioritySmallEnvelope")
  USPSGround = ShippingServiceCodeType.new("USPSGround")
  USPSMedia = ShippingServiceCodeType.new("USPSMedia")
  USPSParcel = ShippingServiceCodeType.new("USPSParcel")
  USPSPriority = ShippingServiceCodeType.new("USPSPriority")
  USPSPriorityFlatRateBox = ShippingServiceCodeType.new("USPSPriorityFlatRateBox")
  USPSPriorityFlatRateEnvelope = ShippingServiceCodeType.new("USPSPriorityFlatRateEnvelope")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermsCodeType
class ShippingTermsCodeType < ::String
  @@schema_type = "ShippingTermsCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  BuyerPays = ShippingTermsCodeType.new("BuyerPays")
  CustomCode = ShippingTermsCodeType.new("CustomCode")
  SellerPays = ShippingTermsCodeType.new("SellerPays")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTypeCodeType
class ShippingTypeCodeType < ::String
  @@schema_type = "ShippingTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Calculated = ShippingTypeCodeType.new("Calculated")
  CalculatedDomesticFlatInternational = ShippingTypeCodeType.new("CalculatedDomesticFlatInternational")
  CustomCode = ShippingTypeCodeType.new("CustomCode")
  Flat = ShippingTypeCodeType.new("Flat")
  FlatDomesticCalculatedInternational = ShippingTypeCodeType.new("FlatDomesticCalculatedInternational")
  Free = ShippingTypeCodeType.new("Free")
  Freight = ShippingTypeCodeType.new("Freight")
  NotSpecified = ShippingTypeCodeType.new("NotSpecified")
end

# {urn:ebay:apis:eBLBaseComponents}SiteCodeType
class SiteCodeType < ::String
  @@schema_type = "SiteCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Australia = SiteCodeType.new("Australia")
  Austria = SiteCodeType.new("Austria")
  Belgium_Dutch = SiteCodeType.new("Belgium_Dutch")
  Belgium_French = SiteCodeType.new("Belgium_French")
  Canada = SiteCodeType.new("Canada")
  China = SiteCodeType.new("China")
  CustomCode = SiteCodeType.new("CustomCode")
  EBayMotors = SiteCodeType.new("eBayMotors")
  France = SiteCodeType.new("France")
  Germany = SiteCodeType.new("Germany")
  HongKong = SiteCodeType.new("HongKong")
  India = SiteCodeType.new("India")
  Ireland = SiteCodeType.new("Ireland")
  Italy = SiteCodeType.new("Italy")
  Malaysia = SiteCodeType.new("Malaysia")
  Netherlands = SiteCodeType.new("Netherlands")
  Philippines = SiteCodeType.new("Philippines")
  Poland = SiteCodeType.new("Poland")
  Singapore = SiteCodeType.new("Singapore")
  Spain = SiteCodeType.new("Spain")
  Sweden = SiteCodeType.new("Sweden")
  Switzerland = SiteCodeType.new("Switzerland")
  Taiwan = SiteCodeType.new("Taiwan")
  UK = SiteCodeType.new("UK")
  US = SiteCodeType.new("US")
end

# {urn:ebay:apis:eBLBaseComponents}SiteIDFilterCodeType
class SiteIDFilterCodeType < ::String
  @@schema_type = "SiteIDFilterCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AvailableInCountryImplied = SiteIDFilterCodeType.new("AvailableInCountryImplied")
  BelgiumListing = SiteIDFilterCodeType.new("BelgiumListing")
  CustomCode = SiteIDFilterCodeType.new("CustomCode")
  ListedInCurrencyImplied = SiteIDFilterCodeType.new("ListedInCurrencyImplied")
  LocatedInCountryImplied = SiteIDFilterCodeType.new("LocatedInCountryImplied")
  SiteImplied = SiteIDFilterCodeType.new("SiteImplied")
end

# {urn:ebay:apis:eBLBaseComponents}SkypeContactOptionCodeType
class SkypeContactOptionCodeType < ::String
  @@schema_type = "SkypeContactOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Chat = SkypeContactOptionCodeType.new("Chat")
  CustomCode = SkypeContactOptionCodeType.new("CustomCode")
  Voice = SkypeContactOptionCodeType.new("Voice")
end

# {urn:ebay:apis:eBLBaseComponents}SkypeOptionCodeType
class SkypeOptionCodeType < ::String
  @@schema_type = "SkypeOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  None = SkypeOptionCodeType.new("None")
  Voice = SkypeOptionCodeType.new("Voice")
end

# {urn:ebay:apis:eBLBaseComponents}SortOrderCodeType
class SortOrderCodeType < ::String
  @@schema_type = "SortOrderCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Ascending = SortOrderCodeType.new("Ascending")
  CustomCode = SortOrderCodeType.new("CustomCode")
  Descending = SortOrderCodeType.new("Descending")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCategoryUpdateActionCodeType
class StoreCategoryUpdateActionCodeType < ::String
  @@schema_type = "StoreCategoryUpdateActionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Add = StoreCategoryUpdateActionCodeType.new("Add")
  CustomCode = StoreCategoryUpdateActionCodeType.new("CustomCode")
  Delete = StoreCategoryUpdateActionCodeType.new("Delete")
  Move = StoreCategoryUpdateActionCodeType.new("Move")
  Rename = StoreCategoryUpdateActionCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomHeaderLayoutCodeType
class StoreCustomHeaderLayoutCodeType < ::String
  @@schema_type = "StoreCustomHeaderLayoutCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreCustomHeaderLayoutCodeType.new("CustomCode")
  CustomHeaderShown = StoreCustomHeaderLayoutCodeType.new("CustomHeaderShown")
  NoHeader = StoreCustomHeaderLayoutCodeType.new("NoHeader")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderDisplayCodeType
class StoreCustomListingHeaderDisplayCodeType < ::String
  @@schema_type = "StoreCustomListingHeaderDisplayCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreCustomListingHeaderDisplayCodeType.new("CustomCode")
  Full = StoreCustomListingHeaderDisplayCodeType.new("Full")
  FullAndLeftNavigationBar = StoreCustomListingHeaderDisplayCodeType.new("FullAndLeftNavigationBar")
  None = StoreCustomListingHeaderDisplayCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkCodeType
class StoreCustomListingHeaderLinkCodeType < ::String
  @@schema_type = "StoreCustomListingHeaderLinkCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AboutMePage = StoreCustomListingHeaderLinkCodeType.new("AboutMePage")
  CustomCategory = StoreCustomListingHeaderLinkCodeType.new("CustomCategory")
  CustomCode = StoreCustomListingHeaderLinkCodeType.new("CustomCode")
  CustomPage = StoreCustomListingHeaderLinkCodeType.new("CustomPage")
  None = StoreCustomListingHeaderLinkCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageStatusCodeType
class StoreCustomPageStatusCodeType < ::String
  @@schema_type = "StoreCustomPageStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Active = StoreCustomPageStatusCodeType.new("Active")
  CustomCode = StoreCustomPageStatusCodeType.new("CustomCode")
  Delete = StoreCustomPageStatusCodeType.new("Delete")
  Inactive = StoreCustomPageStatusCodeType.new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontFaceCodeType
class StoreFontFaceCodeType < ::String
  @@schema_type = "StoreFontFaceCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Arial = StoreFontFaceCodeType.new("Arial")
  Courier = StoreFontFaceCodeType.new("Courier")
  CustomCode = StoreFontFaceCodeType.new("CustomCode")
  Times = StoreFontFaceCodeType.new("Times")
  Verdana = StoreFontFaceCodeType.new("Verdana")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontSizeCodeType
class StoreFontSizeCodeType < ::String
  @@schema_type = "StoreFontSizeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreFontSizeCodeType.new("CustomCode")
  L = StoreFontSizeCodeType.new("L")
  M = StoreFontSizeCodeType.new("M")
  S = StoreFontSizeCodeType.new("S")
  XL = StoreFontSizeCodeType.new("XL")
  XS = StoreFontSizeCodeType.new("XS")
  XXL = StoreFontSizeCodeType.new("XXL")
  XXS = StoreFontSizeCodeType.new("XXS")
end

# {urn:ebay:apis:eBLBaseComponents}StoreHeaderStyleCodeType
class StoreHeaderStyleCodeType < ::String
  @@schema_type = "StoreHeaderStyleCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreHeaderStyleCodeType.new("CustomCode")
  Full = StoreHeaderStyleCodeType.new("Full")
  Minimized = StoreHeaderStyleCodeType.new("Minimized")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListLayoutCodeType
class StoreItemListLayoutCodeType < ::String
  @@schema_type = "StoreItemListLayoutCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreItemListLayoutCodeType.new("CustomCode")
  GalleryView = StoreItemListLayoutCodeType.new("GalleryView")
  ListView = StoreItemListLayoutCodeType.new("ListView")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListSortOrderCodeType
class StoreItemListSortOrderCodeType < ::String
  @@schema_type = "StoreItemListSortOrderCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = StoreItemListSortOrderCodeType.new("CustomCode")
  EndingFirst = StoreItemListSortOrderCodeType.new("EndingFirst")
  HighestPriced = StoreItemListSortOrderCodeType.new("HighestPriced")
  LowestPriced = StoreItemListSortOrderCodeType.new("LowestPriced")
  NewlyListed = StoreItemListSortOrderCodeType.new("NewlyListed")
end

# {urn:ebay:apis:eBLBaseComponents}StoreSearchCodeType
class StoreSearchCodeType < ::String
  @@schema_type = "StoreSearchCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AllItemsInTheStore = StoreSearchCodeType.new("AllItemsInTheStore")
  AuctionItemsInTheStore = StoreSearchCodeType.new("AuctionItemsInTheStore")
  BuyItNowItemsInAllStores = StoreSearchCodeType.new("BuyItNowItemsInAllStores")
  BuyItNowItemsInTheStore = StoreSearchCodeType.new("BuyItNowItemsInTheStore")
  CustomCode = StoreSearchCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionLevelCodeType
class StoreSubscriptionLevelCodeType < ::String
  @@schema_type = "StoreSubscriptionLevelCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Anchor = StoreSubscriptionLevelCodeType.new("Anchor")
  Basic = StoreSubscriptionLevelCodeType.new("Basic")
  Close = StoreSubscriptionLevelCodeType.new("Close")
  CustomCode = StoreSubscriptionLevelCodeType.new("CustomCode")
  Featured = StoreSubscriptionLevelCodeType.new("Featured")
end

# {urn:ebay:apis:eBLBaseComponents}StringMatchCodeType
class StringMatchCodeType < ::String
  @@schema_type = "StringMatchCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Contains = StringMatchCodeType.new("Contains")
  CustomCode = StringMatchCodeType.new("CustomCode")
  StartsWith = StringMatchCodeType.new("StartsWith")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryFrequencyCodeType
class SummaryFrequencyCodeType < ::String
  @@schema_type = "SummaryFrequencyCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Every31Days = SummaryFrequencyCodeType.new("Every31Days")
  Every60Days = SummaryFrequencyCodeType.new("Every60Days")
  EveryFriday = SummaryFrequencyCodeType.new("EveryFriday")
  EveryMonday = SummaryFrequencyCodeType.new("EveryMonday")
  EverySaturday = SummaryFrequencyCodeType.new("EverySaturday")
  EverySunday = SummaryFrequencyCodeType.new("EverySunday")
  EveryThursday = SummaryFrequencyCodeType.new("EveryThursday")
  EveryTuesday = SummaryFrequencyCodeType.new("EveryTuesday")
  EveryWednesday = SummaryFrequencyCodeType.new("EveryWednesday")
  MonthlyOn10th = SummaryFrequencyCodeType.new("MonthlyOn10th")
  MonthlyOn11th = SummaryFrequencyCodeType.new("MonthlyOn11th")
  MonthlyOn12th = SummaryFrequencyCodeType.new("MonthlyOn12th")
  MonthlyOn13th = SummaryFrequencyCodeType.new("MonthlyOn13th")
  MonthlyOn14th = SummaryFrequencyCodeType.new("MonthlyOn14th")
  MonthlyOn15th = SummaryFrequencyCodeType.new("MonthlyOn15th")
  MonthlyOn16th = SummaryFrequencyCodeType.new("MonthlyOn16th")
  MonthlyOn17th = SummaryFrequencyCodeType.new("MonthlyOn17th")
  MonthlyOn18th = SummaryFrequencyCodeType.new("MonthlyOn18th")
  MonthlyOn19th = SummaryFrequencyCodeType.new("MonthlyOn19th")
  MonthlyOn1st = SummaryFrequencyCodeType.new("MonthlyOn1st")
  MonthlyOn20th = SummaryFrequencyCodeType.new("MonthlyOn20th")
  MonthlyOn21st = SummaryFrequencyCodeType.new("MonthlyOn21st")
  MonthlyOn22nd = SummaryFrequencyCodeType.new("MonthlyOn22nd")
  MonthlyOn23rd = SummaryFrequencyCodeType.new("MonthlyOn23rd")
  MonthlyOn24th = SummaryFrequencyCodeType.new("MonthlyOn24th")
  MonthlyOn25th = SummaryFrequencyCodeType.new("MonthlyOn25th")
  MonthlyOn26th = SummaryFrequencyCodeType.new("MonthlyOn26th")
  MonthlyOn27th = SummaryFrequencyCodeType.new("MonthlyOn27th")
  MonthlyOn28th = SummaryFrequencyCodeType.new("MonthlyOn28th")
  MonthlyOn29th = SummaryFrequencyCodeType.new("MonthlyOn29th")
  MonthlyOn2nd = SummaryFrequencyCodeType.new("MonthlyOn2nd")
  MonthlyOn30th = SummaryFrequencyCodeType.new("MonthlyOn30th")
  MonthlyOn31st = SummaryFrequencyCodeType.new("MonthlyOn31st")
  MonthlyOn3rd = SummaryFrequencyCodeType.new("MonthlyOn3rd")
  MonthlyOn4th = SummaryFrequencyCodeType.new("MonthlyOn4th")
  MonthlyOn5th = SummaryFrequencyCodeType.new("MonthlyOn5th")
  MonthlyOn6th = SummaryFrequencyCodeType.new("MonthlyOn6th")
  MonthlyOn7th = SummaryFrequencyCodeType.new("MonthlyOn7th")
  MonthlyOn8th = SummaryFrequencyCodeType.new("MonthlyOn8th")
  MonthlyOn9th = SummaryFrequencyCodeType.new("MonthlyOn9th")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryWindowPeriodCodeType
class SummaryWindowPeriodCodeType < ::String
  @@schema_type = "SummaryWindowPeriodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CurrentMonth = SummaryWindowPeriodCodeType.new("CurrentMonth")
  CurrentWeek = SummaryWindowPeriodCodeType.new("CurrentWeek")
  Last24Hours = SummaryWindowPeriodCodeType.new("Last24Hours")
  Last31Days = SummaryWindowPeriodCodeType.new("Last31Days")
  Last60Days = SummaryWindowPeriodCodeType.new("Last60Days")
  Last7Days = SummaryWindowPeriodCodeType.new("Last7Days")
  LastMonth = SummaryWindowPeriodCodeType.new("LastMonth")
  LastWeek = SummaryWindowPeriodCodeType.new("LastWeek")
end

# {urn:ebay:apis:eBLBaseComponents}TaskStatusCodeType
class TaskStatusCodeType < ::String
  @@schema_type = "TaskStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Complete = TaskStatusCodeType.new("Complete")
  CustomCode = TaskStatusCodeType.new("CustomCode")
  Failed = TaskStatusCodeType.new("Failed")
  InProgress = TaskStatusCodeType.new("InProgress")
  Pending = TaskStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}TokenReturnMethodCodeType
class TokenReturnMethodCodeType < ::String
  @@schema_type = "TokenReturnMethodCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = TokenReturnMethodCodeType.new("CustomCode")
  FetchToken = TokenReturnMethodCodeType.new("FetchToken")
  Redirect = TokenReturnMethodCodeType.new("Redirect")
end

# {urn:ebay:apis:eBLBaseComponents}TradingRoleCodeType
class TradingRoleCodeType < ::String
  @@schema_type = "TradingRoleCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Buyer = TradingRoleCodeType.new("Buyer")
  CustomCode = TradingRoleCodeType.new("CustomCode")
  Seller = TradingRoleCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}TransactionPlatformType
class TransactionPlatformType < ::String
  @@schema_type = "TransactionPlatformType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  EBay = TransactionPlatformType.new("eBay")
  Express = TransactionPlatformType.new("Express")
end

# {urn:ebay:apis:eBLBaseComponents}UPSRateOptionCodeType
class UPSRateOptionCodeType < ::String
  @@schema_type = "UPSRateOptionCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = UPSRateOptionCodeType.new("CustomCode")
  UPSDailyRates = UPSRateOptionCodeType.new("UPSDailyRates")
  UPSOnDemandRates = UPSRateOptionCodeType.new("UPSOnDemandRates")
end

# {urn:ebay:apis:eBLBaseComponents}URLTypeCodeType
class URLTypeCodeType < ::String
  @@schema_type = "URLTypeCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = URLTypeCodeType.new("CustomCode")
  EBayStoreURL = URLTypeCodeType.new("eBayStoreURL")
  LargeLogoURL = URLTypeCodeType.new("LargeLogoURL")
  MediumLogoURL = URLTypeCodeType.new("MediumLogoURL")
  MyeBayBiddingURL = URLTypeCodeType.new("MyeBayBiddingURL")
  MyeBayNotWonURL = URLTypeCodeType.new("MyeBayNotWonURL")
  MyeBayURL = URLTypeCodeType.new("MyeBayURL")
  MyeBayWatchingURL = URLTypeCodeType.new("MyeBayWatchingURL")
  MyeBayWonURL = URLTypeCodeType.new("MyeBayWonURL")
  SmallLogoURL = URLTypeCodeType.new("SmallLogoURL")
  ViewItemURL = URLTypeCodeType.new("ViewItemURL")
  ViewUserURL = URLTypeCodeType.new("ViewUserURL")
end

# {urn:ebay:apis:eBLBaseComponents}UnitCodeType
class UnitCodeType < ::String
  @@schema_type = "UnitCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  Cm = UnitCodeType.new("cm")
  CustomCode = UnitCodeType.new("CustomCode")
  Ft = UnitCodeType.new("ft")
  Inches = UnitCodeType.new("inches")
  Kg = UnitCodeType.new("kg")
  Lbs = UnitCodeType.new("lbs")
  Oz = UnitCodeType.new("oz")
end

# {urn:ebay:apis:eBLBaseComponents}UserStatusCodeType
class UserStatusCodeType < ::String
  @@schema_type = "UserStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  AccountOnHold = UserStatusCodeType.new("AccountOnHold")
  Confirmed = UserStatusCodeType.new("Confirmed")
  CreditCardVerify = UserStatusCodeType.new("CreditCardVerify")
  CreditCardVerifyHalfOptIn = UserStatusCodeType.new("CreditCardVerifyHalfOptIn")
  CreditCardVerifyPassport = UserStatusCodeType.new("CreditCardVerifyPassport")
  CustomCode = UserStatusCodeType.new("CustomCode")
  Deleted = UserStatusCodeType.new("Deleted")
  Ghost = UserStatusCodeType.new("Ghost")
  InMaintenance = UserStatusCodeType.new("InMaintenance")
  Merged = UserStatusCodeType.new("Merged")
  RegistrationCodeMailOut = UserStatusCodeType.new("RegistrationCodeMailOut")
  Suspended = UserStatusCodeType.new("Suspended")
  TermPending = UserStatusCodeType.new("TermPending")
  Unconfirmed = UserStatusCodeType.new("Unconfirmed")
  UnconfirmedExpress = UserStatusCodeType.new("UnconfirmedExpress")
  UnconfirmedHalfOptIn = UserStatusCodeType.new("UnconfirmedHalfOptIn")
  UnconfirmedPassport = UserStatusCodeType.new("UnconfirmedPassport")
  Unknown = UserStatusCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}VATStatusCodeType
class VATStatusCodeType < ::String
  @@schema_type = "VATStatusCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  CustomCode = VATStatusCodeType.new("CustomCode")
  NoVATTax = VATStatusCodeType.new("NoVATTax")
  VATExempt = VATStatusCodeType.new("VATExempt")
  VATTax = VATStatusCodeType.new("VATTax")
end

# {urn:ebay:apis:eBLBaseComponents}WirelessCarrierIDCodeType
class WirelessCarrierIDCodeType < ::String
  @@schema_type = "WirelessCarrierIDCodeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"

  ATT = WirelessCarrierIDCodeType.new("ATT")
  Alltel = WirelessCarrierIDCodeType.new("Alltel")
  Amena = WirelessCarrierIDCodeType.new("Amena")
  CincinnatiBell = WirelessCarrierIDCodeType.new("CincinnatiBell")
  Cingular = WirelessCarrierIDCodeType.new("Cingular")
  CustomCode = WirelessCarrierIDCodeType.new("CustomCode")
  Dobson = WirelessCarrierIDCodeType.new("Dobson")
  Leap = WirelessCarrierIDCodeType.new("Leap")
  Movistar = WirelessCarrierIDCodeType.new("Movistar")
  Nextel = WirelessCarrierIDCodeType.new("Nextel")
  Sprint = WirelessCarrierIDCodeType.new("Sprint")
  TMobile = WirelessCarrierIDCodeType.new("TMobile")
  USCellular = WirelessCarrierIDCodeType.new("USCellular")
  Verizon = WirelessCarrierIDCodeType.new("Verizon")
  Vodafone = WirelessCarrierIDCodeType.new("Vodafone")
end
