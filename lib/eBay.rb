require 'xsd/qname'

# {urn:ebay:apis:eBLBaseComponents}AddDisputeRequestType
class AddDisputeRequestType
  @@schema_type = "AddDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeExplanation", ["DisputeExplanationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeExplanation")]],
    ["disputeReason", ["DisputeReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeReason")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :disputeExplanation
  attr_accessor :disputeReason
  attr_accessor :itemID
  attr_accessor :transactionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, disputeExplanation = nil, disputeReason = nil, itemID = nil, transactionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @disputeExplanation = disputeExplanation
    @disputeReason = disputeReason
    @itemID = itemID
    @transactionID = transactionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseType
class AddDisputeResponseType
  @@schema_type = "AddDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, disputeID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseRequestType
class AddDisputeResponseRequestType
  @@schema_type = "AddDisputeResponseRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["messageText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageText")]],
    ["disputeActivity", ["DisputeActivityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeActivity")]],
    ["shippingCarrierUsed", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCarrierUsed")]],
    ["shipmentTrackNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackNumber")]],
    ["shippingTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTime")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :messageText
  attr_accessor :disputeActivity
  attr_accessor :shippingCarrierUsed
  attr_accessor :shipmentTrackNumber
  attr_accessor :shippingTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, disputeID = nil, messageText = nil, disputeActivity = nil, shippingCarrierUsed = nil, shipmentTrackNumber = nil, shippingTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @disputeID = disputeID
    @messageText = messageText
    @disputeActivity = disputeActivity
    @shippingCarrierUsed = shippingCarrierUsed
    @shipmentTrackNumber = shipmentTrackNumber
    @shippingTime = shippingTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseResponseType
class AddDisputeResponseResponseType
  @@schema_type = "AddDisputeResponseResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemRequestType
class AddItemRequestType
  @@schema_type = "AddItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, item = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @item = item
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemResponseType
class AddItemResponseType
  @@schema_type = "AddItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemRequestType
class AddLiveAuctionItemRequestType
  @@schema_type = "AddLiveAuctionItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemResponseType
class AddLiveAuctionItemResponseType
  @@schema_type = "AddLiveAuctionItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRequestType
class AddMemberMessageRequestType
  @@schema_type = "AddMemberMessageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memberMessage", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageResponseType
class AddMemberMessageResponseType
  @@schema_type = "AddMemberMessageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderRequestType
class AddOrderRequestType
  @@schema_type = "AddOrderRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["order", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :order

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, order = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @order = order
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderResponseType
class AddOrderResponseType
  @@schema_type = "AddOrderResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedTime")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :orderID
  attr_accessor :createdTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, orderID = nil, createdTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @orderID = orderID
    @createdTime = createdTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemRequestType
class AddSecondChanceItemRequestType
  @@schema_type = "AddSecondChanceItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["recipientBidderUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientBidderUserID")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["copyEmailToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmailToSeller")]],
    ["duration", ["SecondChanceOfferDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :copyEmailToSeller
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :site

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, recipientBidderUserID = nil, buyItNowPrice = nil, copyEmailToSeller = nil, duration = nil, itemID = nil, site = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @copyEmailToSeller = copyEmailToSeller
    @duration = duration
    @itemID = itemID
    @site = site
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemResponseType
class AddSecondChanceItemResponseType
  @@schema_type = "AddSecondChanceItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :fees
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, fees = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @fees = fees
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionRequestType
class AddToItemDescriptionRequestType
  @@schema_type = "AddToItemDescriptionRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :description

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, description = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @description = description
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionResponseType
class AddToItemDescriptionResponseType
  @@schema_type = "AddToItemDescriptionResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListRequestType
class AddToWatchListRequestType
  @@schema_type = "AddToWatchListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListResponseType
class AddToWatchListResponseType
  @@schema_type = "AddToWatchListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchListCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListCount")]],
    ["watchListMaximum", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListMaximum")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleRequestType
class CompleteSaleRequestType
  @@schema_type = "CompleteSaleRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["feedbackInfo", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackInfo")]],
    ["shipped", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Shipped")]],
    ["paid", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Paid")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :feedbackInfo
  attr_accessor :shipped
  attr_accessor :paid

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, transactionID = nil, feedbackInfo = nil, shipped = nil, paid = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @feedbackInfo = feedbackInfo
    @shipped = shipped
    @paid = paid
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleResponseType
class CompleteSaleResponseType
  @@schema_type = "CompleteSaleResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesRequestType
class DeleteMyMessagesRequestType
  @@schema_type = "DeleteMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, alertIDs = nil, messageIDs = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesResponseType
class DeleteMyMessagesResponseType
  @@schema_type = "DeleteMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemRequestType
class EndItemRequestType
  @@schema_type = "EndItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["endingReason", ["EndReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndingReason")]],
    ["bulkSIFEndItemFlow", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BulkSIFEndItemFlow")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :bulkSIFEndItemFlow
  attr_accessor :sellerInventoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, endingReason = nil, bulkSIFEndItemFlow = nil, sellerInventoryID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @endingReason = endingReason
    @bulkSIFEndItemFlow = bulkSIFEndItemFlow
    @sellerInventoryID = sellerInventoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemResponseType
class EndItemResponseType
  @@schema_type = "EndItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenRequestType
class FetchTokenRequestType
  @@schema_type = "FetchTokenRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["secretID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecretID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :secretID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, secretID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @secretID = secretID
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenResponseType
class FetchTokenResponseType
  @@schema_type = "FetchTokenResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["hardExpirationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationTime")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, eBayAuthToken = nil, hardExpirationTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @eBayAuthToken = eBayAuthToken
    @hardExpirationTime = hardExpirationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountRequestType
class GetAccountRequestType
  @@schema_type = "GetAccountRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["accountHistorySelection", ["AccountHistorySelectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountHistorySelection")]],
    ["invoiceDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceDate")]],
    ["beginDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BeginDate")]],
    ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndDate")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["excludeBalance", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeBalance")]],
    ["excludeSummary", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeSummary")]],
    ["accountEntrySortType", ["AccountEntrySortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntrySortType")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :accountHistorySelection
  attr_accessor :invoiceDate
  attr_accessor :beginDate
  attr_accessor :endDate
  attr_accessor :pagination
  attr_accessor :excludeBalance
  attr_accessor :excludeSummary
  attr_accessor :accountEntrySortType
  attr_accessor :currency

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, accountHistorySelection = nil, invoiceDate = nil, beginDate = nil, endDate = nil, pagination = nil, excludeBalance = nil, excludeSummary = nil, accountEntrySortType = nil, currency = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @accountHistorySelection = accountHistorySelection
    @invoiceDate = invoiceDate
    @beginDate = beginDate
    @endDate = endDate
    @pagination = pagination
    @excludeBalance = excludeBalance
    @excludeSummary = excludeSummary
    @accountEntrySortType = accountEntrySortType
    @currency = currency
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountResponseType
class GetAccountResponseType
  @@schema_type = "GetAccountResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["accountID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountID")]],
    ["accountSummary", ["AccountSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountSummary")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["accountEntries", ["AccountEntriesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntries")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreEntries", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreEntries")]],
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :accountID
  attr_accessor :accountSummary
  attr_accessor :currency
  attr_accessor :accountEntries
  attr_accessor :paginationResult
  attr_accessor :hasMoreEntries
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, accountID = nil, accountSummary = nil, currency = nil, accountEntries = nil, paginationResult = nil, hasMoreEntries = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @accountID = accountID
    @accountSummary = accountSummary
    @currency = currency
    @accountEntries = accountEntries
    @paginationResult = paginationResult
    @hasMoreEntries = hasMoreEntries
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsRequestType
class GetAdFormatLeadsRequestType
  @@schema_type = "GetAdFormatLeadsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsResponseType
class GetAdFormatLeadsResponseType
  @@schema_type = "GetAdFormatLeadsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["adFormatLead", ["AdFormatLeadType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatLead")]],
    ["adFormatLeadCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdFormatLeadCount")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :adFormatLead
  attr_accessor :adFormatLeadCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, adFormatLead = [], adFormatLeadCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @adFormatLead = adFormatLead
    @adFormatLeadCount = adFormatLeadCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersRequestType
class GetAllBiddersRequestType
  @@schema_type = "GetAllBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["callMode", ["GetAllBiddersModeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallMode")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :callMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, callMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @callMode = callMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersResponseType
class GetAllBiddersResponseType
  @@schema_type = "GetAllBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidArray", ["OfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidArray")]],
    ["highBidder", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighBidder")]],
    ["highestBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighestBid")]],
    ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :highBidder
  attr_accessor :highestBid
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, bidArray = nil, highBidder = nil, highestBid = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidArray = bidArray
    @highBidder = highBidder
    @highestBid = highestBid
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesRequestType
class GetApiAccessRulesRequestType
  @@schema_type = "GetApiAccessRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesResponseType
class GetApiAccessRulesResponseType
  @@schema_type = "GetApiAccessRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["apiAccessRule", ["ApiAccessRuleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApiAccessRule")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :apiAccessRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, apiAccessRule = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @apiAccessRule = apiAccessRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSRequestType
class GetAttributesCSRequestType
  @@schema_type = "GetAttributesCSRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeSetID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["includeCategoryMappingDetails", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCategoryMappingDetails")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID
  attr_accessor :includeCategoryMappingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, attributeSystemVersion = nil, attributeSetID = [], includeCategoryMappingDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
    @includeCategoryMappingDetails = includeCategoryMappingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSResponseType
class GetAttributesCSResponseType
  @@schema_type = "GetAttributesCSResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeData")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, attributeData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeData = attributeData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLRequestType
class GetAttributesXSLRequestType
  @@schema_type = "GetAttributesXSLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLResponseType
class GetAttributesXSLResponseType
  @@schema_type = "GetAttributesXSLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["xSLFile", ["XSLFileType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "XSLFile")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersRequestType
class GetBestOffersRequestType
  @@schema_type = "GetBestOffersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["bestOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["bestOfferStatus", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferStatus")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :bestOfferStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, bestOfferID = nil, bestOfferStatus = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @bestOfferStatus = bestOfferStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersResponseType
class GetBestOffersResponseType
  @@schema_type = "GetBestOffersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bestOfferArray", ["BestOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferArray")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bestOfferArray
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, bestOfferArray = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bestOfferArray = bestOfferArray
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListRequestType
class GetBidderListRequestType
  @@schema_type = "GetBidderListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["activeItemsOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveItemsOnly")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :activeItemsOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, activeItemsOnly = nil, endTimeFrom = nil, endTimeTo = nil, userID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @activeItemsOnly = activeItemsOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListResponseType
class GetBidderListResponseType
  @@schema_type = "GetBidderListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidder", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Bidder")]],
    ["bidItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidItemArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidder
  attr_accessor :bidItemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, bidder = nil, bidItemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidder = bidder
    @bidItemArray = bidItemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesRequestType
class GetCategoriesRequestType
  @@schema_type = "GetCategoriesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categorySiteID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategorySiteID")]],
    ["categoryParent", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParent")]],
    ["levelLimit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LevelLimit")]],
    ["viewAllNodes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewAllNodes")]],
    ["reservePriceInclusive", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePriceInclusive")]],
    ["minimumReservePrice", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categorySiteID
  attr_accessor :categoryParent
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes
  attr_accessor :reservePriceInclusive
  attr_accessor :minimumReservePrice

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categorySiteID = nil, categoryParent = [], levelLimit = nil, viewAllNodes = nil, reservePriceInclusive = nil, minimumReservePrice = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categorySiteID = categorySiteID
    @categoryParent = categoryParent
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
    @reservePriceInclusive = reservePriceInclusive
    @minimumReservePrice = minimumReservePrice
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesResponseType
class GetCategoriesResponseType
  @@schema_type = "GetCategoriesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["categoryCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryCount")]],
    ["updateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpdateTime")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]],
    ["reservePriceInclusive", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePriceInclusive")]],
    ["minimumReservePrice", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumReservePrice")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["reduceReserveInclusive", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReduceReserveInclusive")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryArray
  attr_accessor :categoryCount
  attr_accessor :updateTime
  attr_accessor :categoryVersion
  attr_accessor :reservePriceInclusive
  attr_accessor :minimumReservePrice
  attr_accessor :currency
  attr_accessor :reduceReserveInclusive

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryArray = nil, categoryCount = nil, updateTime = nil, categoryVersion = nil, reservePriceInclusive = nil, minimumReservePrice = nil, currency = nil, reduceReserveInclusive = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryArray = categoryArray
    @categoryCount = categoryCount
    @updateTime = updateTime
    @categoryVersion = categoryVersion
    @reservePriceInclusive = reservePriceInclusive
    @minimumReservePrice = minimumReservePrice
    @currency = currency
    @reduceReserveInclusive = reduceReserveInclusive
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSRequestType
class GetCategory2CSRequestType
  @@schema_type = "GetCategory2CSRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :attributeSystemVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = nil, attributeSystemVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @attributeSystemVersion = attributeSystemVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSResponseType
class GetCategory2CSResponseType
  @@schema_type = "GetCategory2CSResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["mappedCategoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MappedCategoryArray")]],
    ["unmappedCategoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnmappedCategoryArray")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["siteWideCharacteristicSets", ["SiteWideCharacteristicsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteWideCharacteristicSets")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :mappedCategoryArray
  attr_accessor :unmappedCategoryArray
  attr_accessor :attributeSystemVersion
  attr_accessor :siteWideCharacteristicSets

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, mappedCategoryArray = nil, unmappedCategoryArray = nil, attributeSystemVersion = nil, siteWideCharacteristicSets = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @mappedCategoryArray = mappedCategoryArray
    @unmappedCategoryArray = unmappedCategoryArray
    @attributeSystemVersion = attributeSystemVersion
    @siteWideCharacteristicSets = siteWideCharacteristicSets
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2FinanceOfferRequestType
class GetCategory2FinanceOfferRequestType
  @@schema_type = "GetCategory2FinanceOfferRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = nil, lastModifiedDate = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedDate = lastModifiedDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2FinanceOfferResponseType
class GetCategory2FinanceOfferResponseType
  @@schema_type = "GetCategory2FinanceOfferResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["categoryFinanceOfferArray", ["CategoryFinanceOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryFinanceOfferArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :count
  attr_accessor :categoryFinanceOfferArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, count = nil, categoryFinanceOfferArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @count = count
    @categoryFinanceOfferArray = categoryFinanceOfferArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesRequestType
class GetCategoryFeaturesRequestType
  @@schema_type = "GetCategoryFeaturesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["levelLimit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LevelLimit")]],
    ["viewAllNodes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewAllNodes")]],
    ["featureID", ["FeatureIDCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeatureID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes
  attr_accessor :featureID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = nil, levelLimit = nil, viewAllNodes = nil, featureID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
    @featureID = featureID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesResponseType
class GetCategoryFeaturesResponseType
  @@schema_type = "GetCategoryFeaturesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]],
    ["updateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpdateTime")]],
    ["category", ["CategoryFeatureType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["siteDefaults", ["SiteDefaultsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteDefaults")]],
    ["featureDefinitions", ["FeatureDefinitionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeatureDefinitions")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion
  attr_accessor :updateTime
  attr_accessor :category
  attr_accessor :siteDefaults
  attr_accessor :featureDefinitions

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryVersion = nil, updateTime = nil, category = [], siteDefaults = nil, featureDefinitions = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
    @updateTime = updateTime
    @category = category
    @siteDefaults = siteDefaults
    @featureDefinitions = featureDefinitions
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsRequestType
class GetCategoryListingsRequestType
  @@schema_type = "GetCategoryListingsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["itemTypeFilter", ["ItemTypeFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTypeFilter")]],
    ["searchType", ["CategoryListingsSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["orderBy", ["CategoryListingsOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderBy")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["searchLocation", ["SearchLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocation")]],
    ["proximitySearch", ["ProximitySearchType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearch")]],
    ["paymentMethod", ["PaymentMethodSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["includeCondition", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCondition")]],
    ["includeFeedback", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFeedback")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :categoryID
  attr_accessor :currency
  attr_accessor :itemTypeFilter
  attr_accessor :searchType
  attr_accessor :orderBy
  attr_accessor :pagination
  attr_accessor :searchLocation
  attr_accessor :proximitySearch
  attr_accessor :paymentMethod
  attr_accessor :includeCondition
  attr_accessor :includeFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, motorsGermanySearchable = nil, categoryID = nil, currency = nil, itemTypeFilter = nil, searchType = nil, orderBy = nil, pagination = nil, searchLocation = nil, proximitySearch = nil, paymentMethod = nil, includeCondition = nil, includeFeedback = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @categoryID = categoryID
    @currency = currency
    @itemTypeFilter = itemTypeFilter
    @searchType = searchType
    @orderBy = orderBy
    @pagination = pagination
    @searchLocation = searchLocation
    @proximitySearch = proximitySearch
    @paymentMethod = paymentMethod
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsResponseType
class GetCategoryListingsResponseType
  @@schema_type = "GetCategoryListingsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["category", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["subCategories", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubCategories")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["buyingGuideDetails", ["BuyingGuideDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideDetails")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemArray
  attr_accessor :category
  attr_accessor :subCategories
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :buyingGuideDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemArray = nil, category = nil, subCategories = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, buyingGuideDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemArray = itemArray
    @category = category
    @subCategories = subCategories
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @buyingGuideDetails = buyingGuideDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsRequestType
class GetCategoryMappingsRequestType
  @@schema_type = "GetCategoryMappingsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsResponseType
class GetCategoryMappingsResponseType
  @@schema_type = "GetCategoryMappingsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryMapping", ["CategoryMappingType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryMapping")]],
    ["categoryVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryVersion")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :categoryMapping
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, categoryMapping = [], categoryVersion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @categoryMapping = categoryMapping
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesRequestType
class GetCharitiesRequestType
  @@schema_type = "GetCharitiesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["charityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityName")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["charityRegion", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityRegion")]],
    ["charityDomain", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityDomain")]],
    ["includeDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeDescription")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :charityID
  attr_accessor :charityName
  attr_accessor :query
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :includeDescription

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, charityID = nil, charityName = nil, query = nil, charityRegion = nil, charityDomain = nil, includeDescription = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @charityID = charityID
    @charityName = charityName
    @query = query
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @includeDescription = includeDescription
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesResponseType
class GetCharitiesResponseType
  @@schema_type = "GetCharitiesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["charity", ["CharityInfoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Charity")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :charity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, charity = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @charity = charity
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsRequestType
class GetCrossPromotionsRequestType
  @@schema_type = "GetCrossPromotionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["promotionViewMode", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionViewMode")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :promotionMethod
  attr_accessor :promotionViewMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, promotionMethod = nil, promotionViewMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @promotionMethod = promotionMethod
    @promotionViewMode = promotionViewMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsResponseType
class GetCrossPromotionsResponseType
  @@schema_type = "GetCrossPromotionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["crossPromotion", ["CrossPromotionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotion")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :crossPromotion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, crossPromotion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @crossPromotion = crossPromotion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesRequestType
class GetDescriptionTemplatesRequestType
  @@schema_type = "GetDescriptionTemplatesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["lastModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedTime")]],
    ["motorVehicles", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorVehicles")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedTime
  attr_accessor :motorVehicles

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = nil, lastModifiedTime = nil, motorVehicles = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedTime = lastModifiedTime
    @motorVehicles = motorVehicles
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesResponseType
class GetDescriptionTemplatesResponseType
  @@schema_type = "GetDescriptionTemplatesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["descriptionTemplate", ["DescriptionTemplateType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescriptionTemplate")]],
    ["layoutTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LayoutTotal")]],
    ["obsoleteLayoutID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ObsoleteLayoutID")]],
    ["obsoleteThemeID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ObsoleteThemeID")]],
    ["themeGroup", ["ThemeGroupType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeGroup")]],
    ["themeTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeTotal")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :descriptionTemplate
  attr_accessor :layoutTotal
  attr_accessor :obsoleteLayoutID
  attr_accessor :obsoleteThemeID
  attr_accessor :themeGroup
  attr_accessor :themeTotal

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, descriptionTemplate = [], layoutTotal = nil, obsoleteLayoutID = [], obsoleteThemeID = [], themeGroup = [], themeTotal = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @descriptionTemplate = descriptionTemplate
    @layoutTotal = layoutTotal
    @obsoleteLayoutID = obsoleteLayoutID
    @obsoleteThemeID = obsoleteThemeID
    @themeGroup = themeGroup
    @themeTotal = themeTotal
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeRequestType
class GetDisputeRequestType
  @@schema_type = "GetDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, disputeID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeResponseType
class GetDisputeResponseType
  @@schema_type = "GetDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dispute", ["DisputeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Dispute")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dispute

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, dispute = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dispute = dispute
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackRequestType
class GetFeedbackRequestType
  @@schema_type = "GetFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :pagination
  attr_accessor :userID
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, pagination = nil, userID = nil, feedbackID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @pagination = pagination
    @userID = userID
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackResponseType
class GetFeedbackResponseType
  @@schema_type = "GetFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackDetailArray", ["FeedbackDetailArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetailArray")]],
    ["feedbackDetailItemTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetailItemTotal")]],
    ["feedbackSummary", ["FeedbackSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackSummary")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :feedbackDetailArray
  attr_accessor :feedbackDetailItemTotal
  attr_accessor :feedbackSummary
  attr_accessor :feedbackScore

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, feedbackDetailArray = nil, feedbackDetailItemTotal = nil, feedbackSummary = nil, feedbackScore = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @feedbackDetailArray = feedbackDetailArray
    @feedbackDetailItemTotal = feedbackDetailItemTotal
    @feedbackSummary = feedbackSummary
    @feedbackScore = feedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFinanceOffersRequestType
class GetFinanceOffersRequestType
  @@schema_type = "GetFinanceOffersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :financeOfferID
  attr_accessor :lastModifiedDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, financeOfferID = nil, lastModifiedDate = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @financeOfferID = financeOfferID
    @lastModifiedDate = lastModifiedDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFinanceOffersResponseType
class GetFinanceOffersResponseType
  @@schema_type = "GetFinanceOffersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["financeOfferArray", ["FinanceOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :count
  attr_accessor :financeOfferArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, count = nil, financeOfferArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @count = count
    @financeOfferArray = financeOfferArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersRequestType
class GetHighBiddersRequestType
  @@schema_type = "GetHighBiddersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersResponseType
class GetHighBiddersResponseType
  @@schema_type = "GetHighBiddersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    [
      ["bidArray", ["OfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidArray")]],
      ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, bidArray = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidArray = bidArray
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRequestType
class GetItemRequestType
  @@schema_type = "GetItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemResponseType
class GetItemResponseType
  @@schema_type = "GetItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsRequestType
class GetItemRecommendationsRequestType
  @@schema_type = "GetItemRecommendationsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["getRecommendationsRequestContainer", ["GetRecommendationsRequestContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetRecommendationsRequestContainer")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, getRecommendationsRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @getRecommendationsRequestContainer = getRecommendationsRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsResponseType
class GetItemRecommendationsResponseType
  @@schema_type = "GetItemRecommendationsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["getRecommendationsResponseContainer", ["GetRecommendationsResponseContainerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetRecommendationsResponseContainer")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, getRecommendationsResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @getRecommendationsResponseContainer = getRecommendationsResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingRequestType
class GetItemShippingRequestType
  @@schema_type = "GetItemShippingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["quantitySold", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantitySold")]],
    ["destinationPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DestinationPostalCode")]],
    ["destinationCountryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DestinationCountryCode")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :quantitySold
  attr_accessor :destinationPostalCode
  attr_accessor :destinationCountryCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, quantitySold = nil, destinationPostalCode = nil, destinationCountryCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @quantitySold = quantitySold
    @destinationPostalCode = destinationPostalCode
    @destinationCountryCode = destinationCountryCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingResponseType
class GetItemShippingResponseType
  @@schema_type = "GetItemShippingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :shippingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, shippingDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @shippingDetails = shippingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsRequestType
class GetItemTransactionsRequestType
  @@schema_type = "GetItemTransactionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["includeDutchAuctionBid", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeDutchAuctionBid")]],
    ["includeFinalValueFee", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFinalValueFee")]],
    ["includeContainingOrder", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeContainingOrder")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :transactionID
  attr_accessor :pagination
  attr_accessor :includeDutchAuctionBid
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, modTimeFrom = nil, modTimeTo = nil, transactionID = nil, pagination = nil, includeDutchAuctionBid = nil, includeFinalValueFee = nil, includeContainingOrder = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @transactionID = transactionID
    @pagination = pagination
    @includeDutchAuctionBid = includeDutchAuctionBid
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsResponseType
class GetItemTransactionsResponseType
  @@schema_type = "GetItemTransactionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreTransactions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreTransactions")]],
    ["transactionsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedTransactionCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedTransactionCountActual")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :item
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, item = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @item = item
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackRequestType
class GetItemsAwaitingFeedbackRequestType
  @@schema_type = "GetItemsAwaitingFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["sort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :sort
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, sort = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @sort = sort
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackResponseType
class GetItemsAwaitingFeedbackResponseType
  @@schema_type = "GetItemsAwaitingFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemsAwaitingFeedback", ["PaginatedTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsAwaitingFeedback")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemsAwaitingFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemsAwaitingFeedback = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemsAwaitingFeedback = itemsAwaitingFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsRequestType
class GetLiveAuctionCatalogDetailsRequestType
  @@schema_type = "GetLiveAuctionCatalogDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsResponseType
class GetLiveAuctionCatalogDetailsResponseType
  @@schema_type = "GetLiveAuctionCatalogDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["liveAuctionCatalog", ["LiveAuctionCatalogType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionCatalog")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :liveAuctionCatalog

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, liveAuctionCatalog = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @liveAuctionCatalog = liveAuctionCatalog
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesRequestType
class GetMemberMessagesRequestType
  @@schema_type = "GetMemberMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["mailMessageType", ["MessageTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MailMessageType")]],
    ["messageStatus", ["MessageStatusTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStatus")]],
    ["displayToPublic", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayToPublic")]],
    ["startCreationTime", ["SOAP::SOAPDate", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartCreationTime")]],
    ["endCreationTime", ["SOAP::SOAPDate", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndCreationTime")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["memberMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessageID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :mailMessageType
  attr_accessor :messageStatus
  attr_accessor :displayToPublic
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime
  attr_accessor :pagination
  attr_accessor :memberMessageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, mailMessageType = nil, messageStatus = nil, displayToPublic = nil, startCreationTime = nil, endCreationTime = nil, pagination = nil, memberMessageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @mailMessageType = mailMessageType
    @messageStatus = messageStatus
    @displayToPublic = displayToPublic
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
    @pagination = pagination
    @memberMessageID = memberMessageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesResponseType
class GetMemberMessagesResponseType
  @@schema_type = "GetMemberMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["memberMessage", ["MemberMessageExchangeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessage")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :memberMessage
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, memberMessage = nil, paginationResult = nil, hasMoreItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @memberMessage = memberMessage
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesRequestType
class GetMyMessagesRequestType
  @@schema_type = "GetMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]],
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, alertIDs = nil, messageIDs = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesResponseType
class GetMyMessagesResponseType
  @@schema_type = "GetMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["summary", ["MyMessagesSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Summary")]],
    ["alerts", ["MyMessagesAlertArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Alerts")]],
    ["messages", ["MyMessagesMessageArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Messages")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :summary
  attr_accessor :alerts
  attr_accessor :messages

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, summary = nil, alerts = nil, messages = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @summary = summary
    @alerts = alerts
    @messages = messages
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRequestType
class GetMyeBayRequestType
  @@schema_type = "GetMyeBayRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["biddingSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingSort")]],
    ["lostSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostSort")]],
    ["maxItemsPerList", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxItemsPerList")]],
    ["maxItemAgeInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxItemAgeInDays")]],
    ["watchSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchSort")]],
    ["wonSort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonSort")]],
    ["favoriteSearches", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffers")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :biddingSort
  attr_accessor :lostSort
  attr_accessor :maxItemsPerList
  attr_accessor :maxItemAgeInDays
  attr_accessor :watchSort
  attr_accessor :wonSort
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffers

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, biddingSort = nil, lostSort = nil, maxItemsPerList = nil, maxItemAgeInDays = nil, watchSort = nil, wonSort = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffers = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @biddingSort = biddingSort
    @lostSort = lostSort
    @maxItemsPerList = maxItemsPerList
    @maxItemAgeInDays = maxItemAgeInDays
    @watchSort = watchSort
    @wonSort = wonSort
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffers = secondChanceOffers
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayResponseType
class GetMyeBayResponseType
  @@schema_type = "GetMyeBayResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["biddingItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingItemArray")]],
    ["lostItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostItemArray")]],
    ["watchItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchItemArray")]],
    ["wonItemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonItemArray")]],
    ["favoriteSearches", ["MyeBayFavoriteSearchListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBayFavoriteSellerListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffers", ["MyeBaySecondChanceOfferListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffers")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :biddingItemArray
  attr_accessor :lostItemArray
  attr_accessor :watchItemArray
  attr_accessor :wonItemArray
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffers

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, biddingItemArray = nil, lostItemArray = nil, watchItemArray = nil, wonItemArray = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffers = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @biddingItemArray = biddingItemArray
    @lostItemArray = lostItemArray
    @watchItemArray = watchItemArray
    @wonItemArray = wonItemArray
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffers = secondChanceOffers
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingRequestType
class GetMyeBayBuyingRequestType
  @@schema_type = "GetMyeBayBuyingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchList")]],
    ["bidList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidList")]],
    ["bestOfferList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferList")]],
    ["wonList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonList")]],
    ["lostList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostList")]],
    ["favoriteSearches", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffer", ["MyeBaySelectionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingResponseType
class GetMyeBayBuyingResponseType
  @@schema_type = "GetMyeBayBuyingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingSummary", ["BuyingSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingSummary")]],
    ["watchList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchList")]],
    ["bidList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidList")]],
    ["bestOfferList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferList")]],
    ["wonList", ["PaginatedOrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonList")]],
    ["lostList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LostList")]],
    ["favoriteSearches", ["MyeBayFavoriteSearchListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearches")]],
    ["favoriteSellers", ["MyeBayFavoriteSellerListType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSellers")]],
    ["secondChanceOffer", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :buyingSummary
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, buyingSummary = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @buyingSummary = buyingSummary
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersRequestType
class GetMyeBayRemindersRequestType
  @@schema_type = "GetMyeBayRemindersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingReminders", ["ReminderCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingReminders")]],
    ["sellingReminders", ["ReminderCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingReminders")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, buyingReminders = nil, sellingReminders = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersResponseType
class GetMyeBayRemindersResponseType
  @@schema_type = "GetMyeBayRemindersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["buyingReminders", ["RemindersType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingReminders")]],
    ["sellingReminders", ["RemindersType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingReminders")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, buyingReminders = nil, sellingReminders = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingRequestType
class GetMyeBaySellingRequestType
  @@schema_type = "GetMyeBaySellingRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["scheduledList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduledList")]],
    ["activeList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveList")]],
    ["soldList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldList")]],
    ["unsoldList", ["ItemListCustomizationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsoldList")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingResponseType
class GetMyeBaySellingResponseType
  @@schema_type = "GetMyeBaySellingResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["sellingSummary", ["SellingSummaryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingSummary")]],
    ["scheduledList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduledList")]],
    ["activeList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveList")]],
    ["soldList", ["PaginatedOrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldList")]],
    ["unsoldList", ["PaginatedItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsoldList")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :sellingSummary
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, sellingSummary = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @sellingSummary = sellingSummary
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesRequestType
class GetNotificationPreferencesRequestType
  @@schema_type = "GetNotificationPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["preferenceLevel", ["NotificationRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PreferenceLevel")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :preferenceLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, preferenceLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @preferenceLevel = preferenceLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesResponseType
class GetNotificationPreferencesResponseType
  @@schema_type = "GetNotificationPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDeliveryPreferences", ["ApplicationDeliveryPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDeliveryPreferences")]],
    ["userDeliveryPreferenceArray", ["NotificationEnableArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDeliveryPreferenceArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersRequestType
class GetOrdersRequestType
  @@schema_type = "GetOrdersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["orderIDArray", ["OrderIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderIDArray")]],
    ["createTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreateTimeFrom")]],
    ["createTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreateTimeTo")]],
    ["orderRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderRole")]],
    ["orderStatus", ["OrderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderStatus")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :orderIDArray
  attr_accessor :createTimeFrom
  attr_accessor :createTimeTo
  attr_accessor :orderRole
  attr_accessor :orderStatus
  attr_accessor :listingType
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, orderIDArray = nil, createTimeFrom = nil, createTimeTo = nil, orderRole = nil, orderStatus = nil, listingType = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @orderIDArray = orderIDArray
    @createTimeFrom = createTimeFrom
    @createTimeTo = createTimeTo
    @orderRole = orderRole
    @orderStatus = orderStatus
    @listingType = listingType
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersResponseType
class GetOrdersResponseType
  @@schema_type = "GetOrdersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreOrders", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreOrders")]],
    ["orderArray", ["OrderArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderArray")]],
    ["ordersPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrdersPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedOrderCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedOrderCountActual")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreOrders
  attr_accessor :orderArray
  attr_accessor :ordersPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedOrderCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreOrders = nil, orderArray = nil, ordersPerPage = nil, pageNumber = nil, returnedOrderCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreOrders = hasMoreOrders
    @orderArray = orderArray
    @ordersPerPage = ordersPerPage
    @pageNumber = pageNumber
    @returnedOrderCountActual = returnedOrderCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsRequestType
class GetPictureManagerDetailsRequestType
  @@schema_type = "GetPictureManagerDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["folderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["pictureURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["pictureManagerDetailLevel", ["PictureManagerDetailLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetailLevel")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :pictureURL
  attr_accessor :pictureManagerDetailLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, folderID = nil, pictureURL = nil, pictureManagerDetailLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @folderID = folderID
    @pictureURL = pictureURL
    @pictureManagerDetailLevel = pictureManagerDetailLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsResponseType
class GetPictureManagerDetailsResponseType
  @@schema_type = "GetPictureManagerDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pictureManagerDetails", ["PictureManagerDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetails")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, pictureManagerDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsRequestType
class GetPictureManagerOptionsRequestType
  @@schema_type = "GetPictureManagerOptionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsResponseType
class GetPictureManagerOptionsResponseType
  @@schema_type = "GetPictureManagerOptionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["subscription", ["PictureManagerSubscriptionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subscription")]],
    ["pictureType", ["PictureManagerPictureDisplayType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :subscription
  attr_accessor :pictureType

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, subscription = [], pictureType = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @subscription = subscription
    @pictureType = pictureType
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsRequestType
class GetPopularKeywordsRequestType
  @@schema_type = "GetPopularKeywordsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["includeChildCategories", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeChildCategories")]],
    ["maxKeywordsRetrieved", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxKeywordsRetrieved")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :includeChildCategories
  attr_accessor :maxKeywordsRetrieved
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = [], includeChildCategories = nil, maxKeywordsRetrieved = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @includeChildCategories = includeChildCategories
    @maxKeywordsRetrieved = maxKeywordsRetrieved
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsResponseType
class GetPopularKeywordsResponseType
  @@schema_type = "GetPopularKeywordsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :hasMore

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, categoryArray = nil, hasMore = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @hasMore = hasMore
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersRequestType
class GetProductFamilyMembersRequestType
  @@schema_type = "GetProductFamilyMembersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSearch", ["ProductSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearch")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersResponseType
class GetProductFamilyMembersResponseType
  @@schema_type = "GetProductFamilyMembersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dataElementSets", ["DataElementSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementSets")]],
    ["productSearchResult", ["ProductSearchResultType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchResult")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderRequestType
class GetProductFinderRequestType
  @@schema_type = "GetProductFinderRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productFinderID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, attributeSystemVersion = nil, productFinderID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderID = productFinderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderResponseType
class GetProductFinderResponseType
  @@schema_type = "GetProductFinderResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productFinderData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderData")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, productFinderData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderData = productFinderData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLRequestType
class GetProductFinderXSLRequestType
  @@schema_type = "GetProductFinderXSLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLResponseType
class GetProductFinderXSLResponseType
  @@schema_type = "GetProductFinderXSLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["xSLFile", ["XSLFileType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "XSLFile")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageRequestType
class GetProductSearchPageRequestType
  @@schema_type = "GetProductSearchPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["attributeSetID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, attributeSystemVersion = nil, attributeSetID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageResponseType
class GetProductSearchPageResponseType
  @@schema_type = "GetProductSearchPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["attributeSystemVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSystemVersion")]],
    ["productSearchPage", ["ProductSearchPageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchPage")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productSearchPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, attributeSystemVersion = nil, productSearchPage = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productSearchPage = productSearchPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsRequestType
class GetProductSearchResultsRequestType
  @@schema_type = "GetProductSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSearch", ["ProductSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearch")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsResponseType
class GetProductSearchResultsResponseType
  @@schema_type = "GetProductSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["dataElementSets", ["DataElementSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElementSets")]],
    ["productSearchResult", ["ProductSearchResultType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchResult")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesRequestType
class GetProductSellingPagesRequestType
  @@schema_type = "GetProductSellingPagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["useCase", ["ProductUseCaseCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseCase")]],
    ["product", ["ProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Product")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :useCase
  attr_accessor :product

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, useCase = nil, product = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @useCase = useCase
    @product = product
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesResponseType
class GetProductSellingPagesResponseType
  @@schema_type = "GetProductSellingPagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["productSellingPagesData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSellingPagesData")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :productSellingPagesData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, productSellingPagesData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @productSellingPagesData = productSellingPagesData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesRequestType
class GetPromotionRulesRequestType
  @@schema_type = "GetPromotionRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :storeCategoryID
  attr_accessor :promotionMethod

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, storeCategoryID = nil, promotionMethod = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @storeCategoryID = storeCategoryID
    @promotionMethod = promotionMethod
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesResponseType
class GetPromotionRulesResponseType
  @@schema_type = "GetPromotionRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["promotionRuleArray", ["PromotionRuleArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRuleArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, promotionRuleArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestType
class GetRecommendationsRequestType
  @@schema_type = "GetRecommendationsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["listingFlow", ["ListingFlowCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingFlow")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["recommendationEngine", ["RecommendationEngineCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecommendationEngine")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :externalProductID
  attr_accessor :modifiedFields
  attr_accessor :recommendationEngine
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, listingFlow = nil, item = nil, externalProductID = nil, modifiedFields = [], recommendationEngine = [], query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @listingFlow = listingFlow
    @item = item
    @externalProductID = externalProductID
    @modifiedFields = modifiedFields
    @recommendationEngine = recommendationEngine
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseType
class GetRecommendationsResponseType
  @@schema_type = "GetRecommendationsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["listingAnalyzerRecommendations", ["ListingAnalyzerRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingAnalyzerRecommendations")]],
    ["sIFFTASRecommendations", ["SIFFTASRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SIFFTASRecommendations")]],
    ["pricingRecommendations", ["PricingRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PricingRecommendations")]],
    ["attributeRecommendations", ["AttributeRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeRecommendations")]],
    ["productRecommendations", ["ProductRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductRecommendations")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetReturnURLRequestType
class GetReturnURLRequestType
  @@schema_type = "GetReturnURLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetReturnURLResponseType
class GetReturnURLResponseType
  @@schema_type = "GetReturnURLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDisplayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDisplayName")]],
    ["authenticationEntryArray", ["AuthenticationEntryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntryArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :applicationDisplayName
  attr_accessor :authenticationEntryArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, applicationDisplayName = nil, authenticationEntryArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @applicationDisplayName = applicationDisplayName
    @authenticationEntryArray = authenticationEntryArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRuNameRequestType
class GetRuNameRequestType
  @@schema_type = "GetRuNameRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["clientUseCase", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ClientUseCase")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :clientUseCase

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, clientUseCase = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @clientUseCase = clientUseCase
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRuNameResponseType
class GetRuNameResponseType
  @@schema_type = "GetRuNameResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["ruName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuName")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :ruName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, ruName = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @ruName = ruName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsRequestType
class GetSearchResultsRequestType
  @@schema_type = "GetSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["searchFlags", ["SearchFlagsCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchFlags")]],
    ["priceRangeFilter", ["PriceRangeFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PriceRangeFilter")]],
    ["proximitySearch", ["ProximitySearchType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearch")]],
    ["itemTypeFilter", ["ItemTypeFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTypeFilter")]],
    ["searchType", ["SearchTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["userIdFilter", ["UserIdFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIdFilter")]],
    ["searchLocationFilter", ["SearchLocationFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocationFilter")]],
    ["storeSearchFilter", ["SearchStoreFilterType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreSearchFilter")]],
    ["order", ["SearchSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["searchRequest", ["SearchRequestType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchRequest")]],
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["categories", ["RequestCategoriesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Categories")]],
    ["totalOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalOnly")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["includeGetItFastItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeGetItFastItems")]],
    ["paymentMethod", ["PaymentMethodSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["granularityLevel", ["GranularityLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GranularityLevel")]],
    ["expandSearch", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpandSearch")]],
    ["lot", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Lot")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["quantityOperator", ["QuantityOperatorCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityOperator")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["includeCondition", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeCondition")]],
    ["includeFeedback", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFeedback")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :query
  attr_accessor :categoryID
  attr_accessor :searchFlags
  attr_accessor :priceRangeFilter
  attr_accessor :proximitySearch
  attr_accessor :itemTypeFilter
  attr_accessor :searchType
  attr_accessor :userIdFilter
  attr_accessor :searchLocationFilter
  attr_accessor :storeSearchFilter
  attr_accessor :order
  attr_accessor :pagination
  attr_accessor :searchRequest
  attr_accessor :productID
  attr_accessor :externalProductID
  attr_accessor :categories
  attr_accessor :totalOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :includeGetItFastItems
  attr_accessor :paymentMethod
  attr_accessor :granularityLevel
  attr_accessor :expandSearch
  attr_accessor :lot
  attr_accessor :quantity
  attr_accessor :quantityOperator
  attr_accessor :sellerBusinessType
  attr_accessor :includeCondition
  attr_accessor :includeFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, motorsGermanySearchable = nil, query = nil, categoryID = nil, searchFlags = [], priceRangeFilter = nil, proximitySearch = nil, itemTypeFilter = nil, searchType = nil, userIdFilter = nil, searchLocationFilter = nil, storeSearchFilter = nil, order = nil, pagination = nil, searchRequest = nil, productID = nil, externalProductID = nil, categories = nil, totalOnly = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, includeGetItFastItems = nil, paymentMethod = nil, granularityLevel = nil, expandSearch = nil, lot = nil, quantity = nil, quantityOperator = nil, sellerBusinessType = nil, includeCondition = nil, includeFeedback = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @query = query
    @categoryID = categoryID
    @searchFlags = searchFlags
    @priceRangeFilter = priceRangeFilter
    @proximitySearch = proximitySearch
    @itemTypeFilter = itemTypeFilter
    @searchType = searchType
    @userIdFilter = userIdFilter
    @searchLocationFilter = searchLocationFilter
    @storeSearchFilter = storeSearchFilter
    @order = order
    @pagination = pagination
    @searchRequest = searchRequest
    @productID = productID
    @externalProductID = externalProductID
    @categories = categories
    @totalOnly = totalOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @includeGetItFastItems = includeGetItFastItems
    @paymentMethod = paymentMethod
    @granularityLevel = granularityLevel
    @expandSearch = expandSearch
    @lot = lot
    @quantity = quantity
    @quantityOperator = quantityOperator
    @sellerBusinessType = sellerBusinessType
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsResponseType
class GetSearchResultsResponseType
  @@schema_type = "GetSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["searchResultItemArray", ["SearchResultItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultItemArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["categoryArray", ["CategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryArray")]],
    ["buyingGuideDetails", ["BuyingGuideDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideDetails")]],
    ["storeExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreExpansionArray")]],
    ["internationalExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalExpansionArray")]],
    ["filterRemovedExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FilterRemovedExpansionArray")]],
    ["allCategoriesExpansionArray", ["ExpansionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllCategoriesExpansionArray")]],
    ["spellingSuggestion", ["SpellingSuggestionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SpellingSuggestion")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :searchResultItemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :buyingGuideDetails
  attr_accessor :storeExpansionArray
  attr_accessor :internationalExpansionArray
  attr_accessor :filterRemovedExpansionArray
  attr_accessor :allCategoriesExpansionArray
  attr_accessor :spellingSuggestion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, searchResultItemArray = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, categoryArray = nil, buyingGuideDetails = nil, storeExpansionArray = nil, internationalExpansionArray = nil, filterRemovedExpansionArray = nil, allCategoriesExpansionArray = nil, spellingSuggestion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @searchResultItemArray = searchResultItemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @buyingGuideDetails = buyingGuideDetails
    @storeExpansionArray = storeExpansionArray
    @internationalExpansionArray = internationalExpansionArray
    @filterRemovedExpansionArray = filterRemovedExpansionArray
    @allCategoriesExpansionArray = allCategoriesExpansionArray
    @spellingSuggestion = spellingSuggestion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsRequestType
class GetSellerEventsRequestType
  @@schema_type = "GetSellerEventsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["startTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeFrom")]],
    ["startTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeTo")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["newItemFilter", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewItemFilter")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :newItemFilter
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, userID = nil, startTimeFrom = nil, startTimeTo = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, modTimeTo = nil, newItemFilter = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @userID = userID
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @newItemFilter = newItemFilter
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsResponseType
class GetSellerEventsResponseType
  @@schema_type = "GetSellerEventsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["timeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeTo")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :timeTo
  attr_accessor :itemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, timeTo = nil, itemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @timeTo = timeTo
    @itemArray = itemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListRequestType
class GetSellerListRequestType
  @@schema_type = "GetSellerListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["endTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeFrom")]],
    ["endTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTimeTo")]],
    ["sort", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["startTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeFrom")]],
    ["startTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["granularityLevel", ["GranularityLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GranularityLevel")]],
    ["includeWatchCount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeWatchCount")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :sort
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :pagination
  attr_accessor :granularityLevel
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, userID = nil, endTimeFrom = nil, endTimeTo = nil, sort = nil, startTimeFrom = nil, startTimeTo = nil, pagination = nil, granularityLevel = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @userID = userID
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @sort = sort
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @pagination = pagination
    @granularityLevel = granularityLevel
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListResponseType
class GetSellerListResponseType
  @@schema_type = "GetSellerListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedItemCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedItemCountActual")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedItemCountActual
  attr_accessor :seller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreItems = nil, itemArray = nil, itemsPerPage = nil, pageNumber = nil, returnedItemCountActual = nil, seller = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemArray = itemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @returnedItemCountActual = returnedItemCountActual
    @seller = seller
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsRequestType
class GetSellerPaymentsRequestType
  @@schema_type = "GetSellerPaymentsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paymentStatus", ["RCSPaymentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentStatus")]],
    ["paymentTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentTimeFrom")]],
    ["paymentTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :paymentStatus
  attr_accessor :paymentTimeFrom
  attr_accessor :paymentTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, paymentStatus = nil, paymentTimeFrom = nil, paymentTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @paymentStatus = paymentStatus
    @paymentTimeFrom = paymentTimeFrom
    @paymentTimeTo = paymentTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsResponseType
class GetSellerPaymentsResponseType
  @@schema_type = "GetSellerPaymentsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMorePayments", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMorePayments")]],
    ["sellerPayment", ["SellerPaymentType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPayment")]],
    ["paymentsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedPaymentCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedPaymentCountActual")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMorePayments
  attr_accessor :sellerPayment
  attr_accessor :paymentsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedPaymentCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMorePayments = nil, sellerPayment = [], paymentsPerPage = nil, pageNumber = nil, returnedPaymentCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMorePayments = hasMorePayments
    @sellerPayment = sellerPayment
    @paymentsPerPage = paymentsPerPage
    @pageNumber = pageNumber
    @returnedPaymentCountActual = returnedPaymentCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsRequestType
class GetSellerTransactionsRequestType
  @@schema_type = "GetSellerTransactionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["includeFinalValueFee", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeFinalValueFee")]],
    ["includeContainingOrder", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeContainingOrder")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsResponseType
class GetSellerTransactionsResponseType
  @@schema_type = "GetSellerTransactionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]],
    ["hasMoreTransactions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreTransactions")]],
    ["transactionsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["returnedTransactionCountActual", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnedTransactionCountActual")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :seller
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, seller = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @seller = seller
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreRequestType
class GetStoreRequestType
  @@schema_type = "GetStoreRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreResponseType
class GetStoreResponseType
  @@schema_type = "GetStoreResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["store", ["StoreType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Store")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, store = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageRequestType
class GetStoreCustomPageRequestType
  @@schema_type = "GetStoreCustomPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :pageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, pageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @pageID = pageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageResponseType
class GetStoreCustomPageResponseType
  @@schema_type = "GetStoreCustomPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPageArray", ["StoreCustomPageArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPageArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :customPageArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, customPageArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @customPageArray = customPageArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsRequestType
class GetStoreOptionsRequestType
  @@schema_type = "GetStoreOptionsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsResponseType
class GetStoreOptionsResponseType
  @@schema_type = "GetStoreOptionsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["basicThemeArray", ["StoreThemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BasicThemeArray")]],
    ["advancedThemeArray", ["StoreThemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdvancedThemeArray")]],
    ["logoArray", ["StoreLogoArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoArray")]],
    ["subscriptionArray", ["StoreSubscriptionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionArray")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :basicThemeArray
  attr_accessor :advancedThemeArray
  attr_accessor :logoArray
  attr_accessor :subscriptionArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, basicThemeArray = nil, advancedThemeArray = nil, logoArray = nil, subscriptionArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @basicThemeArray = basicThemeArray
    @advancedThemeArray = advancedThemeArray
    @logoArray = logoArray
    @subscriptionArray = subscriptionArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesRequestType
class GetStorePreferencesRequestType
  @@schema_type = "GetStorePreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesResponseType
class GetStorePreferencesResponseType
  @@schema_type = "GetStorePreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["storePreferences", ["StorePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorePreferences")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, storePreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesRequestType
class GetSuggestedCategoriesRequestType
  @@schema_type = "GetSuggestedCategoriesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesResponseType
class GetSuggestedCategoriesResponseType
  @@schema_type = "GetSuggestedCategoriesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["suggestedCategoryArray", ["SuggestedCategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedCategoryArray")]],
    ["categoryCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryCount")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :suggestedCategoryArray
  attr_accessor :categoryCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, suggestedCategoryArray = nil, categoryCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @suggestedCategoryArray = suggestedCategoryArray
    @categoryCount = categoryCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableRequestType
class GetTaxTableRequestType
  @@schema_type = "GetTaxTableRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableResponseType
class GetTaxTableResponseType
  @@schema_type = "GetTaxTableResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["lastUpdateTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastUpdateTime")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :lastUpdateTime
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, lastUpdateTime = nil, taxTable = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @lastUpdateTime = lastUpdateTime
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserRequestType
class GetUserRequestType
  @@schema_type = "GetUserRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, userID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserResponseType
class GetUserResponseType
  @@schema_type = "GetUserResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["user", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "User")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :user

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, user = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @user = user
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesRequestType
class GetUserDisputesRequestType
  @@schema_type = "GetUserDisputesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeFilterType", ["DisputeFilterTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterType")]],
    ["disputeSortType", ["DisputeSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeSortType")]],
    ["modTimeFrom", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeFrom")]],
    ["modTimeTo", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTimeTo")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :disputeFilterType
  attr_accessor :disputeSortType
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, disputeFilterType = nil, disputeSortType = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @disputeFilterType = disputeFilterType
    @disputeSortType = disputeSortType
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesResponseType
class GetUserDisputesResponseType
  @@schema_type = "GetUserDisputesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["startingDisputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartingDisputeID")]],
    ["endingDisputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndingDisputeID")]],
    ["disputeArray", ["DisputeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeArray")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["disputeFilterCount", ["DisputeFilterCountType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterCount")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :startingDisputeID
  attr_accessor :endingDisputeID
  attr_accessor :disputeArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :disputeFilterCount
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, startingDisputeID = nil, endingDisputeID = nil, disputeArray = nil, itemsPerPage = nil, pageNumber = nil, disputeFilterCount = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @startingDisputeID = startingDisputeID
    @endingDisputeID = endingDisputeID
    @disputeArray = disputeArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @disputeFilterCount = disputeFilterCount
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesRequestType
class GetUserPreferencesRequestType
  @@schema_type = "GetUserPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["showBidderNoticePreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowBidderNoticePreferences")]],
    ["showCombinedPaymentPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowCombinedPaymentPreferences")]],
    ["showCrossPromotionPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowCrossPromotionPreferences")]],
    ["showSellerPaymentPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowSellerPaymentPreferences")]],
    ["showEndOfAuctionEmailPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowEndOfAuctionEmailPreferences")]],
    ["showSellerFavoriteItemPreferences", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShowSellerFavoriteItemPreferences")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :showBidderNoticePreferences
  attr_accessor :showCombinedPaymentPreferences
  attr_accessor :showCrossPromotionPreferences
  attr_accessor :showSellerPaymentPreferences
  attr_accessor :showEndOfAuctionEmailPreferences
  attr_accessor :showSellerFavoriteItemPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, showBidderNoticePreferences = nil, showCombinedPaymentPreferences = nil, showCrossPromotionPreferences = nil, showSellerPaymentPreferences = nil, showEndOfAuctionEmailPreferences = nil, showSellerFavoriteItemPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @showBidderNoticePreferences = showBidderNoticePreferences
    @showCombinedPaymentPreferences = showCombinedPaymentPreferences
    @showCrossPromotionPreferences = showCrossPromotionPreferences
    @showSellerPaymentPreferences = showSellerPaymentPreferences
    @showEndOfAuctionEmailPreferences = showEndOfAuctionEmailPreferences
    @showSellerFavoriteItemPreferences = showSellerFavoriteItemPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesResponseType
class GetUserPreferencesResponseType
  @@schema_type = "GetUserPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderNoticePreferences", ["BidderNoticePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderNoticePreferences")]],
    ["combinedPaymentPreferences", ["CombinedPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPreferences")]],
    ["crossPromotionPreferences", ["CrossPromotionPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionPreferences")]],
    ["sellerPaymentPreferences", ["SellerPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentPreferences")]],
    ["sellerFavoriteItemPreferences", ["SellerFavoriteItemPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerFavoriteItemPreferences")]],
    ["endOfAuctionEmailPreferences", ["EndOfAuctionEmailPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndOfAuctionEmailPreferences")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostRequestType
class GetWantItNowPostRequestType
  @@schema_type = "GetWantItNowPostRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostResponseType
class GetWantItNowPostResponseType
  @@schema_type = "GetWantItNowPostResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["wantItNowPost", ["WantItNowPostType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPost")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, wantItNowPost = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @wantItNowPost = wantItNowPost
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsRequestType
class GetWantItNowSearchResultsRequestType
  @@schema_type = "GetWantItNowSearchResultsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["searchInDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchInDescription")]],
    ["searchWorldwide", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchWorldwide")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :query
  attr_accessor :searchInDescription
  attr_accessor :searchWorldwide
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, categoryID = nil, query = nil, searchInDescription = nil, searchWorldwide = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @categoryID = categoryID
    @query = query
    @searchInDescription = searchInDescription
    @searchWorldwide = searchWorldwide
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsResponseType
class GetWantItNowSearchResultsResponseType
  @@schema_type = "GetWantItNowSearchResultsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["wantItNowPostArray", ["WantItNowPostArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPostArray")]],
    ["hasMoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMoreItems")]],
    ["itemsPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemsPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPostArray
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, wantItNowPostArray = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @wantItNowPostArray = wantItNowPostArray
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsRequestType
class GeteBayDetailsRequestType
  @@schema_type = "GeteBayDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["detailName", ["DetailNameCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailName")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :detailName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, detailName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @detailName = detailName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsResponseType
class GeteBayDetailsResponseType
  @@schema_type = "GeteBayDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["countryDetails", ["CountryDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryDetails")]],
    ["currencyDetails", ["CurrencyDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrencyDetails")]],
    ["paymentOptionDetails", ["PaymentOptionDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOptionDetails")]],
    ["regionDetails", ["RegionDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionDetails")]],
    ["shippingLocationDetails", ["ShippingLocationDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingLocationDetails")]],
    ["shippingServiceDetails", ["ShippingServiceDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceDetails")]],
    ["siteDetails", ["SiteDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteDetails")]],
    ["taxJurisdiction", ["TaxJurisdictionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxJurisdiction")]],
    ["uRLDetails", ["URLDetailsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLDetails")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :countryDetails
  attr_accessor :currencyDetails
  attr_accessor :paymentOptionDetails
  attr_accessor :regionDetails
  attr_accessor :shippingLocationDetails
  attr_accessor :shippingServiceDetails
  attr_accessor :siteDetails
  attr_accessor :taxJurisdiction
  attr_accessor :uRLDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, countryDetails = [], currencyDetails = [], paymentOptionDetails = [], regionDetails = [], shippingLocationDetails = [], shippingServiceDetails = [], siteDetails = [], taxJurisdiction = [], uRLDetails = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @countryDetails = countryDetails
    @currencyDetails = currencyDetails
    @paymentOptionDetails = paymentOptionDetails
    @regionDetails = regionDetails
    @shippingLocationDetails = shippingLocationDetails
    @shippingServiceDetails = shippingServiceDetails
    @siteDetails = siteDetails
    @taxJurisdiction = taxJurisdiction
    @uRLDetails = uRLDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeRequestType
class GeteBayOfficialTimeRequestType
  @@schema_type = "GeteBayOfficialTimeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeResponseType
class GeteBayOfficialTimeResponseType
  @@schema_type = "GeteBayOfficialTimeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundRequestType
class IssueRefundRequestType
  @@schema_type = "IssueRefundRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["refundReason", ["RefundReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundReason")]],
    ["refundType", ["RefundTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundType")]],
    ["refundAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundAmount")]],
    ["refundMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundMessage")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :refundReason
  attr_accessor :refundType
  attr_accessor :refundAmount
  attr_accessor :refundMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, transactionID = nil, refundReason = nil, refundType = nil, refundAmount = nil, refundMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @refundReason = refundReason
    @refundType = refundType
    @refundAmount = refundAmount
    @refundMessage = refundMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundResponseType
class IssueRefundResponseType
  @@schema_type = "IssueRefundResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["refundFromSeller", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundFromSeller")]],
    ["totalRefundToBuyer", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalRefundToBuyer")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, refundFromSeller = nil, totalRefundToBuyer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackRequestType
class LeaveFeedbackRequestType
  @@schema_type = "LeaveFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["targetUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUser")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :transactionID
  attr_accessor :targetUser

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, commentText = nil, commentType = nil, transactionID = nil, targetUser = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @commentText = commentText
    @commentType = commentType
    @transactionID = transactionID
    @targetUser = targetUser
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackResponseType
class LeaveFeedbackResponseType
  @@schema_type = "LeaveFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, feedbackID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemRequestType
class RelistItemRequestType
  @@schema_type = "RelistItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["bulkRelistAsSIFFlow", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BulkRelistAsSIFFlow")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :modifiedFields
  attr_accessor :bulkRelistAsSIFFlow

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, item = nil, modifiedFields = [], bulkRelistAsSIFFlow = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @item = item
    @modifiedFields = modifiedFields
    @bulkRelistAsSIFFlow = bulkRelistAsSIFFlow
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemResponseType
class RelistItemResponseType
  @@schema_type = "RelistItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, startTime = nil, endTime = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListRequestType
class RemoveFromWatchListRequestType
  @@schema_type = "RemoveFromWatchListRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["removeAllItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RemoveAllItems")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :removeAllItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = [], removeAllItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @removeAllItems = removeAllItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListResponseType
class RemoveFromWatchListResponseType
  @@schema_type = "RemoveFromWatchListResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["watchListCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListCount")]],
    ["watchListMaximum", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchListMaximum")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferRequestType
class RespondToBestOfferRequestType
  @@schema_type = "RespondToBestOfferRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["bestOfferID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["action", ["BestOfferActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["sellerResponse", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerResponse")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :action
  attr_accessor :sellerResponse

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, bestOfferID = [], action = nil, sellerResponse = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @action = action
    @sellerResponse = sellerResponse
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferResponseType
class RespondToBestOfferResponseType
  @@schema_type = "RespondToBestOfferResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["respondToBestOffer", ["BestOfferArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RespondToBestOffer")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :respondToBestOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, respondToBestOffer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @respondToBestOffer = respondToBestOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackRequestType
class RespondToFeedbackRequestType
  @@schema_type = "RespondToFeedbackRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["targetUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUserID")]],
    ["responseType", ["FeedbackResponseCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseType")]],
    ["responseText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseText")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :targetUserID
  attr_accessor :responseType
  attr_accessor :responseText

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, feedbackID = nil, itemID = nil, transactionID = nil, targetUserID = nil, responseType = nil, responseText = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @targetUserID = targetUserID
    @responseType = responseType
    @responseText = responseText
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackResponseType
class RespondToFeedbackResponseType
  @@schema_type = "RespondToFeedbackResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostRequestType
class RespondToWantItNowPostRequestType
  @@schema_type = "RespondToWantItNowPostRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostResponseType
class RespondToWantItNowPostResponseType
  @@schema_type = "RespondToWantItNowPostResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusRequestType
class ReviseCheckoutStatusRequestType
  @@schema_type = "ReviseCheckoutStatusRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["paymentMethodUsed", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethodUsed")]],
    ["checkoutStatus", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["shippingService", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["checkoutMethod", ["CheckoutMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutMethod")]],
    ["insuranceType", ["InsuranceSelectedCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceType")]],
    ["paymentStatus", ["RCSPaymentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentStatus")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["buyerID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerID")]],
    ["shippingInsuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingInsuranceCost")]],
    ["salesTax", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["shippingCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCost")]],
    ["encryptedID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EncryptedID")]],
    ["externalTransaction", ["ExternalTransactionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["multipleSellerPaymentID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MultipleSellerPaymentID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :amountPaid
  attr_accessor :paymentMethodUsed
  attr_accessor :checkoutStatus
  attr_accessor :shippingService
  attr_accessor :shippingIncludedInTax
  attr_accessor :checkoutMethod
  attr_accessor :insuranceType
  attr_accessor :paymentStatus
  attr_accessor :adjustmentAmount
  attr_accessor :shippingAddress
  attr_accessor :buyerID
  attr_accessor :shippingInsuranceCost
  attr_accessor :salesTax
  attr_accessor :shippingCost
  attr_accessor :encryptedID
  attr_accessor :externalTransaction
  attr_accessor :multipleSellerPaymentID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, transactionID = nil, orderID = nil, amountPaid = nil, paymentMethodUsed = nil, checkoutStatus = nil, shippingService = nil, shippingIncludedInTax = nil, checkoutMethod = nil, insuranceType = nil, paymentStatus = nil, adjustmentAmount = nil, shippingAddress = nil, buyerID = nil, shippingInsuranceCost = nil, salesTax = nil, shippingCost = nil, encryptedID = nil, externalTransaction = nil, multipleSellerPaymentID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @amountPaid = amountPaid
    @paymentMethodUsed = paymentMethodUsed
    @checkoutStatus = checkoutStatus
    @shippingService = shippingService
    @shippingIncludedInTax = shippingIncludedInTax
    @checkoutMethod = checkoutMethod
    @insuranceType = insuranceType
    @paymentStatus = paymentStatus
    @adjustmentAmount = adjustmentAmount
    @shippingAddress = shippingAddress
    @buyerID = buyerID
    @shippingInsuranceCost = shippingInsuranceCost
    @salesTax = salesTax
    @shippingCost = shippingCost
    @encryptedID = encryptedID
    @externalTransaction = externalTransaction
    @multipleSellerPaymentID = multipleSellerPaymentID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusResponseType
class ReviseCheckoutStatusResponseType
  @@schema_type = "ReviseCheckoutStatusResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemRequestType
class ReviseItemRequestType
  @@schema_type = "ReviseItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :modifiedFields

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, item = nil, modifiedFields = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @item = item
    @modifiedFields = modifiedFields
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemResponseType
class ReviseItemResponseType
  @@schema_type = "ReviseItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesRequestType
class ReviseMyMessagesRequestType
  @@schema_type = "ReviseMyMessagesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["messageIDs", ["MyMessagesMessageIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageIDs")]],
    ["alertIDs", ["MyMessagesAlertIDArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertIDs")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["flagged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Flagged")]],
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :messageIDs
  attr_accessor :alertIDs
  attr_accessor :read
  attr_accessor :flagged
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, messageIDs = nil, alertIDs = nil, read = nil, flagged = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @messageIDs = messageIDs
    @alertIDs = alertIDs
    @read = read
    @flagged = flagged
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesResponseType
class ReviseMyMessagesResponseType
  @@schema_type = "ReviseMyMessagesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersRequestType
class ReviseMyMessagesFoldersRequestType
  @@schema_type = "ReviseMyMessagesFoldersRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["operation", ["MyMessagesFolderOperationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Operation")]],
    ["folderID", ["SOAP::SOAPLong[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :operation
  attr_accessor :folderID
  attr_accessor :folderName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, operation = nil, folderID = [], folderName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @operation = operation
    @folderID = folderID
    @folderName = folderName
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersResponseType
class ReviseMyMessagesFoldersResponseType
  @@schema_type = "ReviseMyMessagesFoldersResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeRequestType
class SellerReverseDisputeRequestType
  @@schema_type = "SellerReverseDisputeRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["disputeResolutionReason", ["DisputeResolutionReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionReason")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :disputeResolutionReason

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, disputeID = nil, disputeResolutionReason = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @disputeID = disputeID
    @disputeResolutionReason = disputeResolutionReason
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeResponseType
class SellerReverseDisputeResponseType
  @@schema_type = "SellerReverseDisputeResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceRequestType
class SendInvoiceRequestType
  @@schema_type = "SendInvoiceRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["internationalShippingServiceOptions", ["InternationalShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalShippingServiceOptions")]],
    ["shippingServiceOptions", ["ShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceOptions")]],
    ["salesTax", ["SalesTaxType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["insuranceFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceFee")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["payPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalEmailAddress")]],
    ["checkoutInstructions", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutInstructions")]],
    ["emailCopyToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCopyToSeller")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :internationalShippingServiceOptions
  attr_accessor :shippingServiceOptions
  attr_accessor :salesTax
  attr_accessor :insuranceOption
  attr_accessor :insuranceFee
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :checkoutInstructions
  attr_accessor :emailCopyToSeller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, transactionID = nil, orderID = nil, internationalShippingServiceOptions = [], shippingServiceOptions = [], salesTax = nil, insuranceOption = nil, insuranceFee = nil, paymentMethods = [], payPalEmailAddress = nil, checkoutInstructions = nil, emailCopyToSeller = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @internationalShippingServiceOptions = internationalShippingServiceOptions
    @shippingServiceOptions = shippingServiceOptions
    @salesTax = salesTax
    @insuranceOption = insuranceOption
    @insuranceFee = insuranceFee
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @checkoutInstructions = checkoutInstructions
    @emailCopyToSeller = emailCopyToSeller
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceResponseType
class SendInvoiceResponseType
  @@schema_type = "SendInvoiceResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesRequestType
class SetNotificationPreferencesRequestType
  @@schema_type = "SetNotificationPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["applicationDeliveryPreferences", ["ApplicationDeliveryPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDeliveryPreferences")]],
    ["userDeliveryPreferenceArray", ["NotificationEnableArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDeliveryPreferenceArray")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesResponseType
class SetNotificationPreferencesResponseType
  @@schema_type = "SetNotificationPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsRequestType
class SetPictureManagerDetailsRequestType
  @@schema_type = "SetPictureManagerDetailsRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["pictureManagerDetails", ["PictureManagerDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureManagerDetails")]],
    ["action", ["PictureManagerActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, pictureManagerDetails = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsResponseType
class SetPictureManagerDetailsResponseType
  @@schema_type = "SetPictureManagerDetailsResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionRulesRequestType
class SetPromotionRulesRequestType
  @@schema_type = "SetPromotionRulesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["operationType", ["OperationTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OperationType")]],
    ["promotionRuleArray", ["PromotionRuleArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRuleArray")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :operationType
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, operationType = nil, promotionRuleArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @operationType = operationType
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionRulesResponseType
class SetPromotionRulesResponseType
  @@schema_type = "SetPromotionRulesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetReturnURLRequestType
class SetReturnURLRequestType
  @@schema_type = "SetReturnURLRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["authenticationEntry", ["AuthenticationEntryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntry")]],
    ["applicationDisplayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationDisplayName")]],
    ["action", ["ModifyActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :authenticationEntry
  attr_accessor :applicationDisplayName
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, authenticationEntry = nil, applicationDisplayName = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @authenticationEntry = authenticationEntry
    @applicationDisplayName = applicationDisplayName
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetReturnURLResponseType
class SetReturnURLResponseType
  @@schema_type = "SetReturnURLResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreRequestType
class SetStoreRequestType
  @@schema_type = "SetStoreRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["store", ["StoreType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Store")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, store = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreResponseType
class SetStoreResponseType
  @@schema_type = "SetStoreResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageRequestType
class SetStoreCustomPageRequestType
  @@schema_type = "SetStoreCustomPageRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPage", ["StoreCustomPageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, customPage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageResponseType
class SetStoreCustomPageResponseType
  @@schema_type = "SetStoreCustomPageResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["customPage", ["StoreCustomPageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, customPage = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesRequestType
class SetStorePreferencesRequestType
  @@schema_type = "SetStorePreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["storePreferences", ["StorePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorePreferences")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, storePreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesResponseType
class SetStorePreferencesResponseType
  @@schema_type = "SetStorePreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableRequestType
class SetTaxTableRequestType
  @@schema_type = "SetTaxTableRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, taxTable = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableResponseType
class SetTaxTableResponseType
  @@schema_type = "SetTaxTableResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesRequestType
class SetUserNotesRequestType
  @@schema_type = "SetUserNotesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["action", ["SetUserNotesActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["noteText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NoteText")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :action
  attr_accessor :noteText

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, itemID = nil, action = nil, noteText = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @itemID = itemID
    @action = action
    @noteText = noteText
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesResponseType
class SetUserNotesResponseType
  @@schema_type = "SetUserNotesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesRequestType
class SetUserPreferencesRequestType
  @@schema_type = "SetUserPreferencesRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["bidderNoticePreferences", ["BidderNoticePreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderNoticePreferences")]],
    ["combinedPaymentPreferences", ["CombinedPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPreferences")]],
    ["crossPromotionPreferences", ["CrossPromotionPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionPreferences")]],
    ["sellerPaymentPreferences", ["SellerPaymentPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentPreferences")]],
    ["sellerFavoriteItemPreferences", ["SellerFavoriteItemPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerFavoriteItemPreferences")]],
    ["endOfAuctionEmailPreferences", ["EndOfAuctionEmailPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndOfAuctionEmailPreferences")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesResponseType
class SetUserPreferencesResponseType
  @@schema_type = "SetUserPreferencesResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationRequestType
class ValidateTestUserRegistrationRequestType
  @@schema_type = "ValidateTestUserRegistrationRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["registrationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationDate")]],
    ["subscribeSA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSA")]],
    ["subscribeSAPro", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSAPro")]],
    ["subscribeSM", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSM")]],
    ["subscribeSMPro", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscribeSMPro")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :feedbackScore
  attr_accessor :registrationDate
  attr_accessor :subscribeSA
  attr_accessor :subscribeSAPro
  attr_accessor :subscribeSM
  attr_accessor :subscribeSMPro

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, feedbackScore = nil, registrationDate = nil, subscribeSA = nil, subscribeSAPro = nil, subscribeSM = nil, subscribeSMPro = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @feedbackScore = feedbackScore
    @registrationDate = registrationDate
    @subscribeSA = subscribeSA
    @subscribeSAPro = subscribeSAPro
    @subscribeSM = subscribeSM
    @subscribeSMPro = subscribeSMPro
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationResponseType
class ValidateTestUserRegistrationResponseType
  @@schema_type = "ValidateTestUserRegistrationResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemRequestType
class VerifyAddItemRequestType
  @@schema_type = "VerifyAddItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, item = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @item = item
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemResponseType
class VerifyAddItemResponseType
  @@schema_type = "VerifyAddItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["category2ID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category2ID")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemRequestType
class VerifyAddSecondChanceItemRequestType
  @@schema_type = "VerifyAddSecondChanceItemRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["recipientBidderUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientBidderUserID")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["copyEmailToSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmailToSeller")]],
    ["duration", ["SecondChanceOfferDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :copyEmailToSeller
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :site

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil, recipientBidderUserID = nil, buyItNowPrice = nil, copyEmailToSeller = nil, duration = nil, itemID = nil, site = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @copyEmailToSeller = copyEmailToSeller
    @duration = duration
    @itemID = itemID
    @site = site
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemResponseType
class VerifyAddSecondChanceItemResponseType
  @@schema_type = "VerifyAddSecondChanceItemResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]],
    ["fees", ["FeesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fees")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil, fees = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
    @fees = fees
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractRequestType
class AbstractRequestType
  @@schema_type = "AbstractRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["detailLevel", ["DetailLevelCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailLevel")]],
    ["errorLanguage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorLanguage")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["errorHandling", ["ErrorHandlingCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorHandling")]],
    ["invocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, errorHandling = nil, invocationID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @errorHandling = errorHandling
    @invocationID = invocationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractResponseType
class AbstractResponseType
  @@schema_type = "AbstractResponseType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Timestamp")]],
    ["ack", ["AckCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Ack")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["errors", ["ErrorType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Errors")]],
    ["message", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["version", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Version")]],
    ["build", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Build")]],
    ["notificationEventName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEventName")]],
    ["duplicateInvocationDetails", ["DuplicateInvocationDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationDetails")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, notificationSignature = nil, hardExpirationWarning = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CustomSecurityHeaderType
class CustomSecurityHeaderType
  @@schema_type = "CustomSecurityHeaderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["hardExpirationWarning", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HardExpirationWarning")]],
    ["credentials", ["UserIdPasswordType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Credentials")]],
    ["notificationSignature", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationSignature")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationWarning
  attr_accessor :credentials
  attr_accessor :notificationSignature
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayAuthToken = nil, hardExpirationWarning = nil, credentials = nil, notificationSignature = nil)
    @eBayAuthToken = eBayAuthToken
    @hardExpirationWarning = hardExpirationWarning
    @credentials = credentials
    @notificationSignature = notificationSignature
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DuplicateInvocationDetailsType
class DuplicateInvocationDetailsType
  @@schema_type = "DuplicateInvocationDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["duplicateInvocationID", ["UUIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DuplicateInvocationID")]],
    ["status", ["InvocationStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["invocationTrackingID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvocationTrackingID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :duplicateInvocationID
  attr_accessor :status
  attr_accessor :invocationTrackingID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duplicateInvocationID = nil, status = nil, invocationTrackingID = nil)
    @duplicateInvocationID = duplicateInvocationID
    @status = status
    @invocationTrackingID = invocationTrackingID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorParameterType
class ErrorParameterType
  @@schema_type = "ErrorParameterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "ParamID") => "SOAP::SOAPString"}
  @@schema_element = [
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_ParamID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "ParamID")]
  end

  def xmlattr_ParamID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "ParamID")] = value
  end

  def initialize(value = nil)
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorType
class ErrorType
  @@schema_type = "ErrorType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shortMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShortMessage")]],
    ["longMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LongMessage")]],
    ["errorCode", ["Token", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCode")]],
    ["userDisplayHint", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserDisplayHint")]],
    ["severityCode", ["SeverityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SeverityCode")]],
    ["errorParameters", ["ErrorParameterType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorParameters")]],
    ["errorClassification", ["ErrorClassificationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorClassification")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :errorCode
  attr_accessor :userDisplayHint
  attr_accessor :severityCode
  attr_accessor :errorParameters
  attr_accessor :errorClassification
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shortMessage = nil, longMessage = nil, errorCode = nil, userDisplayHint = nil, severityCode = nil, errorParameters = [], errorClassification = nil)
    @shortMessage = shortMessage
    @longMessage = longMessage
    @errorCode = errorCode
    @userDisplayHint = userDisplayHint
    @severityCode = severityCode
    @errorParameters = errorParameters
    @errorClassification = errorClassification
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FaultDetailsType
class FaultDetailsType
  @@schema_type = "FaultDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["errorCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ErrorCode")]],
    ["severity", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Severity")]],
    ["detailedMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailedMessage")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :errorCode
  attr_accessor :severity
  attr_accessor :detailedMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(errorCode = nil, severity = nil, detailedMessage = nil)
    @errorCode = errorCode
    @severity = severity
    @detailedMessage = detailedMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MeasureType
class MeasureType < String
  @@schema_attribute = {XSD::QName.new(nil, "unit") => nil}

  def xmlattr_unit
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")]
  end

  def xmlattr_unit=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityType
class QuantityType < String
  @@schema_attribute = {XSD::QName.new(nil, "unit") => nil}

  def xmlattr_unit
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")]
  end

  def xmlattr_unit=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "unit")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdPasswordType
class UserIdPasswordType
  @@schema_type = "UserIdPasswordType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["appId", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AppId")]],
    ["devId", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DevId")]],
    ["authCert", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthCert")]],
    ["username", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Username")]],
    ["password", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Password")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :appId
  attr_accessor :devId
  attr_accessor :authCert
  attr_accessor :username
  attr_accessor :password
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(appId = nil, devId = nil, authCert = nil, username = nil, password = nil)
    @appId = appId
    @devId = devId
    @authCert = authCert
    @username = username
    @password = password
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XMLRequesterCredentialsType
class XMLRequesterCredentialsType
  @@schema_type = "XMLRequesterCredentialsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["username", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Username")]],
    ["password", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Password")]],
    ["eBayAuthToken", "SOAP::SOAPString"],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :username
  attr_accessor :password
  attr_accessor :eBayAuthToken
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(username = nil, password = nil, eBayAuthToken = nil)
    @username = username
    @password = password
    @eBayAuthToken = eBayAuthToken
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntriesType
class AccountEntriesType
  @@schema_type = "AccountEntriesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountEntry", ["AccountEntryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountEntry")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :accountEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountEntry = [])
    @accountEntry = accountEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntryType
class AccountEntryType
  @@schema_type = "AccountEntryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountDetailsEntryType", ["AccountDetailEntryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountDetailsEntryType")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["balance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Balance")]],
    ["credit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Credit")]],
    ["date", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Date")]],
    ["debit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Debit")]],
    ["grossDetailAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GrossDetailAmount")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["memo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Memo")]],
    ["netDetailAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NetDetailAmount")]],
    ["refNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefNumber")]],
    ["vATPercent", ["SOAP::SOAPDecimal", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :accountDetailsEntryType
  attr_accessor :description
  attr_accessor :balance
  attr_accessor :credit
  attr_accessor :date
  attr_accessor :debit
  attr_accessor :grossDetailAmount
  attr_accessor :itemID
  attr_accessor :memo
  attr_accessor :netDetailAmount
  attr_accessor :refNumber
  attr_accessor :vATPercent
  attr_accessor :title
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountDetailsEntryType = nil, description = nil, balance = nil, credit = nil, date = nil, debit = nil, grossDetailAmount = nil, itemID = nil, memo = nil, netDetailAmount = nil, refNumber = nil, vATPercent = nil, title = nil)
    @accountDetailsEntryType = accountDetailsEntryType
    @description = description
    @balance = balance
    @credit = credit
    @date = date
    @debit = debit
    @grossDetailAmount = grossDetailAmount
    @itemID = itemID
    @memo = memo
    @netDetailAmount = netDetailAmount
    @refNumber = refNumber
    @vATPercent = vATPercent
    @title = title
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountSummaryType
class AccountSummaryType
  @@schema_type = "AccountSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["accountState", ["AccountStateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountState")]],
    ["invoicePayment", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoicePayment")]],
    ["invoiceCredit", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceCredit")]],
    ["invoiceNewFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceNewFee")]],
    ["additionalAccount", ["AdditionalAccountType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdditionalAccount")]],
    ["amountPastDue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPastDue")]],
    ["bankAccountInfo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BankAccountInfo")]],
    ["bankModifyDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BankModifyDate")]],
    ["billingCycleDate", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BillingCycleDate")]],
    ["creditCardExpiration", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardExpiration")]],
    ["creditCardInfo", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardInfo")]],
    ["creditCardModifyDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreditCardModifyDate")]],
    ["currentBalance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentBalance")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["invoiceBalance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceBalance")]],
    ["invoiceDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InvoiceDate")]],
    ["lastAmountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastAmountPaid")]],
    ["lastPaymentDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastPaymentDate")]],
    ["pastDue", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PastDue")]],
    ["paymentMethod", ["SellerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :accountState
  attr_accessor :invoicePayment
  attr_accessor :invoiceCredit
  attr_accessor :invoiceNewFee
  attr_accessor :additionalAccount
  attr_accessor :amountPastDue
  attr_accessor :bankAccountInfo
  attr_accessor :bankModifyDate
  attr_accessor :billingCycleDate
  attr_accessor :creditCardExpiration
  attr_accessor :creditCardInfo
  attr_accessor :creditCardModifyDate
  attr_accessor :currentBalance
  attr_accessor :email
  attr_accessor :invoiceBalance
  attr_accessor :invoiceDate
  attr_accessor :lastAmountPaid
  attr_accessor :lastPaymentDate
  attr_accessor :pastDue
  attr_accessor :paymentMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountState = nil, invoicePayment = nil, invoiceCredit = nil, invoiceNewFee = nil, additionalAccount = [], amountPastDue = nil, bankAccountInfo = nil, bankModifyDate = nil, billingCycleDate = nil, creditCardExpiration = nil, creditCardInfo = nil, creditCardModifyDate = nil, currentBalance = nil, email = nil, invoiceBalance = nil, invoiceDate = nil, lastAmountPaid = nil, lastPaymentDate = nil, pastDue = nil, paymentMethod = nil)
    @accountState = accountState
    @invoicePayment = invoicePayment
    @invoiceCredit = invoiceCredit
    @invoiceNewFee = invoiceNewFee
    @additionalAccount = additionalAccount
    @amountPastDue = amountPastDue
    @bankAccountInfo = bankAccountInfo
    @bankModifyDate = bankModifyDate
    @billingCycleDate = billingCycleDate
    @creditCardExpiration = creditCardExpiration
    @creditCardInfo = creditCardInfo
    @creditCardModifyDate = creditCardModifyDate
    @currentBalance = currentBalance
    @email = email
    @invoiceBalance = invoiceBalance
    @invoiceDate = invoiceDate
    @lastAmountPaid = lastAmountPaid
    @lastPaymentDate = lastPaymentDate
    @pastDue = pastDue
    @paymentMethod = paymentMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadType
class AdFormatLeadType
  @@schema_type = "AdFormatLeadType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["additionalInformation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdditionalInformation")]],
    ["address", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Address")]],
    ["bestTimeToCall", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestTimeToCall")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["firstName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FirstName")]],
    ["lastName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastName")]],
    ["phone", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone")]],
    ["submittedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubmittedTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :additionalInformation
  attr_accessor :address
  attr_accessor :bestTimeToCall
  attr_accessor :email
  attr_accessor :firstName
  attr_accessor :lastName
  attr_accessor :phone
  attr_accessor :submittedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(additionalInformation = nil, address = nil, bestTimeToCall = nil, email = nil, firstName = nil, lastName = nil, phone = nil, submittedTime = nil)
    @additionalInformation = additionalInformation
    @address = address
    @bestTimeToCall = bestTimeToCall
    @email = email
    @firstName = firstName
    @lastName = lastName
    @phone = phone
    @submittedTime = submittedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdditionalAccountType
class AdditionalAccountType
  @@schema_type = "AdditionalAccountType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["balance", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Balance")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["accountCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AccountCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :balance
  attr_accessor :currency
  attr_accessor :accountCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(balance = nil, currency = nil, accountCode = nil)
    @balance = balance
    @currency = currency
    @accountCode = accountCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddressType
class AddressType
  @@schema_type = "AddressType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["street", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street")]],
    ["street1", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street1")]],
    ["street2", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Street2")]],
    ["cityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CityName")]],
    ["stateOrProvince", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StateOrProvince")]],
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["countryName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryName")]],
    ["phone", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Phone")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["addressID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressID")]],
    ["addressOwner", ["AddressOwnerCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressOwner")]],
    ["addressStatus", ["AddressStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressStatus")]],
    ["externalAddressID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAddressID")]],
    ["internationalName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalName")]],
    ["internationalStateAndCity", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalStateAndCity")]],
    ["internationalStreet", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalStreet")]],
    ["companyName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CompanyName")]],
    ["addressRecordType", ["AddressRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AddressRecordType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :street
  attr_accessor :street1
  attr_accessor :street2
  attr_accessor :cityName
  attr_accessor :stateOrProvince
  attr_accessor :country
  attr_accessor :countryName
  attr_accessor :phone
  attr_accessor :postalCode
  attr_accessor :addressID
  attr_accessor :addressOwner
  attr_accessor :addressStatus
  attr_accessor :externalAddressID
  attr_accessor :internationalName
  attr_accessor :internationalStateAndCity
  attr_accessor :internationalStreet
  attr_accessor :companyName
  attr_accessor :addressRecordType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, street = nil, street1 = nil, street2 = nil, cityName = nil, stateOrProvince = nil, country = nil, countryName = nil, phone = nil, postalCode = nil, addressID = nil, addressOwner = nil, addressStatus = nil, externalAddressID = nil, internationalName = nil, internationalStateAndCity = nil, internationalStreet = nil, companyName = nil, addressRecordType = nil)
    @name = name
    @street = street
    @street1 = street1
    @street2 = street2
    @cityName = cityName
    @stateOrProvince = stateOrProvince
    @country = country
    @countryName = countryName
    @phone = phone
    @postalCode = postalCode
    @addressID = addressID
    @addressOwner = addressOwner
    @addressStatus = addressStatus
    @externalAddressID = externalAddressID
    @internationalName = internationalName
    @internationalStateAndCity = internationalStateAndCity
    @internationalStreet = internationalStreet
    @companyName = companyName
    @addressRecordType = addressRecordType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AmountType
class AmountType < Float
  @@schema_attribute = {XSD::QName.new(nil, "currencyID") => nil}

  def xmlattr_currencyID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")]
  end

  def xmlattr_currencyID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApiAccessRuleType
class ApiAccessRuleType
  @@schema_type = "ApiAccessRuleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["callName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallName")]],
    ["countsTowardAggregate", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountsTowardAggregate")]],
    ["dailyHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailyHardLimit")]],
    ["dailySoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailySoftLimit")]],
    ["dailyUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DailyUsage")]],
    ["hourlyHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlyHardLimit")]],
    ["hourlySoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlySoftLimit")]],
    ["hourlyUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HourlyUsage")]],
    ["period", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Period")]],
    ["periodicHardLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicHardLimit")]],
    ["periodicSoftLimit", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicSoftLimit")]],
    ["periodicUsage", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicUsage")]],
    ["periodicStartDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodicStartDate")]],
    ["modTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModTime")]],
    ["ruleCurrentStatus", ["AccessRuleCurrentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuleCurrentStatus")]],
    ["ruleStatus", ["AccessRuleStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuleStatus")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :callName
  attr_accessor :countsTowardAggregate
  attr_accessor :dailyHardLimit
  attr_accessor :dailySoftLimit
  attr_accessor :dailyUsage
  attr_accessor :hourlyHardLimit
  attr_accessor :hourlySoftLimit
  attr_accessor :hourlyUsage
  attr_accessor :period
  attr_accessor :periodicHardLimit
  attr_accessor :periodicSoftLimit
  attr_accessor :periodicUsage
  attr_accessor :periodicStartDate
  attr_accessor :modTime
  attr_accessor :ruleCurrentStatus
  attr_accessor :ruleStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(callName = nil, countsTowardAggregate = nil, dailyHardLimit = nil, dailySoftLimit = nil, dailyUsage = nil, hourlyHardLimit = nil, hourlySoftLimit = nil, hourlyUsage = nil, period = nil, periodicHardLimit = nil, periodicSoftLimit = nil, periodicUsage = nil, periodicStartDate = nil, modTime = nil, ruleCurrentStatus = nil, ruleStatus = nil)
    @callName = callName
    @countsTowardAggregate = countsTowardAggregate
    @dailyHardLimit = dailyHardLimit
    @dailySoftLimit = dailySoftLimit
    @dailyUsage = dailyUsage
    @hourlyHardLimit = hourlyHardLimit
    @hourlySoftLimit = hourlySoftLimit
    @hourlyUsage = hourlyUsage
    @period = period
    @periodicHardLimit = periodicHardLimit
    @periodicSoftLimit = periodicSoftLimit
    @periodicUsage = periodicUsage
    @periodicStartDate = periodicStartDate
    @modTime = modTime
    @ruleCurrentStatus = ruleCurrentStatus
    @ruleStatus = ruleStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeliveryPreferencesType
class ApplicationDeliveryPreferencesType
  @@schema_type = "ApplicationDeliveryPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["applicationURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationURL")]],
    ["applicationEnable", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationEnable")]],
    ["notificationPayloadType", ["NotificationPayloadTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationPayloadType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :applicationURL
  attr_accessor :applicationEnable
  attr_accessor :notificationPayloadType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationURL = nil, applicationEnable = nil, notificationPayloadType = nil)
    @applicationURL = applicationURL
    @applicationEnable = applicationEnable
    @notificationPayloadType = notificationPayloadType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeArrayType
class AttributeArrayType < ::Array
  @@schema_type = "AttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Attribute", ["AttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Attribute")]]]
end

# {urn:ebay:apis:eBLBaseComponents}AttributeRecommendationsType
class AttributeRecommendationsType
  @@schema_type = "AttributeRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetArrayType
class AttributeSetArrayType < ::Array
  @@schema_type = "AttributeSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["AttributeSet", ["AttributeSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSet")]]]
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetType
class AttributeSetType
  @@schema_type = "AttributeSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "attributeSetID") => "SOAP::SOAPInt", XSD::QName.new(nil, "attributeSetVersion") => "SOAP::SOAPString"}
  @@schema_element = [
    ["attribute", ["AttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Attribute")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")]
  end

  def xmlattr_attributeSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")] = value
  end

  def xmlattr_attributeSetVersion
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetVersion")]
  end

  def xmlattr_attributeSetVersion=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetVersion")] = value
  end

  def initialize(attribute = [])
    @attribute = attribute
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeType
class AttributeType
  @@schema_type = "AttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "attributeID") => "SOAP::SOAPInt", XSD::QName.new(nil, "attributeLabel") => "SOAP::SOAPString"}
  @@schema_element = [
    ["value", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeID")]
  end

  def xmlattr_attributeID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeID")] = value
  end

  def xmlattr_attributeLabel
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeLabel")]
  end

  def xmlattr_attributeLabel=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeLabel")] = value
  end

  def initialize(value = [])
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AuthenticationEntryArrayType
class AuthenticationEntryArrayType < ::Array
  @@schema_type = "AuthenticationEntryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["AuthenticationEntry", ["AuthenticationEntryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuthenticationEntry")]]]
end

# {urn:ebay:apis:eBLBaseComponents}AuthenticationEntryType
class AuthenticationEntryType
  @@schema_type = "AuthenticationEntryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["acceptURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AcceptURL")]],
    ["privacyPolicyURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivacyPolicyURL")]],
    ["rejectURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RejectURL")]],
    ["ruName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RuName")]],
    ["tokenReturnMethod", ["TokenReturnMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TokenReturnMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :acceptURL
  attr_accessor :privacyPolicyURL
  attr_accessor :rejectURL
  attr_accessor :ruName
  attr_accessor :tokenReturnMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(acceptURL = nil, privacyPolicyURL = nil, rejectURL = nil, ruName = nil, tokenReturnMethod = nil)
    @acceptURL = acceptURL
    @privacyPolicyURL = privacyPolicyURL
    @rejectURL = rejectURL
    @ruName = ruName
    @tokenReturnMethod = tokenReturnMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicAmountType
class BasicAmountType < String
  @@schema_attribute = {XSD::QName.new(nil, "currencyID") => nil}

  def xmlattr_currencyID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")]
  end

  def xmlattr_currencyID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "currencyID")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferArrayType
class BestOfferArrayType < ::Array
  @@schema_type = "BestOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["BestOffer", ["BestOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOffer")]]]
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferDetailsType
class BestOfferDetailsType
  @@schema_type = "BestOfferDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCount")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["bestOffer", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOffer")]],
    ["bestOfferStatus", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferStatus")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :bestOfferCount
  attr_accessor :bestOfferEnabled
  attr_accessor :bestOffer
  attr_accessor :bestOfferStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferCount = nil, bestOfferEnabled = nil, bestOffer = nil, bestOfferStatus = nil)
    @bestOfferCount = bestOfferCount
    @bestOfferEnabled = bestOfferEnabled
    @bestOffer = bestOffer
    @bestOfferStatus = bestOfferStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferEnabledDefinitionType
class BestOfferEnabledDefinitionType
  @@schema_type = "BestOfferEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferType
class BestOfferType
  @@schema_type = "BestOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferID")]],
    ["expirationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationTime")]],
    ["buyer", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Buyer")]],
    ["price", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Price")]],
    ["status", ["BestOfferStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["buyerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerMessage")]],
    ["sellerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerMessage")]],
    ["callStatus", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CallStatus")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :bestOfferID
  attr_accessor :expirationTime
  attr_accessor :buyer
  attr_accessor :price
  attr_accessor :status
  attr_accessor :quantity
  attr_accessor :buyerMessage
  attr_accessor :sellerMessage
  attr_accessor :callStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferID = nil, expirationTime = nil, buyer = nil, price = nil, status = nil, quantity = nil, buyerMessage = nil, sellerMessage = nil, callStatus = nil)
    @bestOfferID = bestOfferID
    @expirationTime = expirationTime
    @buyer = buyer
    @price = price
    @status = status
    @quantity = quantity
    @buyerMessage = buyerMessage
    @sellerMessage = sellerMessage
    @callStatus = callStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderNoticePreferencesType
class BidderNoticePreferencesType
  @@schema_type = "BidderNoticePreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["unsuccessfulBidderNoticeIncludeMyItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnsuccessfulBidderNoticeIncludeMyItems")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :unsuccessfulBidderNoticeIncludeMyItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unsuccessfulBidderNoticeIncludeMyItems = nil)
    @unsuccessfulBidderNoticeIncludeMyItems = unsuccessfulBidderNoticeIncludeMyItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingDetailsType
class BiddingDetailsType
  @@schema_type = "BiddingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["convertedMaxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedMaxBid")]],
    ["maxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxBid")]],
    ["quantityBid", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityBid")]],
    ["quantityWon", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityWon")]],
    ["winning", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Winning")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :convertedMaxBid
  attr_accessor :maxBid
  attr_accessor :quantityBid
  attr_accessor :quantityWon
  attr_accessor :winning
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(convertedMaxBid = nil, maxBid = nil, quantityBid = nil, quantityWon = nil, winning = nil)
    @convertedMaxBid = convertedMaxBid
    @maxBid = maxBid
    @quantityBid = quantityBid
    @quantityWon = quantityWon
    @winning = winning
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRequirementsType
class BuyerRequirementsType
  @@schema_type = "BuyerRequirementsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["linkedPayPalAccount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkedPayPalAccount")]]]

  attr_accessor :linkedPayPalAccount

  def initialize(linkedPayPalAccount = nil)
    @linkedPayPalAccount = linkedPayPalAccount
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerType
class BuyerType
  @@schema_type = "BuyerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :shippingAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingAddress = nil)
    @shippingAddress = shippingAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideDetailsType
class BuyingGuideDetailsType
  @@schema_type = "BuyingGuideDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["buyingGuide", ["BuyingGuideType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuide")]],
    ["buyingGuideHub", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyingGuideHub")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :buyingGuide
  attr_accessor :buyingGuideHub
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyingGuide = [], buyingGuideHub = nil)
    @buyingGuide = buyingGuide
    @buyingGuideHub = buyingGuideHub
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideType
class BuyingGuideType
  @@schema_type = "BuyingGuideType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :uRL
  attr_accessor :categoryID
  attr_accessor :productFinderID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRL = nil, categoryID = nil, productFinderID = nil)
    @name = name
    @uRL = uRL
    @categoryID = categoryID
    @productFinderID = productFinderID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingSummaryType
class BuyingSummaryType
  @@schema_type = "BuyingSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["biddingCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingCount")]],
    ["winningCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WinningCount")]],
    ["totalWinningCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalWinningCost")]],
    ["wonCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonCount")]],
    ["totalWonCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalWonCost")]],
    ["wonDurationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WonDurationInDays")]],
    ["bestOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferCount")]]]

  attr_accessor :biddingCount
  attr_accessor :winningCount
  attr_accessor :totalWinningCost
  attr_accessor :wonCount
  attr_accessor :totalWonCost
  attr_accessor :wonDurationInDays
  attr_accessor :bestOfferCount

  def initialize(biddingCount = nil, winningCount = nil, totalWinningCost = nil, wonCount = nil, totalWonCost = nil, wonDurationInDays = nil, bestOfferCount = nil)
    @biddingCount = biddingCount
    @winningCount = winningCount
    @totalWinningCost = totalWinningCost
    @wonCount = wonCount
    @totalWonCost = totalWonCost
    @wonDurationInDays = wonDurationInDays
    @bestOfferCount = bestOfferCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingPreferencesType
class CalculatedShippingPreferencesType
  @@schema_type = "CalculatedShippingPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["calculatedShippingAmountForEntireOrder", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingAmountForEntireOrder")]],
    ["calculatedShippingChargeOption", ["CalculatedShippingChargeOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingChargeOption")]],
    ["calculatedShippingRateOption", ["CalculatedShippingRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingRateOption")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :calculatedShippingAmountForEntireOrder
  attr_accessor :calculatedShippingChargeOption
  attr_accessor :calculatedShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingAmountForEntireOrder = nil, calculatedShippingChargeOption = nil, calculatedShippingRateOption = nil, insuranceOption = nil)
    @calculatedShippingAmountForEntireOrder = calculatedShippingAmountForEntireOrder
    @calculatedShippingChargeOption = calculatedShippingChargeOption
    @calculatedShippingRateOption = calculatedShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateType
class CalculatedShippingRateType
  @@schema_type = "CalculatedShippingRateType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["originatingPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OriginatingPostalCode")]],
    ["packageDepth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageDepth")]],
    ["packageLength", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageLength")]],
    ["packageWidth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageWidth")]],
    ["packagingHandlingCosts", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackagingHandlingCosts")]],
    ["shippingIrregular", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIrregular")]],
    ["shippingPackage", ["ShippingPackageCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingPackage")]],
    ["weightMajor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMajor")]],
    ["weightMinor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMinor")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :originatingPostalCode
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :packagingHandlingCosts
  attr_accessor :shippingIrregular
  attr_accessor :shippingPackage
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originatingPostalCode = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, packagingHandlingCosts = nil, shippingIrregular = nil, shippingPackage = nil, weightMajor = nil, weightMinor = nil)
    @originatingPostalCode = originatingPostalCode
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @packagingHandlingCosts = packagingHandlingCosts
    @shippingIrregular = shippingIrregular
    @shippingPackage = shippingPackage
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferArrayType
class CancelOfferArrayType
  @@schema_type = "CancelOfferArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["cancelOffer", ["CancelOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CancelOffer")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :cancelOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cancelOffer = [])
    @cancelOffer = cancelOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferType
class CancelOfferType
  @@schema_type = "CancelOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["offer", ["OfferType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Offer")]],
    ["explanation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Explanation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :offer
  attr_accessor :explanation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(offer = nil, explanation = nil)
    @offer = offer
    @explanation = explanation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryArrayType
class CategoryArrayType < ::Array
  @@schema_type = "CategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Category", ["CategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]]]
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureType
class CategoryFeatureType
  @@schema_type = "CategoryFeatureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["listingDuration", ["ListingDurationReferenceType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["shippingTermsRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :categoryID
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil)
    @categoryID = categoryID
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFinanceOfferArrayType
class CategoryFinanceOfferArrayType < ::Array
  @@schema_type = "CategoryFinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["CategoryFinanceOffer", ["CategoryFinanceOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryFinanceOffer")]]]
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFinanceOfferType
class CategoryFinanceOfferType
  @@schema_type = "CategoryFinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["financeOfferID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :financeOfferID
  attr_accessor :categoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(financeOfferID = [], categoryID = nil)
    @financeOfferID = financeOfferID
    @categoryID = categoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryMappingType
class CategoryMappingType
  @@schema_type = "CategoryMappingType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "oldID") => "SOAP::SOAPString", XSD::QName.new(nil, "id") => "SOAP::SOAPString"}
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_oldID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "oldID")]
  end

  def xmlattr_oldID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "oldID")] = value
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryType
class CategoryType
  @@schema_type = "CategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["autoPayEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AutoPayEnabled")]],
    ["b2BVATEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "B2BVATEnabled")]],
    ["catalogEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CatalogEnabled")]],
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["categoryLevel", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryLevel")]],
    ["categoryName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryName")]],
    ["categoryParentID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParentID")]],
    ["categoryParentName", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryParentName")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productSearchPageAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchPageAvailable")]],
    ["productFinderAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderAvailable")]],
    ["productFinderIDs", ["ExtendedProductFinderIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderIDs")]],
    ["characteristicsSets", ["CharacteristicsSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSets")]],
    ["expired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Expired")]],
    ["intlAutosFixedCat", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IntlAutosFixedCat")]],
    ["leafCategory", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeafCategory")]],
    ["virtual", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Virtual")]],
    ["numOfItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumOfItems")]],
    ["sellerGuaranteeEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerGuaranteeEligible")]],
    ["oRPA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ORPA")]],
    ["oRRA", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ORRA")]],
    ["lSD", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LSD")]],
    ["keywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Keywords")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :bestOfferEnabled
  attr_accessor :autoPayEnabled
  attr_accessor :b2BVATEnabled
  attr_accessor :catalogEnabled
  attr_accessor :categoryID
  attr_accessor :categoryLevel
  attr_accessor :categoryName
  attr_accessor :categoryParentID
  attr_accessor :categoryParentName
  attr_accessor :productFinderID
  attr_accessor :productSearchPageAvailable
  attr_accessor :productFinderAvailable
  attr_accessor :productFinderIDs
  attr_accessor :characteristicsSets
  attr_accessor :expired
  attr_accessor :intlAutosFixedCat
  attr_accessor :leafCategory
  attr_accessor :virtual
  attr_accessor :numOfItems
  attr_accessor :sellerGuaranteeEligible
  attr_accessor :oRPA
  attr_accessor :oRRA
  attr_accessor :lSD
  attr_accessor :keywords
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferEnabled = nil, autoPayEnabled = nil, b2BVATEnabled = nil, catalogEnabled = nil, categoryID = nil, categoryLevel = nil, categoryName = nil, categoryParentID = [], categoryParentName = [], productFinderID = nil, productSearchPageAvailable = nil, productFinderAvailable = nil, productFinderIDs = [], characteristicsSets = [], expired = nil, intlAutosFixedCat = nil, leafCategory = nil, virtual = nil, numOfItems = nil, sellerGuaranteeEligible = nil, oRPA = nil, oRRA = nil, lSD = nil, keywords = nil)
    @bestOfferEnabled = bestOfferEnabled
    @autoPayEnabled = autoPayEnabled
    @b2BVATEnabled = b2BVATEnabled
    @catalogEnabled = catalogEnabled
    @categoryID = categoryID
    @categoryLevel = categoryLevel
    @categoryName = categoryName
    @categoryParentID = categoryParentID
    @categoryParentName = categoryParentName
    @productFinderID = productFinderID
    @productSearchPageAvailable = productSearchPageAvailable
    @productFinderAvailable = productFinderAvailable
    @productFinderIDs = productFinderIDs
    @characteristicsSets = characteristicsSets
    @expired = expired
    @intlAutosFixedCat = intlAutosFixedCat
    @leafCategory = leafCategory
    @virtual = virtual
    @numOfItems = numOfItems
    @sellerGuaranteeEligible = sellerGuaranteeEligible
    @oRPA = oRPA
    @oRRA = oRRA
    @lSD = lSD
    @keywords = keywords
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicSetIDsType
class CharacteristicSetIDsType < ::Array
  @@schema_type = "string"
  @@schema_ns = "http://www.w3.org/2001/XMLSchema"
  @@schema_element = [["ID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicType
class CharacteristicType
  @@schema_type = "CharacteristicType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeID")]],
    ["dateFormat", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DateFormat")]],
    ["displaySequence", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplaySequence")]],
    ["displayUOM", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayUOM")]],
    ["label", ["LabelType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Label")]],
    ["sortOrder", ["SortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortOrder")]],
    ["valueList", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueList")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attributeID
  attr_accessor :dateFormat
  attr_accessor :displaySequence
  attr_accessor :displayUOM
  attr_accessor :label
  attr_accessor :sortOrder
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateFormat = nil, displaySequence = nil, displayUOM = nil, label = nil, sortOrder = nil, valueList = [])
    @attributeID = attributeID
    @dateFormat = dateFormat
    @displaySequence = displaySequence
    @displayUOM = displayUOM
    @label = label
    @sortOrder = sortOrder
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetType
class CharacteristicsSetType
  @@schema_type = "CharacteristicsSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["attributeSetVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetVersion")]],
    ["characteristics", ["CharacteristicType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Characteristics")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :attributeSetID
  attr_accessor :attributeSetVersion
  attr_accessor :characteristics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, attributeSetID = nil, attributeSetVersion = nil, characteristics = [])
    @name = name
    @attributeSetID = attributeSetID
    @attributeSetVersion = attributeSetVersion
    @characteristics = characteristics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationType
class CharityAffiliationType
  @@schema_type = "CharityAffiliationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "id") => "SOAP::SOAPString", XSD::QName.new(nil, "type") => nil}
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def xmlattr_type
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")]
  end

  def xmlattr_type=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationsType
class CharityAffiliationsType < ::Array
  @@schema_type = "int"
  @@schema_ns = "http://www.w3.org/2001/XMLSchema"
  @@schema_element = [["CharityID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}CharityInfoType
class CharityInfoType
  @@schema_type = "CharityInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "id") => "SOAP::SOAPString"}
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["mission", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Mission")]],
    ["logoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["status", ["CharityStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["searchableString", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchableString")]],
    ["charityRegion", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityRegion")]],
    ["charityDomain", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityDomain")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :searchableString
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :charityID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_id
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")]
  end

  def xmlattr_id=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "id")] = value
  end

  def initialize(name = nil, mission = nil, logoURL = nil, status = nil, searchableString = nil, charityRegion = nil, charityDomain = [], charityID = nil)
    @name = name
    @mission = mission
    @logoURL = logoURL
    @status = status
    @searchableString = searchableString
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @charityID = charityID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerType
class CharitySellerType
  @@schema_type = "CharitySellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["charitySellerStatus", ["CharitySellerStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharitySellerStatus")]],
    ["charityAffiliation", ["CharityAffiliationType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityAffiliation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :charitySellerStatus
  attr_accessor :charityAffiliation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charitySellerStatus = nil, charityAffiliation = [])
    @charitySellerStatus = charitySellerStatus
    @charityAffiliation = charityAffiliation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityType
class CharityType
  @@schema_type = "CharityType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["charityName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityName")]],
    ["charityNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityNumber")]],
    ["donationPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DonationPercent")]],
    ["charityID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityID")]],
    ["mission", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Mission")]],
    ["logoURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["status", ["CharityStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["charityListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityListing")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :charityName
  attr_accessor :charityNumber
  attr_accessor :donationPercent
  attr_accessor :charityID
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :charityListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityName = nil, charityNumber = nil, donationPercent = nil, charityID = nil, mission = nil, logoURL = nil, status = nil, charityListing = nil)
    @charityName = charityName
    @charityNumber = charityNumber
    @donationPercent = donationPercent
    @charityID = charityID
    @mission = mission
    @logoURL = logoURL
    @status = status
    @charityListing = charityListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusType
class CheckoutStatusType
  @@schema_type = "CheckoutStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayPaymentStatus", "PaymentStatusCodeType"],
    ["lastModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedTime")]],
    ["paymentMethod", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethod")]],
    ["status", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :eBayPaymentStatus
  attr_accessor :lastModifiedTime
  attr_accessor :paymentMethod
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, lastModifiedTime = nil, paymentMethod = nil, status = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @lastModifiedTime = lastModifiedTime
    @paymentMethod = paymentMethod
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPreferencesType
class CombinedPaymentPreferencesType
  @@schema_type = "CombinedPaymentPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["calculatedShippingPreferences", ["CalculatedShippingPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingPreferences")]],
    ["combinedPaymentOption", ["CombinedPaymentOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentOption")]],
    ["combinedPaymentPeriod", ["CombinedPaymentPeriodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CombinedPaymentPeriod")]],
    ["flatShippingPreferences", ["FlatShippingPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatShippingPreferences")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :calculatedShippingPreferences
  attr_accessor :combinedPaymentOption
  attr_accessor :combinedPaymentPeriod
  attr_accessor :flatShippingPreferences
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingPreferences = nil, combinedPaymentOption = nil, combinedPaymentPeriod = nil, flatShippingPreferences = nil)
    @calculatedShippingPreferences = calculatedShippingPreferences
    @combinedPaymentOption = combinedPaymentOption
    @combinedPaymentPeriod = combinedPaymentPeriod
    @flatShippingPreferences = flatShippingPreferences
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CountryDetailsType
class CountryDetailsType
  @@schema_type = "CountryDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :country
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(country = nil, description = nil)
    @country = country
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionPreferencesType
class CrossPromotionPreferencesType
  @@schema_type = "CrossPromotionPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["crossPromotionEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotionEnabled")]],
    ["crossSellItemFormatSortFilter", ["ItemFormatSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellItemFormatSortFilter")]],
    ["crossSellGallerySortFilter", ["GallerySortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellGallerySortFilter")]],
    ["crossSellItemSortFilter", ["ItemSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossSellItemSortFilter")]],
    ["upSellItemFormatSortFilter", ["ItemFormatSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellItemFormatSortFilter")]],
    ["upSellGallerySortFilter", ["GallerySortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellGallerySortFilter")]],
    ["upSellItemSortFilter", ["ItemSortFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UpSellItemSortFilter")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :crossPromotionEnabled
  attr_accessor :crossSellItemFormatSortFilter
  attr_accessor :crossSellGallerySortFilter
  attr_accessor :crossSellItemSortFilter
  attr_accessor :upSellItemFormatSortFilter
  attr_accessor :upSellGallerySortFilter
  attr_accessor :upSellItemSortFilter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(crossPromotionEnabled = nil, crossSellItemFormatSortFilter = nil, crossSellGallerySortFilter = nil, crossSellItemSortFilter = nil, upSellItemFormatSortFilter = nil, upSellGallerySortFilter = nil, upSellItemSortFilter = nil)
    @crossPromotionEnabled = crossPromotionEnabled
    @crossSellItemFormatSortFilter = crossSellItemFormatSortFilter
    @crossSellGallerySortFilter = crossSellGallerySortFilter
    @crossSellItemSortFilter = crossSellItemSortFilter
    @upSellItemFormatSortFilter = upSellItemFormatSortFilter
    @upSellGallerySortFilter = upSellGallerySortFilter
    @upSellItemSortFilter = upSellItemSortFilter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionsType
class CrossPromotionsType
  @@schema_type = "CrossPromotionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["primaryScheme", ["PromotionSchemeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrimaryScheme")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["sellerID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerID")]],
    ["shippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDiscount")]],
    ["sellerKey", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerKey")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["promotedItem", ["PromotedItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedItem")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :itemID
  attr_accessor :primaryScheme
  attr_accessor :promotionMethod
  attr_accessor :sellerID
  attr_accessor :shippingDiscount
  attr_accessor :sellerKey
  attr_accessor :storeName
  attr_accessor :promotedItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, primaryScheme = nil, promotionMethod = nil, sellerID = nil, shippingDiscount = nil, sellerKey = nil, storeName = nil, promotedItem = [])
    @itemID = itemID
    @primaryScheme = primaryScheme
    @promotionMethod = promotionMethod
    @sellerID = sellerID
    @shippingDiscount = shippingDiscount
    @sellerKey = sellerKey
    @storeName = storeName
    @promotedItem = promotedItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyDetailsType
class CurrencyDetailsType
  @@schema_type = "CurrencyDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :currency
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(currency = nil, description = nil)
    @currency = currency
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DataElementSetType
class DataElementSetType
  @@schema_type = "DataElementSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "attributeSetID") => "SOAP::SOAPInt"}
  @@schema_element = [
    ["dataElement", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElement")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :dataElement
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_attributeSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")]
  end

  def xmlattr_attributeSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "attributeSetID")] = value
  end

  def initialize(dataElement = nil)
    @dataElement = dataElement
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateType
class DescriptionTemplateType
  @@schema_type = "DescriptionTemplateType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["groupID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupID")]],
    ["iD", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]],
    ["imageURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ImageURL")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["templateXML", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TemplateXML")]],
    ["type", ["DescriptionTemplateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :groupID
  attr_accessor :iD
  attr_accessor :imageURL
  attr_accessor :name
  attr_accessor :templateXML
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, iD = nil, imageURL = nil, name = nil, templateXML = nil, type = nil)
    @groupID = groupID
    @iD = iD
    @imageURL = imageURL
    @name = name
    @templateXML = templateXML
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeArrayType
class DisputeArrayType < ::Array
  @@schema_type = "DisputeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Dispute", ["DisputeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Dispute")]]]
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterCountType
class DisputeFilterCountType
  @@schema_type = "DisputeFilterCountType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeFilterType", ["DisputeFilterTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeFilterType")]],
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :disputeFilterType
  attr_accessor :totalAvailable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeFilterType = nil, totalAvailable = nil)
    @disputeFilterType = disputeFilterType
    @totalAvailable = totalAvailable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageType
class DisputeMessageType
  @@schema_type = "DisputeMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["messageID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["messageSource", ["DisputeMessageSourceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageSource")]],
    ["messageCreationTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageCreationTime")]],
    ["messageText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageText")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :messageID
  attr_accessor :messageSource
  attr_accessor :messageCreationTime
  attr_accessor :messageText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageID = nil, messageSource = nil, messageCreationTime = nil, messageText = nil)
    @messageID = messageID
    @messageSource = messageSource
    @messageCreationTime = messageCreationTime
    @messageText = messageText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionType
class DisputeResolutionType
  @@schema_type = "DisputeResolutionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeResolutionRecordType", ["DisputeResolutionRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionRecordType")]],
    ["disputeResolutionReason", ["DisputeResolutionReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolutionReason")]],
    ["resolutionTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :disputeResolutionRecordType
  attr_accessor :disputeResolutionReason
  attr_accessor :resolutionTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeResolutionRecordType = nil, disputeResolutionReason = nil, resolutionTime = nil)
    @disputeResolutionRecordType = disputeResolutionRecordType
    @disputeResolutionReason = disputeResolutionReason
    @resolutionTime = resolutionTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeType
class DisputeType
  @@schema_type = "DisputeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["disputeID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeID")]],
    ["disputeRecordType", ["DisputeRecordTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeRecordType")]],
    ["disputeState", ["DisputeStateCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeState")]],
    ["disputeStatus", ["DisputeStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeStatus")]],
    ["otherPartyRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OtherPartyRole")]],
    ["otherPartyName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OtherPartyName")]],
    ["userRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserRole")]],
    ["buyerUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerUserID")]],
    ["sellerUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerUserID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["disputeReason", ["DisputeReasonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeReason")]],
    ["disputeExplanation", ["DisputeExplanationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeExplanation")]],
    ["disputeCreditEligibility", ["DisputeCreditEligibilityCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeCreditEligibility")]],
    ["disputeCreatedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeCreatedTime")]],
    ["disputeModifiedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeModifiedTime")]],
    ["disputeResolution", ["DisputeResolutionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeResolution")]],
    ["disputeMessage", ["DisputeMessageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisputeMessage")]],
    ["escalation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Escalation")]],
    ["purchaseProtection", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PurchaseProtection")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :disputeID
  attr_accessor :disputeRecordType
  attr_accessor :disputeState
  attr_accessor :disputeStatus
  attr_accessor :otherPartyRole
  attr_accessor :otherPartyName
  attr_accessor :userRole
  attr_accessor :buyerUserID
  attr_accessor :sellerUserID
  attr_accessor :transactionID
  attr_accessor :item
  attr_accessor :disputeReason
  attr_accessor :disputeExplanation
  attr_accessor :disputeCreditEligibility
  attr_accessor :disputeCreatedTime
  attr_accessor :disputeModifiedTime
  attr_accessor :disputeResolution
  attr_accessor :disputeMessage
  attr_accessor :escalation
  attr_accessor :purchaseProtection
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeID = nil, disputeRecordType = nil, disputeState = nil, disputeStatus = nil, otherPartyRole = nil, otherPartyName = nil, userRole = nil, buyerUserID = nil, sellerUserID = nil, transactionID = nil, item = nil, disputeReason = nil, disputeExplanation = nil, disputeCreditEligibility = nil, disputeCreatedTime = nil, disputeModifiedTime = nil, disputeResolution = [], disputeMessage = [], escalation = nil, purchaseProtection = nil)
    @disputeID = disputeID
    @disputeRecordType = disputeRecordType
    @disputeState = disputeState
    @disputeStatus = disputeStatus
    @otherPartyRole = otherPartyRole
    @otherPartyName = otherPartyName
    @userRole = userRole
    @buyerUserID = buyerUserID
    @sellerUserID = sellerUserID
    @transactionID = transactionID
    @item = item
    @disputeReason = disputeReason
    @disputeExplanation = disputeExplanation
    @disputeCreditEligibility = disputeCreditEligibility
    @disputeCreatedTime = disputeCreatedTime
    @disputeModifiedTime = disputeModifiedTime
    @disputeResolution = disputeResolution
    @disputeMessage = disputeMessage
    @escalation = escalation
    @purchaseProtection = purchaseProtection
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DistanceType
class DistanceType
  @@schema_type = "DistanceType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["distanceMeasurement", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DistanceMeasurement")]],
    ["distanceUnit", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DistanceUnit")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :distanceMeasurement
  attr_accessor :distanceUnit
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(distanceMeasurement = nil, distanceUnit = nil)
    @distanceMeasurement = distanceMeasurement
    @distanceUnit = distanceUnit
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionEmailPreferencesType
class EndOfAuctionEmailPreferencesType
  @@schema_type = "EndOfAuctionEmailPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["templateText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TemplateText")]],
    ["logoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoURL")]],
    ["logoType", ["EndOfAuctionLogoTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoType")]],
    ["emailCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCustomized")]],
    ["textCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TextCustomized")]],
    ["logoCustomized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoCustomized")]],
    ["copyEmail", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CopyEmail")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :templateText
  attr_accessor :logoURL
  attr_accessor :logoType
  attr_accessor :emailCustomized
  attr_accessor :textCustomized
  attr_accessor :logoCustomized
  attr_accessor :copyEmail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(templateText = nil, logoURL = nil, logoType = nil, emailCustomized = nil, textCustomized = nil, logoCustomized = nil, copyEmail = nil)
    @templateText = templateText
    @logoURL = logoURL
    @logoType = logoType
    @emailCustomized = emailCustomized
    @textCustomized = textCustomized
    @logoCustomized = logoCustomized
    @copyEmail = copyEmail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpansionArrayType
class ExpansionArrayType
  @@schema_type = "ExpansionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["expansionItem", ["SearchResultItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpansionItem")]],
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]]]

  attr_accessor :expansionItem
  attr_accessor :totalAvailable

  def initialize(expansionItem = [], totalAvailable = nil)
    @expansionItem = expansionItem
    @totalAvailable = totalAvailable
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedProductFinderIDType
class ExtendedProductFinderIDType
  @@schema_type = "ExtendedProductFinderIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productFinderBuySide", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderBuySide")]]]

  attr_accessor :productFinderID
  attr_accessor :productFinderBuySide

  def initialize(productFinderID = nil, productFinderBuySide = nil)
    @productFinderID = productFinderID
    @productFinderBuySide = productFinderBuySide
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalAlertIDArrayType
class ExternalAlertIDArrayType < ::Array
  @@schema_type = "string"
  @@schema_ns = "http://www.w3.org/2001/XMLSchema"
  @@schema_element = [["ExternalAlertID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAlertID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductIDType
class ExternalProductIDType
  @@schema_type = "ExternalProductIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["returnSearchResultOnDuplicates", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnSearchResultOnDuplicates")]],
    ["type", ["ExternalProductCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Type")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :value
  attr_accessor :returnSearchResultOnDuplicates
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(value = nil, returnSearchResultOnDuplicates = nil, type = nil)
    @value = value
    @returnSearchResultOnDuplicates = returnSearchResultOnDuplicates
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalTransactionType
class ExternalTransactionType
  @@schema_type = "ExternalTransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["externalTransactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransactionID")]],
    ["externalTransactionTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransactionTime")]],
    ["feeOrCreditAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeeOrCreditAmount")]],
    ["paymentOrRefundAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOrRefundAmount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :externalTransactionID
  attr_accessor :externalTransactionTime
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentOrRefundAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(externalTransactionID = nil, externalTransactionTime = nil, feeOrCreditAmount = nil, paymentOrRefundAmount = nil)
    @externalTransactionID = externalTransactionID
    @externalTransactionTime = externalTransactionTime
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentOrRefundAmount = paymentOrRefundAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeatureDefinitionsType
class FeatureDefinitionsType
  @@schema_type = "FeatureDefinitionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingDurations", ["ListingDurationDefinitionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDurations")]],
    ["shippingTermsRequired", ["ShippingTermRequiredDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["BestOfferEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["homePageFeaturedEnabled", ["HomePageFeaturedEnabledDefinitionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePageFeaturedEnabled")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingDurations
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :homePageFeaturedEnabled
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDurations = nil, shippingTermsRequired = nil, bestOfferEnabled = nil, homePageFeaturedEnabled = nil)
    @listingDurations = listingDurations
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeeType
class FeeType
  @@schema_type = "FeeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, fee = nil)
    @name = name
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailArrayType
class FeedbackDetailArrayType < ::Array
  @@schema_type = "FeedbackDetailType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["FeedbackDetail", ["FeedbackDetailType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackDetail")]]]
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailType
class FeedbackDetailType
  @@schema_type = "FeedbackDetailType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["commentingUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentingUser")]],
    ["commentingUserScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentingUserScore")]],
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentTime")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["feedbackResponse", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackResponse")]],
    ["followup", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Followup")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["role", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Role")]],
    ["itemTitle", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTitle")]],
    ["itemPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemPrice")]],
    ["feedbackID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["commentReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentReplaced")]],
    ["responseReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseReplaced")]],
    ["followUpReplaced", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FollowUpReplaced")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :commentingUser
  attr_accessor :commentingUserScore
  attr_accessor :commentText
  attr_accessor :commentTime
  attr_accessor :commentType
  attr_accessor :feedbackResponse
  attr_accessor :followup
  attr_accessor :itemID
  attr_accessor :role
  attr_accessor :itemTitle
  attr_accessor :itemPrice
  attr_accessor :feedbackID
  attr_accessor :transactionID
  attr_accessor :commentReplaced
  attr_accessor :responseReplaced
  attr_accessor :followUpReplaced
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentingUser = nil, commentingUserScore = nil, commentText = nil, commentTime = nil, commentType = nil, feedbackResponse = nil, followup = nil, itemID = nil, role = nil, itemTitle = nil, itemPrice = nil, feedbackID = nil, transactionID = nil, commentReplaced = nil, responseReplaced = nil, followUpReplaced = nil)
    @commentingUser = commentingUser
    @commentingUserScore = commentingUserScore
    @commentText = commentText
    @commentTime = commentTime
    @commentType = commentType
    @feedbackResponse = feedbackResponse
    @followup = followup
    @itemID = itemID
    @role = role
    @itemTitle = itemTitle
    @itemPrice = itemPrice
    @feedbackID = feedbackID
    @transactionID = transactionID
    @commentReplaced = commentReplaced
    @responseReplaced = responseReplaced
    @followUpReplaced = followUpReplaced
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackInfoType
class FeedbackInfoType
  @@schema_type = "FeedbackInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["commentText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentText")]],
    ["commentType", ["CommentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CommentType")]],
    ["targetUser", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TargetUser")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :targetUser
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentText = nil, commentType = nil, targetUser = nil)
    @commentText = commentText
    @commentType = commentType
    @targetUser = targetUser
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodArrayType
class FeedbackPeriodArrayType < ::Array
  @@schema_type = "FeedbackPeriodType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["FeedbackPeriod", ["FeedbackPeriodType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackPeriod")]]]
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodType
class FeedbackPeriodType
  @@schema_type = "FeedbackPeriodType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["periodInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PeriodInDays")]],
    ["count", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Count")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :periodInDays
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(periodInDays = nil, count = nil)
    @periodInDays = periodInDays
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryType
class FeedbackSummaryType
  @@schema_type = "FeedbackSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bidRetractionFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidRetractionFeedbackPeriodArray")]],
    ["negativeFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NegativeFeedbackPeriodArray")]],
    ["neutralFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NeutralFeedbackPeriodArray")]],
    ["positiveFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackPeriodArray")]],
    ["totalFeedbackPeriodArray", ["FeedbackPeriodArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalFeedbackPeriodArray")]],
    ["neutralCommentCountFromSuspendedUsers", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NeutralCommentCountFromSuspendedUsers")]],
    ["uniqueNegativeFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniqueNegativeFeedbackCount")]],
    ["uniquePositiveFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniquePositiveFeedbackCount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :bidRetractionFeedbackPeriodArray
  attr_accessor :negativeFeedbackPeriodArray
  attr_accessor :neutralFeedbackPeriodArray
  attr_accessor :positiveFeedbackPeriodArray
  attr_accessor :totalFeedbackPeriodArray
  attr_accessor :neutralCommentCountFromSuspendedUsers
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidRetractionFeedbackPeriodArray = nil, negativeFeedbackPeriodArray = nil, neutralFeedbackPeriodArray = nil, positiveFeedbackPeriodArray = nil, totalFeedbackPeriodArray = nil, neutralCommentCountFromSuspendedUsers = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil)
    @bidRetractionFeedbackPeriodArray = bidRetractionFeedbackPeriodArray
    @negativeFeedbackPeriodArray = negativeFeedbackPeriodArray
    @neutralFeedbackPeriodArray = neutralFeedbackPeriodArray
    @positiveFeedbackPeriodArray = positiveFeedbackPeriodArray
    @totalFeedbackPeriodArray = totalFeedbackPeriodArray
    @neutralCommentCountFromSuspendedUsers = neutralCommentCountFromSuspendedUsers
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeesType
class FeesType < ::Array
  @@schema_type = "FeeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Fee", ["FeeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]]]
end

# {urn:ebay:apis:eBLBaseComponents}FinanceOfferArrayType
class FinanceOfferArrayType < ::Array
  @@schema_type = "FinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["FinanceOffer", ["FinanceOfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOffer")]]]
end

# {urn:ebay:apis:eBLBaseComponents}FinanceOfferType
class FinanceOfferType
  @@schema_type = "FinanceOfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["buyerTerms", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerTerms")]],
    ["sellerTerms", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerTerms")]],
    ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartDate")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]],
    ["minimumAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumAmount")]],
    ["rateFactor", ["SOAP::SOAPDouble", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RateFactor")]],
    ["priority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :financeOfferID
  attr_accessor :buyerTerms
  attr_accessor :sellerTerms
  attr_accessor :startDate
  attr_accessor :lastModifiedDate
  attr_accessor :minimumAmount
  attr_accessor :rateFactor
  attr_accessor :priority
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(financeOfferID = nil, buyerTerms = nil, sellerTerms = nil, startDate = nil, lastModifiedDate = nil, minimumAmount = nil, rateFactor = nil, priority = nil)
    @financeOfferID = financeOfferID
    @buyerTerms = buyerTerms
    @sellerTerms = sellerTerms
    @startDate = startDate
    @lastModifiedDate = lastModifiedDate
    @minimumAmount = minimumAmount
    @rateFactor = rateFactor
    @priority = priority
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCostType
class FlatRateInsuranceRangeCostType
  @@schema_type = "FlatRateInsuranceRangeCostType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["flatRateInsuranceRange", ["FlatRateInsuranceRangeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatRateInsuranceRange")]],
    ["insuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceCost")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :flatRateInsuranceRange
  attr_accessor :insuranceCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(flatRateInsuranceRange = nil, insuranceCost = nil)
    @flatRateInsuranceRange = flatRateInsuranceRange
    @insuranceCost = insuranceCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingPreferencesType
class FlatShippingPreferencesType
  @@schema_type = "FlatShippingPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["amountPerAdditionalItem", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPerAdditionalItem")]],
    ["deductionAmountPerAdditionalItem", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeductionAmountPerAdditionalItem")]],
    ["flatRateInsuranceRangeCost", ["FlatRateInsuranceRangeCostType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatRateInsuranceRangeCost")]],
    ["flatShippingRateOption", ["FlatShippingRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlatShippingRateOption")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :amountPerAdditionalItem
  attr_accessor :deductionAmountPerAdditionalItem
  attr_accessor :flatRateInsuranceRangeCost
  attr_accessor :flatShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPerAdditionalItem = nil, deductionAmountPerAdditionalItem = nil, flatRateInsuranceRangeCost = [], flatShippingRateOption = nil, insuranceOption = nil)
    @amountPerAdditionalItem = amountPerAdditionalItem
    @deductionAmountPerAdditionalItem = deductionAmountPerAdditionalItem
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @flatShippingRateOption = flatShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestContainerType
class GetRecommendationsRequestContainerType
  @@schema_type = "GetRecommendationsRequestContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingFlow", ["ListingFlowCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingFlow")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["modifiedFields", ["ModifiedFieldType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifiedFields")]],
    ["recommendationEngine", ["RecommendationEngineCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecommendationEngine")]],
    ["query", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Query")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :externalProductID
  attr_accessor :modifiedFields
  attr_accessor :recommendationEngine
  attr_accessor :query
  attr_accessor :correlationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingFlow = nil, item = nil, externalProductID = nil, modifiedFields = [], recommendationEngine = [], query = nil, correlationID = nil)
    @listingFlow = listingFlow
    @item = item
    @externalProductID = externalProductID
    @modifiedFields = modifiedFields
    @recommendationEngine = recommendationEngine
    @query = query
    @correlationID = correlationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseContainerType
class GetRecommendationsResponseContainerType
  @@schema_type = "GetRecommendationsResponseContainerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingAnalyzerRecommendations", ["ListingAnalyzerRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingAnalyzerRecommendations")]],
    ["sIFFTASRecommendations", ["SIFFTASRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SIFFTASRecommendations")]],
    ["pricingRecommendations", ["PricingRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PricingRecommendations")]],
    ["attributeRecommendations", ["AttributeRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeRecommendations")]],
    ["productRecommendations", ["ProductRecommendationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductRecommendations")]],
    ["correlationID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CorrelationID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations
  attr_accessor :correlationID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil, correlationID = nil)
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
    @correlationID = correlationID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HomePageFeaturedEnabledDefinitionType
class HomePageFeaturedEnabledDefinitionType
  @@schema_type = "HomePageFeaturedEnabledDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InternationalShippingServiceOptionsType
class InternationalShippingServiceOptionsType
  @@schema_type = "InternationalShippingServiceOptionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingService", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceCost")]],
    ["shippingServiceAdditionalCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceAdditionalCost")]],
    ["shippingServicePriority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServicePriority")]],
    ["shipToLocation", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipToLocation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :shipToLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, shipToLocation = [])
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @shipToLocation = shipToLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemArrayType
class ItemArrayType < ::Array
  @@schema_type = "ItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Item", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ItemListCustomizationType
class ItemListCustomizationType
  @@schema_type = "ItemListCustomizationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["sort", ["ItemSortTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["durationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DurationInDays")]],
    ["includeNotes", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeNotes")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :include
  attr_accessor :listingType
  attr_accessor :sort
  attr_accessor :durationInDays
  attr_accessor :includeNotes
  attr_accessor :pagination
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, listingType = nil, sort = nil, durationInDays = nil, includeNotes = nil, pagination = nil)
    @include = include
    @listingType = listingType
    @sort = sort
    @durationInDays = durationInDays
    @includeNotes = includeNotes
    @pagination = pagination
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDArrayType
class ItemTransactionIDArrayType < ::Array
  @@schema_type = "ItemTransactionIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["ItemTransactionID", ["ItemTransactionIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTransactionID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDType
class ItemTransactionIDType
  @@schema_type = "ItemTransactionIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :itemID
  attr_accessor :transactionID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemType
class ItemType
  @@schema_type = "ItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["applicationData", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplicationData")]],
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["attributeArray", ["AttributeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeArray")]],
    ["lookupAttributeArray", ["LookupAttributeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LookupAttributeArray")]],
    ["applyShippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplyShippingDiscount")]],
    ["autoPay", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AutoPay")]],
    ["paymentDetails", ["PaymentDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentDetails")]],
    ["biddingDetails", ["BiddingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BiddingDetails")]],
    ["motorsGermanySearchable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MotorsGermanySearchable")]],
    ["buyerProtection", ["BuyerProtectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerProtection")]],
    ["buyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowPrice")]],
    ["categoryMappingAllowed", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryMappingAllowed")]],
    ["charity", ["CharityType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Charity")]],
    ["country", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Country")]],
    ["crossPromotion", ["CrossPromotionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CrossPromotion")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["distance", ["DistanceType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Distance")]],
    ["escrow", ["EscrowCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Escrow")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["giftIcon", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GiftIcon")]],
    ["giftServices", ["GiftServicesCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GiftServices")]],
    ["hitCounter", ["HitCounterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HitCounter")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["listingDetails", ["ListingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDetails")]],
    ["listingDesigner", ["ListingDesignerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDesigner")]],
    ["listingDuration", ["ListingDurationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["listingEnhancement", ["ListingEnhancementsCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingEnhancement")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["location", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Location")]],
    ["lotSize", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LotSize")]],
    ["nowAndNew", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NowAndNew")]],
    ["partnerCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartnerCode")]],
    ["partnerName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartnerName")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["payPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalEmailAddress")]],
    ["primaryCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrimaryCategory")]],
    ["privateListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateListing")]],
    ["productListingDetails", ["ProductListingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductListingDetails")]],
    ["proximitySearchDetails", ["ProximitySearchDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProximitySearchDetails")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["privateNotes", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateNotes")]],
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["relistLink", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistLink")]],
    ["reservePrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReservePrice")]],
    ["reviseStatus", ["ReviseStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReviseStatus")]],
    ["scheduleTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleTime")]],
    ["secondaryCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondaryCategory")]],
    ["freeAddedCategory", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FreeAddedCategory")]],
    ["siteHostedPicture", ["SiteHostedPictureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteHostedPicture")]],
    ["seller", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Seller")]],
    ["sellingStatus", ["SellingStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingStatus")]],
    ["shippingOption", ["ShippingOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingOption")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["shippingRegions", ["ShippingRegionCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRegions")]],
    ["shippingTerms", ["ShippingTermsCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTerms")]],
    ["shipToLocations", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipToLocations")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["startPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartPrice")]],
    ["storefront", ["StorefrontType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Storefront")]],
    ["subTitle", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubTitle")]],
    ["timeLeft", ["SOAP::SOAPDuration", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeLeft")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["uUID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UUID")]],
    ["vATDetails", ["VATDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATDetails")]],
    ["vendorHostedPicture", ["VendorHostedPictureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VendorHostedPicture")]],
    ["sellerVacationNote", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerVacationNote")]],
    ["watchCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatchCount")]],
    ["buyerRequirements", ["BuyerRequirementsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerRequirements")]],
    ["bestOfferDetails", ["BestOfferDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferDetails")]],
    ["anythingPoints", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AnythingPoints")]],
    ["liveAuctionDetails", ["LiveAuctionDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionDetails")]],
    ["locationDefaulted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LocationDefaulted")]],
    ["thirdPartyCheckout", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThirdPartyCheckout")]],
    ["useTaxTable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseTaxTable")]],
    ["getItFast", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetItFast")]],
    ["buyerResponsibleForShipping", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerResponsibleForShipping")]],
    ["limitedWarrantyEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LimitedWarrantyEligible")]],
    ["eBayNotes", "SOAP::SOAPString"],
    ["questionCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuestionCount")]],
    ["relisted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Relisted")]],
    ["quantityAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityAvailable")]],
    ["categoryBasedAttributesPrefill", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryBasedAttributesPrefill")]],
    ["searchDetails", ["SearchDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchDetails")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["shippingTermsInDescription", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsInDescription")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :applicationData
  attr_accessor :attributeSetArray
  attr_accessor :attributeArray
  attr_accessor :lookupAttributeArray
  attr_accessor :applyShippingDiscount
  attr_accessor :autoPay
  attr_accessor :paymentDetails
  attr_accessor :biddingDetails
  attr_accessor :motorsGermanySearchable
  attr_accessor :buyerProtection
  attr_accessor :buyItNowPrice
  attr_accessor :categoryMappingAllowed
  attr_accessor :charity
  attr_accessor :country
  attr_accessor :crossPromotion
  attr_accessor :currency
  attr_accessor :description
  attr_accessor :distance
  attr_accessor :escrow
  attr_accessor :financeOfferID
  attr_accessor :giftIcon
  attr_accessor :giftServices
  attr_accessor :hitCounter
  attr_accessor :itemID
  attr_accessor :listingDetails
  attr_accessor :listingDesigner
  attr_accessor :listingDuration
  attr_accessor :listingEnhancement
  attr_accessor :listingType
  attr_accessor :location
  attr_accessor :lotSize
  attr_accessor :nowAndNew
  attr_accessor :partnerCode
  attr_accessor :partnerName
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :primaryCategory
  attr_accessor :privateListing
  attr_accessor :productListingDetails
  attr_accessor :proximitySearchDetails
  attr_accessor :quantity
  attr_accessor :privateNotes
  attr_accessor :regionID
  attr_accessor :relistLink
  attr_accessor :reservePrice
  attr_accessor :reviseStatus
  attr_accessor :scheduleTime
  attr_accessor :secondaryCategory
  attr_accessor :freeAddedCategory
  attr_accessor :siteHostedPicture
  attr_accessor :seller
  attr_accessor :sellingStatus
  attr_accessor :shippingOption
  attr_accessor :shippingDetails
  attr_accessor :shippingRegions
  attr_accessor :shippingTerms
  attr_accessor :shipToLocations
  attr_accessor :site
  attr_accessor :startPrice
  attr_accessor :storefront
  attr_accessor :subTitle
  attr_accessor :timeLeft
  attr_accessor :title
  attr_accessor :uUID
  attr_accessor :vATDetails
  attr_accessor :vendorHostedPicture
  attr_accessor :sellerVacationNote
  attr_accessor :watchCount
  attr_accessor :buyerRequirements
  attr_accessor :bestOfferDetails
  attr_accessor :anythingPoints
  attr_accessor :liveAuctionDetails
  attr_accessor :locationDefaulted
  attr_accessor :thirdPartyCheckout
  attr_accessor :useTaxTable
  attr_accessor :getItFast
  attr_accessor :buyerResponsibleForShipping
  attr_accessor :limitedWarrantyEligible
  attr_accessor :eBayNotes
  attr_accessor :questionCount
  attr_accessor :relisted
  attr_accessor :quantityAvailable
  attr_accessor :categoryBasedAttributesPrefill
  attr_accessor :searchDetails
  attr_accessor :postalCode
  attr_accessor :shippingTermsInDescription
  attr_accessor :sellerInventoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationData = nil, attributeSetArray = nil, attributeArray = nil, lookupAttributeArray = nil, applyShippingDiscount = nil, autoPay = nil, paymentDetails = nil, biddingDetails = nil, motorsGermanySearchable = nil, buyerProtection = nil, buyItNowPrice = nil, categoryMappingAllowed = nil, charity = nil, country = nil, crossPromotion = nil, currency = nil, description = nil, distance = nil, escrow = nil, financeOfferID = nil, giftIcon = nil, giftServices = [], hitCounter = nil, itemID = nil, listingDetails = nil, listingDesigner = nil, listingDuration = nil, listingEnhancement = [], listingType = nil, location = nil, lotSize = nil, nowAndNew = nil, partnerCode = nil, partnerName = nil, paymentMethods = [], payPalEmailAddress = nil, primaryCategory = nil, privateListing = nil, productListingDetails = nil, proximitySearchDetails = nil, quantity = nil, privateNotes = nil, regionID = nil, relistLink = nil, reservePrice = nil, reviseStatus = nil, scheduleTime = nil, secondaryCategory = nil, freeAddedCategory = nil, siteHostedPicture = nil, seller = nil, sellingStatus = nil, shippingOption = nil, shippingDetails = nil, shippingRegions = [], shippingTerms = nil, shipToLocations = [], site = nil, startPrice = nil, storefront = nil, subTitle = nil, timeLeft = nil, title = nil, uUID = nil, vATDetails = nil, vendorHostedPicture = nil, sellerVacationNote = nil, watchCount = nil, buyerRequirements = nil, bestOfferDetails = nil, anythingPoints = nil, liveAuctionDetails = nil, locationDefaulted = nil, thirdPartyCheckout = nil, useTaxTable = nil, getItFast = nil, buyerResponsibleForShipping = nil, limitedWarrantyEligible = nil, eBayNotes = nil, questionCount = nil, relisted = nil, quantityAvailable = nil, categoryBasedAttributesPrefill = nil, searchDetails = nil, postalCode = nil, shippingTermsInDescription = nil, sellerInventoryID = nil)
    @applicationData = applicationData
    @attributeSetArray = attributeSetArray
    @attributeArray = attributeArray
    @lookupAttributeArray = lookupAttributeArray
    @applyShippingDiscount = applyShippingDiscount
    @autoPay = autoPay
    @paymentDetails = paymentDetails
    @biddingDetails = biddingDetails
    @motorsGermanySearchable = motorsGermanySearchable
    @buyerProtection = buyerProtection
    @buyItNowPrice = buyItNowPrice
    @categoryMappingAllowed = categoryMappingAllowed
    @charity = charity
    @country = country
    @crossPromotion = crossPromotion
    @currency = currency
    @description = description
    @distance = distance
    @escrow = escrow
    @financeOfferID = financeOfferID
    @giftIcon = giftIcon
    @giftServices = giftServices
    @hitCounter = hitCounter
    @itemID = itemID
    @listingDetails = listingDetails
    @listingDesigner = listingDesigner
    @listingDuration = listingDuration
    @listingEnhancement = listingEnhancement
    @listingType = listingType
    @location = location
    @lotSize = lotSize
    @nowAndNew = nowAndNew
    @partnerCode = partnerCode
    @partnerName = partnerName
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @primaryCategory = primaryCategory
    @privateListing = privateListing
    @productListingDetails = productListingDetails
    @proximitySearchDetails = proximitySearchDetails
    @quantity = quantity
    @privateNotes = privateNotes
    @regionID = regionID
    @relistLink = relistLink
    @reservePrice = reservePrice
    @reviseStatus = reviseStatus
    @scheduleTime = scheduleTime
    @secondaryCategory = secondaryCategory
    @freeAddedCategory = freeAddedCategory
    @siteHostedPicture = siteHostedPicture
    @seller = seller
    @sellingStatus = sellingStatus
    @shippingOption = shippingOption
    @shippingDetails = shippingDetails
    @shippingRegions = shippingRegions
    @shippingTerms = shippingTerms
    @shipToLocations = shipToLocations
    @site = site
    @startPrice = startPrice
    @storefront = storefront
    @subTitle = subTitle
    @timeLeft = timeLeft
    @title = title
    @uUID = uUID
    @vATDetails = vATDetails
    @vendorHostedPicture = vendorHostedPicture
    @sellerVacationNote = sellerVacationNote
    @watchCount = watchCount
    @buyerRequirements = buyerRequirements
    @bestOfferDetails = bestOfferDetails
    @anythingPoints = anythingPoints
    @liveAuctionDetails = liveAuctionDetails
    @locationDefaulted = locationDefaulted
    @thirdPartyCheckout = thirdPartyCheckout
    @useTaxTable = useTaxTable
    @getItFast = getItFast
    @buyerResponsibleForShipping = buyerResponsibleForShipping
    @limitedWarrantyEligible = limitedWarrantyEligible
    @eBayNotes = eBayNotes
    @questionCount = questionCount
    @relisted = relisted
    @quantityAvailable = quantityAvailable
    @categoryBasedAttributesPrefill = categoryBasedAttributesPrefill
    @searchDetails = searchDetails
    @postalCode = postalCode
    @shippingTermsInDescription = shippingTermsInDescription
    @sellerInventoryID = sellerInventoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LabelType
class LabelType
  @@schema_type = "LabelType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "visible") => "SOAP::SOAPBoolean"}
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_visible
    (@__xmlattr ||= {})[XSD::QName.new(nil, "visible")]
  end

  def xmlattr_visible=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "visible")] = value
  end

  def initialize(name = nil)
    @name = name
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingAnalyzerRecommendationsType
class ListingAnalyzerRecommendationsType
  @@schema_type = "ListingAnalyzerRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipArray", ["ListingTipArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingTipArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipArray = nil)
    @listingTipArray = listingTipArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDesignerType
class ListingDesignerType
  @@schema_type = "ListingDesignerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["layoutID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LayoutID")]],
    ["optimalPictureSize", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OptimalPictureSize")]],
    ["themeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :layoutID
  attr_accessor :optimalPictureSize
  attr_accessor :themeID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(layoutID = nil, optimalPictureSize = nil, themeID = nil)
    @layoutID = layoutID
    @optimalPictureSize = optimalPictureSize
    @themeID = themeID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDetailsType
class ListingDetailsType
  @@schema_type = "ListingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["adult", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Adult")]],
    ["bindingAuction", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BindingAuction")]],
    ["checkoutEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutEnabled")]],
    ["convertedBuyItNowPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedBuyItNowPrice")]],
    ["convertedStartPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedStartPrice")]],
    ["convertedReservePrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedReservePrice")]],
    ["hasReservePrice", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasReservePrice")]],
    ["regionName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionName")]],
    ["relistedItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistedItemID")]],
    ["secondChanceOriginalItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOriginalItemID")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EndTime")]],
    ["viewItemURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ViewItemURL")]],
    ["hasUnansweredQuestions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasUnansweredQuestions")]],
    ["hasPublicMessages", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasPublicMessages")]],
    ["buyItNowAvailable", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowAvailable")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :adult
  attr_accessor :bindingAuction
  attr_accessor :checkoutEnabled
  attr_accessor :convertedBuyItNowPrice
  attr_accessor :convertedStartPrice
  attr_accessor :convertedReservePrice
  attr_accessor :hasReservePrice
  attr_accessor :regionName
  attr_accessor :relistedItemID
  attr_accessor :secondChanceOriginalItemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :viewItemURL
  attr_accessor :hasUnansweredQuestions
  attr_accessor :hasPublicMessages
  attr_accessor :buyItNowAvailable
  attr_accessor :sellerBusinessType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(adult = nil, bindingAuction = nil, checkoutEnabled = nil, convertedBuyItNowPrice = nil, convertedStartPrice = nil, convertedReservePrice = nil, hasReservePrice = nil, regionName = nil, relistedItemID = nil, secondChanceOriginalItemID = nil, startTime = nil, endTime = nil, viewItemURL = nil, hasUnansweredQuestions = nil, hasPublicMessages = nil, buyItNowAvailable = nil, sellerBusinessType = nil)
    @adult = adult
    @bindingAuction = bindingAuction
    @checkoutEnabled = checkoutEnabled
    @convertedBuyItNowPrice = convertedBuyItNowPrice
    @convertedStartPrice = convertedStartPrice
    @convertedReservePrice = convertedReservePrice
    @hasReservePrice = hasReservePrice
    @regionName = regionName
    @relistedItemID = relistedItemID
    @secondChanceOriginalItemID = secondChanceOriginalItemID
    @startTime = startTime
    @endTime = endTime
    @viewItemURL = viewItemURL
    @hasUnansweredQuestions = hasUnansweredQuestions
    @hasPublicMessages = hasPublicMessages
    @buyItNowAvailable = buyItNowAvailable
    @sellerBusinessType = sellerBusinessType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionType
class ListingDurationDefinitionType
  @@schema_type = "ListingDurationDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "durationSetID") => "SOAP::SOAPInt"}
  @@schema_element = [
    ["duration", ["ListingDurationCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Duration")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_durationSetID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "durationSetID")]
  end

  def xmlattr_durationSetID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "durationSetID")] = value
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionsType
class ListingDurationDefinitionsType
  @@schema_type = "ListingDurationDefinitionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "Version") => "SOAP::SOAPInt"}
  @@schema_element = [
    ["listingDuration", ["ListingDurationDefinitionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]]]

  attr_accessor :listingDuration

  def xmlattr_Version
    (@__xmlattr ||= {})[XSD::QName.new(nil, "Version")]
  end

  def xmlattr_Version=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "Version")] = value
  end

  def initialize(listingDuration = [])
    @listingDuration = listingDuration
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationReferenceType
class ListingDurationReferenceType < Integer
  @@schema_attribute = {XSD::QName.new(nil, "type") => nil}

  def xmlattr_type
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")]
  end

  def xmlattr_type=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "type")] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipArrayType
class ListingTipArrayType < ::Array
  @@schema_type = "ListingTipType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["ListingTip", ["ListingTipType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTip")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipFieldType
class ListingTipFieldType
  @@schema_type = "ListingTipFieldType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipFieldID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipFieldID")]],
    ["fieldTip", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FieldTip")]],
    ["currentFieldText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentFieldText")]],
    ["currentFieldValue", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentFieldValue")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingTipFieldID
  attr_accessor :fieldTip
  attr_accessor :currentFieldText
  attr_accessor :currentFieldValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipFieldID = nil, fieldTip = nil, currentFieldText = nil, currentFieldValue = nil)
    @listingTipFieldID = listingTipFieldID
    @fieldTip = fieldTip
    @currentFieldText = currentFieldText
    @currentFieldValue = currentFieldValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipMessageType
class ListingTipMessageType
  @@schema_type = "ListingTipMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipMessageID")]],
    ["shortMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShortMessage")]],
    ["longMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LongMessage")]],
    ["helpURLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HelpURLPath")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingTipMessageID
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :helpURLPath
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipMessageID = nil, shortMessage = nil, longMessage = nil, helpURLPath = nil)
    @listingTipMessageID = listingTipMessageID
    @shortMessage = shortMessage
    @longMessage = longMessage
    @helpURLPath = helpURLPath
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipType
class ListingTipType
  @@schema_type = "ListingTipType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingTipID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingTipID")]],
    ["priority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["message", ["ListingTipMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]],
    ["field", ["ListingTipFieldType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Field")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingTipID
  attr_accessor :priority
  attr_accessor :message
  attr_accessor :field
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipID = nil, priority = nil, message = nil, field = nil)
    @listingTipID = listingTipID
    @priority = priority
    @message = message
    @field = field
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionCatalogType
class LiveAuctionCatalogType
  @@schema_type = "LiveAuctionCatalogType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["catalogName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CatalogName")]],
    ["schedule", ["ScheduleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Schedule")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :userCatalogID
  attr_accessor :catalogName
  attr_accessor :schedule
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, catalogName = nil, schedule = [])
    @userCatalogID = userCatalogID
    @catalogName = catalogName
    @schedule = schedule
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionDetailsType
class LiveAuctionDetailsType
  @@schema_type = "LiveAuctionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userCatalogID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserCatalogID")]],
    ["scheduleID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleID")]],
    ["lotNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LotNumber")]],
    ["highEstimate", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighEstimate")]],
    ["lowEstimate", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LowEstimate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :userCatalogID
  attr_accessor :scheduleID
  attr_accessor :lotNumber
  attr_accessor :highEstimate
  attr_accessor :lowEstimate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, scheduleID = nil, lotNumber = nil, highEstimate = nil, lowEstimate = nil)
    @userCatalogID = userCatalogID
    @scheduleID = scheduleID
    @lotNumber = lotNumber
    @highEstimate = highEstimate
    @lowEstimate = lowEstimate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeArrayType
class LookupAttributeArrayType < ::Array
  @@schema_type = "LookupAttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["LookupAttribute", ["LookupAttributeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LookupAttribute")]]]
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeType
class LookupAttributeType
  @@schema_type = "LookupAttributeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["value", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = nil)
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeArrayType
class MemberMessageExchangeArrayType < ::Array
  @@schema_type = "MemberMessageExchangeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["MemberMessageExchange", ["MemberMessageExchangeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MemberMessageExchange")]]]
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeType
class MemberMessageExchangeType
  @@schema_type = "MemberMessageExchangeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["question", ["MemberMessageType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Question")]],
    ["response", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Response")]],
    ["messageStatus", ["MessageStatusTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStatus")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["lastModifiedDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastModifiedDate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :item
  attr_accessor :question
  attr_accessor :response
  attr_accessor :messageStatus
  attr_accessor :creationDate
  attr_accessor :lastModifiedDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, question = nil, response = [], messageStatus = nil, creationDate = nil, lastModifiedDate = nil)
    @item = item
    @question = question
    @response = response
    @messageStatus = messageStatus
    @creationDate = creationDate
    @lastModifiedDate = lastModifiedDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageType
class MemberMessageType
  @@schema_type = "MemberMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["messageType", ["MessageTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageType")]],
    ["questionType", ["QuestionTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuestionType")]],
    ["emailCopyToSender", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EmailCopyToSender")]],
    ["hideSendersEmailAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HideSendersEmailAddress")]],
    ["displayToPublic", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayToPublic")]],
    ["senderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SenderID")]],
    ["senderEmail", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SenderEmail")]],
    ["recipientID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientID")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["body", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Body")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["parentMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ParentMessageID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :messageType
  attr_accessor :questionType
  attr_accessor :emailCopyToSender
  attr_accessor :hideSendersEmailAddress
  attr_accessor :displayToPublic
  attr_accessor :senderID
  attr_accessor :senderEmail
  attr_accessor :recipientID
  attr_accessor :subject
  attr_accessor :body
  attr_accessor :messageID
  attr_accessor :parentMessageID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageType = nil, questionType = nil, emailCopyToSender = nil, hideSendersEmailAddress = nil, displayToPublic = nil, senderID = nil, senderEmail = nil, recipientID = [], subject = nil, body = nil, messageID = nil, parentMessageID = nil)
    @messageType = messageType
    @questionType = questionType
    @emailCopyToSender = emailCopyToSender
    @hideSendersEmailAddress = hideSendersEmailAddress
    @displayToPublic = displayToPublic
    @senderID = senderID
    @senderEmail = senderEmail
    @recipientID = recipientID
    @subject = subject
    @body = body
    @messageID = messageID
    @parentMessageID = parentMessageID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ModifiedFieldType
class ModifiedFieldType
  @@schema_type = "ModifiedFieldType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["field", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Field")]],
    ["modifyType", ["ModifyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ModifyType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :field
  attr_accessor :modifyType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(field = nil, modifyType = nil)
    @field = field
    @modifyType = modifyType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertArrayType
class MyMessagesAlertArrayType < ::Array
  @@schema_type = "MyMessagesAlertType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Alert", ["MyMessagesAlertType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Alert")]]]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertIDArrayType
class MyMessagesAlertIDArrayType < ::Array
  @@schema_type = "MyMessagesAlertIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["AlertID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertType
class MyMessagesAlertType
  @@schema_type = "MyMessagesAlertType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sender", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sender")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["priority", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Priority")]],
    ["alertID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlertID")]],
    ["externalAlertID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalAlertID")]],
    ["contentType", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContentType")]],
    ["text", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["resolutionStatus", ["MyMessagesAlertResolutionStatusCode", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionStatus")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["receiveDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReceiveDate")]],
    ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationDate")]],
    ["resolutionDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResolutionDate")]],
    ["lastReadDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastReadDate")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["isTimedResolution", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IsTimedResolution")]],
    ["actionURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActionURL")]],
    ["responseDetails", ["MyMessagesResponseDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseDetails")]],
    ["forwardDetails", ["MyMessagesForwardDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardDetails")]],
    ["folder", ["MyMessagesFolderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :subject
  attr_accessor :priority
  attr_accessor :alertID
  attr_accessor :externalAlertID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :resolutionStatus
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :resolutionDate
  attr_accessor :lastReadDate
  attr_accessor :itemID
  attr_accessor :isTimedResolution
  attr_accessor :actionURL
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, subject = nil, priority = nil, alertID = nil, externalAlertID = nil, contentType = nil, text = nil, resolutionStatus = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, resolutionDate = nil, lastReadDate = nil, itemID = nil, isTimedResolution = nil, actionURL = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @subject = subject
    @priority = priority
    @alertID = alertID
    @externalAlertID = externalAlertID
    @contentType = contentType
    @text = text
    @resolutionStatus = resolutionStatus
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @resolutionDate = resolutionDate
    @lastReadDate = lastReadDate
    @itemID = itemID
    @isTimedResolution = isTimedResolution
    @actionURL = actionURL
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderSummaryType
class MyMessagesFolderSummaryType
  @@schema_type = "MyMessagesFolderSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]],
    ["newAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewAlertCount")]],
    ["newMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewMessageCount")]],
    ["totalAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAlertCount")]],
    ["totalMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalMessageCount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :folderID
  attr_accessor :folderName
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil, newAlertCount = nil, newMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderID = folderID
    @folderName = folderName
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderType
class MyMessagesFolderType
  @@schema_type = "MyMessagesFolderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["folderName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :folderID
  attr_accessor :folderName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil)
    @folderID = folderID
    @folderName = folderName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesForwardDetailsType
class MyMessagesForwardDetailsType
  @@schema_type = "MyMessagesForwardDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userForwardDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserForwardDate")]],
    ["forwardMessageEncoding", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardMessageEncoding")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :userForwardDate
  attr_accessor :forwardMessageEncoding
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userForwardDate = nil, forwardMessageEncoding = nil)
    @userForwardDate = userForwardDate
    @forwardMessageEncoding = forwardMessageEncoding
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageArrayType
class MyMessagesMessageArrayType < ::Array
  @@schema_type = "MyMessagesMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Message", ["MyMessagesMessageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Message")]]]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageIDArrayType
class MyMessagesMessageIDArrayType < ::Array
  @@schema_type = "MyMessagesMessageIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["MessageID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageType
class MyMessagesMessageType
  @@schema_type = "MyMessagesMessageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["sender", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sender")]],
    ["recipientUserID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecipientUserID")]],
    ["subject", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subject")]],
    ["messageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageID")]],
    ["externalMessageID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalMessageID")]],
    ["contentType", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContentType")]],
    ["text", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["flagged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Flagged")]],
    ["read", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Read")]],
    ["creationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreationDate")]],
    ["receiveDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReceiveDate")]],
    ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpirationDate")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["responseDetails", ["MyMessagesResponseDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseDetails")]],
    ["forwardDetails", ["MyMessagesForwardDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ForwardDetails")]],
    ["folder", ["MyMessagesFolderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :subject
  attr_accessor :messageID
  attr_accessor :externalMessageID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :flagged
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :itemID
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, subject = nil, messageID = nil, externalMessageID = nil, contentType = nil, text = nil, flagged = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, itemID = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @subject = subject
    @messageID = messageID
    @externalMessageID = externalMessageID
    @contentType = contentType
    @text = text
    @flagged = flagged
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @itemID = itemID
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesResponseDetailsType
class MyMessagesResponseDetailsType
  @@schema_type = "MyMessagesResponseDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["responseURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseURL")]],
    ["userResponseDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserResponseDate")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :responseURL
  attr_accessor :userResponseDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(responseURL = nil, userResponseDate = nil)
    @responseURL = responseURL
    @userResponseDate = userResponseDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesSummaryType
class MyMessagesSummaryType
  @@schema_type = "MyMessagesSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderSummary", ["MyMessagesFolderSummaryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderSummary")]],
    ["newAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewAlertCount")]],
    ["newMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewMessageCount")]],
    ["unresolvedAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UnresolvedAlertCount")]],
    ["flaggedMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FlaggedMessageCount")]],
    ["totalAlertCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAlertCount")]],
    ["totalMessageCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalMessageCount")]]]

  attr_accessor :folderSummary
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :unresolvedAlertCount
  attr_accessor :flaggedMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount

  def initialize(folderSummary = [], newAlertCount = nil, newMessageCount = nil, unresolvedAlertCount = nil, flaggedMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderSummary = folderSummary
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @unresolvedAlertCount = unresolvedAlertCount
    @flaggedMessageCount = flaggedMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchListType
class MyeBayFavoriteSearchListType
  @@schema_type = "MyeBayFavoriteSearchListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["favoriteSearch", ["MyeBayFavoriteSearchType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSearch")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :totalAvailable
  attr_accessor :favoriteSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSearch = [])
    @totalAvailable = totalAvailable
    @favoriteSearch = favoriteSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchType
class MyeBayFavoriteSearchType
  @@schema_type = "MyeBayFavoriteSearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["searchName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchName")]],
    ["searchQuery", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchQuery")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :searchName
  attr_accessor :searchQuery
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchName = nil, searchQuery = nil)
    @searchName = searchName
    @searchQuery = searchQuery
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerListType
class MyeBayFavoriteSellerListType
  @@schema_type = "MyeBayFavoriteSellerListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["favoriteSeller", ["MyeBayFavoriteSellerType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteSeller")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :totalAvailable
  attr_accessor :favoriteSeller
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSeller = [])
    @totalAvailable = totalAvailable
    @favoriteSeller = favoriteSeller
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerType
class MyeBayFavoriteSellerType
  @@schema_type = "MyeBayFavoriteSellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :userID
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, storeName = nil)
    @userID = userID
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySecondChanceOfferListType
class MyeBaySecondChanceOfferListType
  @@schema_type = "MyeBaySecondChanceOfferListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAvailable")]],
    ["secondChanceOffer", ["ItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOffer")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :totalAvailable
  attr_accessor :secondChanceOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, secondChanceOffer = [])
    @totalAvailable = totalAvailable
    @secondChanceOffer = secondChanceOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySelectionType
class MyeBaySelectionType
  @@schema_type = "MyeBaySelectionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]],
    ["sort", ["SortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Sort")]],
    ["maxResults", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxResults")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :include
  attr_accessor :sort
  attr_accessor :maxResults
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, sort = nil, maxResults = nil)
    @include = include
    @sort = sort
    @maxResults = maxResults
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListArrayType
class NameValueListArrayType < ::Array
  @@schema_type = "NameValueListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["NameValueList", ["NameValueListType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameValueList")]]]
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListType
class NameValueListType
  @@schema_type = "NameValueListType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["value", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Value")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = [])
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableArrayType
class NotificationEnableArrayType < ::Array
  @@schema_type = "NotificationEnableType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["NotificationEnable", ["NotificationEnableType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NotificationEnable")]]]
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableType
class NotificationEnableType
  @@schema_type = "NotificationEnableType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eventType", ["NotificationEventTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventType")]],
    ["eventEnable", ["EnableCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EventEnable")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :eventType
  attr_accessor :eventEnable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, eventEnable = nil)
    @eventType = eventType
    @eventEnable = eventEnable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OfferArrayType
class OfferArrayType < ::Array
  @@schema_type = "OfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Offer", ["OfferType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Offer")]]]
end

# {urn:ebay:apis:eBLBaseComponents}OfferType
class OfferType
  @@schema_type = "OfferType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["action", ["BidActionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Action")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["maxBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxBid")]],
    ["quantity", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Quantity")]],
    ["secondChanceEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceEnabled")]],
    ["siteCurrency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteCurrency")]],
    ["timeBid", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TimeBid")]],
    ["highestBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighestBid")]],
    ["convertedPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedPrice")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["user", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "User")]],
    ["userConsent", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserConsent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :action
  attr_accessor :currency
  attr_accessor :itemID
  attr_accessor :maxBid
  attr_accessor :quantity
  attr_accessor :secondChanceEnabled
  attr_accessor :siteCurrency
  attr_accessor :timeBid
  attr_accessor :highestBid
  attr_accessor :convertedPrice
  attr_accessor :transactionID
  attr_accessor :user
  attr_accessor :userConsent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(action = nil, currency = nil, itemID = nil, maxBid = nil, quantity = nil, secondChanceEnabled = nil, siteCurrency = nil, timeBid = nil, highestBid = nil, convertedPrice = nil, transactionID = nil, user = nil, userConsent = nil)
    @action = action
    @currency = currency
    @itemID = itemID
    @maxBid = maxBid
    @quantity = quantity
    @secondChanceEnabled = secondChanceEnabled
    @siteCurrency = siteCurrency
    @timeBid = timeBid
    @highestBid = highestBid
    @convertedPrice = convertedPrice
    @transactionID = transactionID
    @user = user
    @userConsent = userConsent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderArrayType
class OrderArrayType < ::Array
  @@schema_type = "OrderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Order", ["OrderType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]]]
end

# {urn:ebay:apis:eBLBaseComponents}OrderIDArrayType
class OrderIDArrayType < ::Array
  @@schema_type = "OrderIDType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["OrderID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]]]
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionArrayType
class OrderTransactionArrayType < ::Array
  @@schema_type = "OrderTransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["OrderTransaction", ["OrderTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderTransaction")]]]
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionType
class OrderTransactionType
  @@schema_type = "OrderTransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["order", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["transaction", ["TransactionType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Transaction")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :order
  attr_accessor :transaction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(order = nil, transaction = nil)
    @order = order
    @transaction = transaction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderType
class OrderType
  @@schema_type = "OrderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["orderStatus", ["OrderStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderStatus")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["amountSaved", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountSaved")]],
    ["checkoutStatus", ["CheckoutStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["creatingUserRole", ["TradingRoleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatingUserRole")]],
    ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedTime")]],
    ["financeOfferID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinanceOfferID")]],
    ["paymentMethods", ["BuyerPaymentMethodCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethods")]],
    ["sellerEmail", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerEmail")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["shippingServiceSelected", ["ShippingServiceOptionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceSelected")]],
    ["subtotal", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subtotal")]],
    ["total", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Total")]],
    ["externalTransaction", ["ExternalTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :orderID
  attr_accessor :orderStatus
  attr_accessor :adjustmentAmount
  attr_accessor :amountPaid
  attr_accessor :amountSaved
  attr_accessor :checkoutStatus
  attr_accessor :shippingDetails
  attr_accessor :creatingUserRole
  attr_accessor :createdTime
  attr_accessor :financeOfferID
  attr_accessor :paymentMethods
  attr_accessor :sellerEmail
  attr_accessor :shippingAddress
  attr_accessor :shippingServiceSelected
  attr_accessor :subtotal
  attr_accessor :total
  attr_accessor :externalTransaction
  attr_accessor :transactionArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderID = nil, orderStatus = nil, adjustmentAmount = nil, amountPaid = nil, amountSaved = nil, checkoutStatus = nil, shippingDetails = nil, creatingUserRole = nil, createdTime = nil, financeOfferID = nil, paymentMethods = [], sellerEmail = nil, shippingAddress = nil, shippingServiceSelected = nil, subtotal = nil, total = nil, externalTransaction = [], transactionArray = nil)
    @orderID = orderID
    @orderStatus = orderStatus
    @adjustmentAmount = adjustmentAmount
    @amountPaid = amountPaid
    @amountSaved = amountSaved
    @checkoutStatus = checkoutStatus
    @shippingDetails = shippingDetails
    @creatingUserRole = creatingUserRole
    @createdTime = createdTime
    @financeOfferID = financeOfferID
    @paymentMethods = paymentMethods
    @sellerEmail = sellerEmail
    @shippingAddress = shippingAddress
    @shippingServiceSelected = shippingServiceSelected
    @subtotal = subtotal
    @total = total
    @externalTransaction = externalTransaction
    @transactionArray = transactionArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedItemArrayType
class PaginatedItemArrayType
  @@schema_type = "PaginatedItemArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemArray", ["ItemArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]]

  attr_accessor :itemArray
  attr_accessor :paginationResult

  def initialize(itemArray = nil, paginationResult = nil)
    @itemArray = itemArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedOrderTransactionArrayType
class PaginatedOrderTransactionArrayType
  @@schema_type = "PaginatedOrderTransactionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["orderTransactionArray", ["OrderTransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderTransactionArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]]

  attr_accessor :orderTransactionArray
  attr_accessor :paginationResult

  def initialize(orderTransactionArray = nil, paginationResult = nil)
    @orderTransactionArray = orderTransactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedTransactionArrayType
class PaginatedTransactionArrayType
  @@schema_type = "PaginatedTransactionArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["transactionArray", ["TransactionArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionArray")]],
    ["paginationResult", ["PaginationResultType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaginationResult")]]]

  attr_accessor :transactionArray
  attr_accessor :paginationResult

  def initialize(transactionArray = nil, paginationResult = nil)
    @transactionArray = transactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationResultType
class PaginationResultType
  @@schema_type = "PaginationResultType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["totalNumberOfPages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalNumberOfPages")]],
    ["totalNumberOfEntries", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalNumberOfEntries")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :totalNumberOfPages
  attr_accessor :totalNumberOfEntries
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalNumberOfPages = nil, totalNumberOfEntries = nil)
    @totalNumberOfPages = totalNumberOfPages
    @totalNumberOfEntries = totalNumberOfEntries
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationType
class PaginationType
  @@schema_type = "PaginationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["entriesPerPage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EntriesPerPage")]],
    ["pageNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageNumber")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :entriesPerPage
  attr_accessor :pageNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(entriesPerPage = nil, pageNumber = nil)
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentDetailsType
class PaymentDetailsType
  @@schema_type = "PaymentDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["hoursToDeposit", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HoursToDeposit")]],
    ["daysToFullPayment", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DaysToFullPayment")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :hoursToDeposit
  attr_accessor :daysToFullPayment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(hoursToDeposit = nil, daysToFullPayment = nil)
    @hoursToDeposit = hoursToDeposit
    @daysToFullPayment = daysToFullPayment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMeansType
class PaymentMeansType
  @@schema_type = "PaymentMeansType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["typeCodeID", ["SellerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TypeCodeID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :typeCodeID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(typeCodeID = nil)
    @typeCodeID = typeCodeID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionDetailsType
class PaymentOptionDetailsType
  @@schema_type = "PaymentOptionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paymentOption", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentOption")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :paymentOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentOption = nil, description = nil)
    @paymentOption = paymentOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentType
class PaymentType
  @@schema_type = "PaymentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paymentMeans", ["PaymentMeansType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMeans")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :paymentMeans
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentMeans = nil)
    @paymentMeans = paymentMeans
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailsType
class PictureManagerDetailsType
  @@schema_type = "PictureManagerDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["subscriptionLevel", ["PictureManagerSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["storageUsed", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorageUsed")]],
    ["totalStorageAvailable", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalStorageAvailable")]],
    ["keepOriginal", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "KeepOriginal")]],
    ["watermarkEPS", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatermarkEPS")]],
    ["watermarkUserID", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WatermarkUserID")]],
    ["folder", ["PictureManagerFolderType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Folder")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :subscriptionLevel
  attr_accessor :storageUsed
  attr_accessor :totalStorageAvailable
  attr_accessor :keepOriginal
  attr_accessor :watermarkEPS
  attr_accessor :watermarkUserID
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, storageUsed = nil, totalStorageAvailable = nil, keepOriginal = nil, watermarkEPS = nil, watermarkUserID = nil, folder = [])
    @subscriptionLevel = subscriptionLevel
    @storageUsed = storageUsed
    @totalStorageAvailable = totalStorageAvailable
    @keepOriginal = keepOriginal
    @watermarkEPS = watermarkEPS
    @watermarkUserID = watermarkUserID
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerFolderType
class PictureManagerFolderType
  @@schema_type = "PictureManagerFolderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["folderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FolderID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["picture", ["PictureManagerPictureType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Picture")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :folderID
  attr_accessor :name
  attr_accessor :picture
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, name = nil, picture = [])
    @folderID = folderID
    @name = name
    @picture = picture
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayType
class PictureManagerPictureDisplayType
  @@schema_type = "PictureManagerPictureDisplayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayType", ["PictureManagerPictureDisplayTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayType")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["size", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Size")]],
    ["height", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Height")]],
    ["width", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Width")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :displayType
  attr_accessor :uRL
  attr_accessor :size
  attr_accessor :height
  attr_accessor :width
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, uRL = nil, size = nil, height = nil, width = nil)
    @displayType = displayType
    @uRL = uRL
    @size = size
    @height = height
    @width = width
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureType
class PictureManagerPictureType
  @@schema_type = "PictureManagerPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["date", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Date")]],
    ["displayFormat", ["PictureManagerPictureDisplayType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayFormat")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :pictureURL
  attr_accessor :name
  attr_accessor :date
  attr_accessor :displayFormat
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, name = nil, date = nil, displayFormat = [])
    @pictureURL = pictureURL
    @name = name
    @date = date
    @displayFormat = displayFormat
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionType
class PictureManagerSubscriptionType
  @@schema_type = "PictureManagerSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["subscriptionLevel", ["PictureManagerSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["storageSize", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StorageSize")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :subscriptionLevel
  attr_accessor :fee
  attr_accessor :storageSize
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, fee = nil, storageSize = nil)
    @subscriptionLevel = subscriptionLevel
    @fee = fee
    @storageSize = storageSize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PriceRangeFilterType
class PriceRangeFilterType
  @@schema_type = "PriceRangeFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :maxPrice
  attr_accessor :minPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxPrice = nil, minPrice = nil)
    @maxPrice = maxPrice
    @minPrice = minPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PricingRecommendationsType
class PricingRecommendationsType
  @@schema_type = "PricingRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productInfo", ["ProductInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductInfo")]]]

  attr_accessor :productInfo

  def initialize(productInfo = nil)
    @productInfo = productInfo
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFamilyType
class ProductFamilyType
  @@schema_type = "ProductFamilyType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "hasMoreChildren") => "SOAP::SOAPBoolean"}
  @@schema_element = [
    ["parentProduct", ["ProductType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ParentProduct")]],
    ["familyMembers", ["ProductType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FamilyMembers")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :parentProduct
  attr_accessor :familyMembers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_hasMoreChildren
    (@__xmlattr ||= {})[XSD::QName.new(nil, "hasMoreChildren")]
  end

  def xmlattr_hasMoreChildren=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "hasMoreChildren")] = value
  end

  def initialize(parentProduct = nil, familyMembers = [])
    @parentProduct = parentProduct
    @familyMembers = familyMembers
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFinderConstraintType
class ProductFinderConstraintType
  @@schema_type = "ProductFinderConstraintType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayName")]],
    ["displayValue", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayValue")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :displayName
  attr_accessor :displayValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayName = nil, displayValue = nil)
    @displayName = displayName
    @displayValue = displayValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductInfoType
class ProductInfoType
  @@schema_type = "ProductInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "productInfoID") => "SOAP::SOAPString"}
  @@schema_element = [
    ["averageStartPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AverageStartPrice")]],
    ["averageSoldPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AverageSoldPrice")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]]]

  attr_accessor :averageStartPrice
  attr_accessor :averageSoldPrice
  attr_accessor :title

  def xmlattr_productInfoID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productInfoID")]
  end

  def xmlattr_productInfoID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productInfoID")] = value
  end

  def initialize(averageStartPrice = nil, averageSoldPrice = nil, title = nil)
    @averageStartPrice = averageStartPrice
    @averageSoldPrice = averageSoldPrice
    @title = title
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductListingDetailsType
class ProductListingDetailsType
  @@schema_type = "ProductListingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["includeStockPhotoURL", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeStockPhotoURL")]],
    ["includePrefilledItemInformation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludePrefilledItemInformation")]],
    ["useStockPhotoURLAsGallery", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UseStockPhotoURLAsGallery")]],
    ["stockPhotoURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StockPhotoURL")]],
    ["copyright", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Copyright")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :productID
  attr_accessor :includeStockPhotoURL
  attr_accessor :includePrefilledItemInformation
  attr_accessor :useStockPhotoURLAsGallery
  attr_accessor :stockPhotoURL
  attr_accessor :copyright
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productID = nil, includeStockPhotoURL = nil, includePrefilledItemInformation = nil, useStockPhotoURLAsGallery = nil, stockPhotoURL = nil, copyright = [])
    @productID = productID
    @includeStockPhotoURL = includeStockPhotoURL
    @includePrefilledItemInformation = includePrefilledItemInformation
    @useStockPhotoURLAsGallery = useStockPhotoURLAsGallery
    @stockPhotoURL = stockPhotoURL
    @copyright = copyright
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductRecommendationsType
class ProductRecommendationsType < ::Array
  @@schema_type = "ProductInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Product", ["ProductInfoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Product")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchPageType
class ProductSearchPageType
  @@schema_type = "ProductSearchPageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["dataElements", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DataElements")]],
    ["searchCharacteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchCharacteristicsSet")]],
    ["searchType", ["CharacteristicsSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchType")]],
    ["sortCharacteristics", ["CharacteristicType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortCharacteristics")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :dataElements
  attr_accessor :searchCharacteristicsSet
  attr_accessor :searchType
  attr_accessor :sortCharacteristics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dataElements = [], searchCharacteristicsSet = nil, searchType = nil, sortCharacteristics = [])
    @dataElements = dataElements
    @searchCharacteristicsSet = searchCharacteristicsSet
    @searchType = searchType
    @sortCharacteristics = sortCharacteristics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchResultType
class ProductSearchResultType
  @@schema_type = "ProductSearchResultType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["approximatePages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApproximatePages")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]],
    ["productFamilies", ["ProductFamilyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFamilies")]],
    ["productFinderConstraints", ["ProductFinderConstraintType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderConstraints")]],
    ["tooManyMatchesFound", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TooManyMatchesFound")]],
    ["totalProducts", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalProducts")]],
    ["iD", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ID")]],
    ["numProducts", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumProducts")]],
    ["attributeSet", ["ResponseAttributeSetType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSet")]],
    ["displayStockPhotos", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayStockPhotos")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_accessor :iD
  attr_accessor :numProducts
  attr_accessor :attributeSet
  attr_accessor :displayStockPhotos
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil, iD = nil, numProducts = nil, attributeSet = [], displayStockPhotos = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @iD = iD
    @numProducts = numProducts
    @attributeSet = attributeSet
    @displayStockPhotos = displayStockPhotos
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchType
class ProductSearchType
  @@schema_type = "ProductSearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productSearchID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductSearchID")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["productID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductID")]],
    ["sortAttributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SortAttributeID")]],
    ["maxChildrenPerFamily", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxChildrenPerFamily")]],
    ["searchAttributes", ["SearchAttributesType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchAttributes")]],
    ["pagination", ["PaginationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Pagination")]],
    ["availableItemsOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AvailableItemsOnly")]],
    ["queryKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QueryKeywords")]],
    ["characteristicSetIDs", ["CharacteristicSetIDsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicSetIDs")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :productSearchID
  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :productID
  attr_accessor :sortAttributeID
  attr_accessor :maxChildrenPerFamily
  attr_accessor :searchAttributes
  attr_accessor :pagination
  attr_accessor :availableItemsOnly
  attr_accessor :queryKeywords
  attr_accessor :characteristicSetIDs
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productSearchID = nil, attributeSetID = nil, productFinderID = nil, productID = nil, sortAttributeID = nil, maxChildrenPerFamily = nil, searchAttributes = [], pagination = nil, availableItemsOnly = nil, queryKeywords = nil, characteristicSetIDs = nil)
    @productSearchID = productSearchID
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @productID = productID
    @sortAttributeID = sortAttributeID
    @maxChildrenPerFamily = maxChildrenPerFamily
    @searchAttributes = searchAttributes
    @pagination = pagination
    @availableItemsOnly = availableItemsOnly
    @queryKeywords = queryKeywords
    @characteristicSetIDs = characteristicSetIDs
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductType
class ProductType
  @@schema_type = "ProductType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_attribute = {XSD::QName.new(nil, "productID") => "SOAP::SOAPString", XSD::QName.new(nil, "stockPhotoURL") => "SOAP::SOAPAnyURI", XSD::QName.new(nil, "title") => "SOAP::SOAPString"}
  @@schema_element = [
    ["characteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSet")]],
    ["detailsURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DetailsURL")]],
    ["numItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NumItems")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :characteristicsSet
  attr_accessor :detailsURL
  attr_accessor :numItems
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def xmlattr_productID
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productID")]
  end

  def xmlattr_productID=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "productID")] = value
  end

  def xmlattr_stockPhotoURL
    (@__xmlattr ||= {})[XSD::QName.new(nil, "stockPhotoURL")]
  end

  def xmlattr_stockPhotoURL=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "stockPhotoURL")] = value
  end

  def xmlattr_title
    (@__xmlattr ||= {})[XSD::QName.new(nil, "title")]
  end

  def xmlattr_title=(value)
    (@__xmlattr ||= {})[XSD::QName.new(nil, "title")] = value
  end

  def initialize(characteristicsSet = nil, detailsURL = nil, numItems = nil, minPrice = nil, maxPrice = nil)
    @characteristicsSet = characteristicsSet
    @detailsURL = detailsURL
    @numItems = numItems
    @minPrice = minPrice
    @maxPrice = maxPrice
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotedItemType
class PromotedItemType
  @@schema_type = "PromotedItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["pictureURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["selfHostedURL", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelfHostedURL")]],
    ["position", "SOAP::SOAPInt"],
    ["promotionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionPrice")]],
    ["promotionPriceType", ["PromotionItemPriceTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionPriceType")]],
    ["selectionType", ["PromotionItemSelectionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelectionType")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :itemID
  attr_accessor :pictureURL
  attr_accessor :selfHostedURL
  attr_accessor :position
  attr_accessor :promotionPrice
  attr_accessor :promotionPriceType
  attr_accessor :selectionType
  attr_accessor :title
  attr_accessor :listingType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, pictureURL = nil, selfHostedURL = nil, position = nil, promotionPrice = nil, promotionPriceType = nil, selectionType = nil, title = nil, listingType = nil)
    @itemID = itemID
    @pictureURL = pictureURL
    @selfHostedURL = selfHostedURL
    @position = position
    @promotionPrice = promotionPrice
    @promotionPriceType = promotionPriceType
    @selectionType = selectionType
    @title = title
    @listingType = listingType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleArrayType
class PromotionRuleArrayType < ::Array
  @@schema_type = "PromotionRuleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["PromotionRule", ["PromotionRuleType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionRule")]]]
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleType
class PromotionRuleType
  @@schema_type = "PromotionRuleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["promotedItem", ["PromotedItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedItem")]],
    ["siteID", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["promotedStoreCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedStoreCategoryID")]],
    ["promotedeBayCategoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedeBayCategoryID")]],
    ["promotedKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotedKeywords")]],
    ["referringItemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringItemID")]],
    ["referringStoreCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringStoreCategoryID")]],
    ["referringeBayCategoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringeBayCategoryID")]],
    ["referringKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReferringKeywords")]],
    ["promotionScheme", ["PromotionSchemeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionScheme")]],
    ["promotionMethod", ["PromotionMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PromotionMethod")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :promotedItem
  attr_accessor :siteID
  attr_accessor :promotedStoreCategoryID
  attr_accessor :promotedeBayCategoryID
  attr_accessor :promotedKeywords
  attr_accessor :referringItemID
  attr_accessor :referringStoreCategoryID
  attr_accessor :referringeBayCategoryID
  attr_accessor :referringKeywords
  attr_accessor :promotionScheme
  attr_accessor :promotionMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotedItem = [], siteID = nil, promotedStoreCategoryID = nil, promotedeBayCategoryID = nil, promotedKeywords = nil, referringItemID = nil, referringStoreCategoryID = nil, referringeBayCategoryID = nil, referringKeywords = nil, promotionScheme = nil, promotionMethod = nil)
    @promotedItem = promotedItem
    @siteID = siteID
    @promotedStoreCategoryID = promotedStoreCategoryID
    @promotedeBayCategoryID = promotedeBayCategoryID
    @promotedKeywords = promotedKeywords
    @referringItemID = referringItemID
    @referringStoreCategoryID = referringStoreCategoryID
    @referringeBayCategoryID = referringeBayCategoryID
    @referringKeywords = referringKeywords
    @promotionScheme = promotionScheme
    @promotionMethod = promotionMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProximitySearchDetailsType
class ProximitySearchDetailsType
  @@schema_type = "ProximitySearchDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["includeInProximitySearch", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeInProximitySearch")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :includeInProximitySearch
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(includeInProximitySearch = nil, postalCode = nil)
    @includeInProximitySearch = includeInProximitySearch
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProximitySearchType
class ProximitySearchType
  @@schema_type = "ProximitySearchType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxDistance", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxDistance")]],
    ["postalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostalCode")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionDetailsType
class RegionDetailsType
  @@schema_type = "RegionDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :regionID
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, description = nil)
    @regionID = regionID
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReminderCustomizationType
class ReminderCustomizationType
  @@schema_type = "ReminderCustomizationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["durationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DurationInDays")]],
    ["include", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Include")]]]

  attr_accessor :durationInDays
  attr_accessor :include

  def initialize(durationInDays = nil, include = nil)
    @durationInDays = durationInDays
    @include = include
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemindersType
class RemindersType
  @@schema_type = "RemindersType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paymentToSendCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentToSendCount")]],
    ["feedbackToReceiveCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackToReceiveCount")]],
    ["feedbackToSendCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackToSendCount")]],
    ["outbidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OutbidCount")]],
    ["paymentToReceiveCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentToReceiveCount")]],
    ["secondChanceOfferCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceOfferCount")]],
    ["shippingNeededCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingNeededCount")]],
    ["relistingNeededCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RelistingNeededCount")]]]

  attr_accessor :paymentToSendCount
  attr_accessor :feedbackToReceiveCount
  attr_accessor :feedbackToSendCount
  attr_accessor :outbidCount
  attr_accessor :paymentToReceiveCount
  attr_accessor :secondChanceOfferCount
  attr_accessor :shippingNeededCount
  attr_accessor :relistingNeededCount

  def initialize(paymentToSendCount = nil, feedbackToReceiveCount = nil, feedbackToSendCount = nil, outbidCount = nil, paymentToReceiveCount = nil, secondChanceOfferCount = nil, shippingNeededCount = nil, relistingNeededCount = nil)
    @paymentToSendCount = paymentToSendCount
    @feedbackToReceiveCount = feedbackToReceiveCount
    @feedbackToSendCount = feedbackToSendCount
    @outbidCount = outbidCount
    @paymentToReceiveCount = paymentToReceiveCount
    @secondChanceOfferCount = secondChanceOfferCount
    @shippingNeededCount = shippingNeededCount
    @relistingNeededCount = relistingNeededCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}RequestCategoriesType
class RequestCategoriesType
  @@schema_type = "RequestCategoriesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoriesOnly", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoriesOnly")]],
    ["maxCategories", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxCategories")]],
    ["maxSubcategories", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxSubcategories")]],
    ["levels", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Levels")]]]

  attr_accessor :categoriesOnly
  attr_accessor :maxCategories
  attr_accessor :maxSubcategories
  attr_accessor :levels

  def initialize(categoriesOnly = nil, maxCategories = nil, maxSubcategories = nil, levels = nil)
    @categoriesOnly = categoriesOnly
    @maxCategories = maxCategories
    @maxSubcategories = maxSubcategories
    @levels = levels
  end
end

# {urn:ebay:apis:eBLBaseComponents}ResponseAttributeSetType
class ResponseAttributeSetType
  @@schema_type = "ResponseAttributeSetType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["approximatePages", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApproximatePages")]],
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["hasMore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasMore")]],
    ["productFamilies", ["ProductFamilyType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFamilies")]],
    ["productFinderConstraints", ["ProductFinderConstraintType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderConstraints")]],
    ["tooManyMatchesFound", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TooManyMatchesFound")]],
    ["totalProducts", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalProducts")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseStatusType
class ReviseStatusType
  @@schema_type = "ReviseStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemRevised", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemRevised")]],
    ["buyItNowAdded", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowAdded")]],
    ["buyItNowLowered", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowLowered")]],
    ["reserveLowered", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveLowered")]],
    ["reserveRemoved", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveRemoved")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :itemRevised
  attr_accessor :buyItNowAdded
  attr_accessor :buyItNowLowered
  attr_accessor :reserveLowered
  attr_accessor :reserveRemoved
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemRevised = nil, buyItNowAdded = nil, buyItNowLowered = nil, reserveLowered = nil, reserveRemoved = nil)
    @itemRevised = itemRevised
    @buyItNowAdded = buyItNowAdded
    @buyItNowLowered = buyItNowLowered
    @reserveLowered = reserveLowered
    @reserveRemoved = reserveRemoved
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SIFFTASRecommendationsType
class SIFFTASRecommendationsType
  @@schema_type = "SIFFTASRecommendationsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetArray", ["AttributeSetArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SalesTaxType
class SalesTaxType
  @@schema_type = "SalesTaxType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["salesTaxPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxPercent")]],
    ["salesTaxState", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxState")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["salesTaxAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxAmount")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :salesTaxPercent
  attr_accessor :salesTaxState
  attr_accessor :shippingIncludedInTax
  attr_accessor :salesTaxAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(salesTaxPercent = nil, salesTaxState = nil, shippingIncludedInTax = nil, salesTaxAmount = nil)
    @salesTaxPercent = salesTaxPercent
    @salesTaxState = salesTaxState
    @shippingIncludedInTax = shippingIncludedInTax
    @salesTaxAmount = salesTaxAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ScheduleType
class ScheduleType
  @@schema_type = "ScheduleType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["scheduleID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleID")]],
    ["scheduleTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ScheduleTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :scheduleID
  attr_accessor :scheduleTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(scheduleID = nil, scheduleTime = nil)
    @scheduleID = scheduleID
    @scheduleTime = scheduleTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SchedulingInfoType
class SchedulingInfoType
  @@schema_type = "SchedulingInfoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["maxScheduledMinutes", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxScheduledMinutes")]],
    ["minScheduledMinutes", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinScheduledMinutes")]],
    ["maxScheduledItems", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxScheduledItems")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :maxScheduledMinutes
  attr_accessor :minScheduledMinutes
  attr_accessor :maxScheduledItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxScheduledMinutes = nil, minScheduledMinutes = nil, maxScheduledItems = nil)
    @maxScheduledMinutes = maxScheduledMinutes
    @minScheduledMinutes = minScheduledMinutes
    @maxScheduledItems = maxScheduledItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchAttributesType
class SearchAttributesType
  @@schema_type = "SearchAttributesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeID")]],
    ["dateSpecifier", ["DateSpecifierCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DateSpecifier")]],
    ["rangeSpecifier", ["RangeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RangeSpecifier")]],
    ["valueList", ["ValType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueList")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attributeID
  attr_accessor :dateSpecifier
  attr_accessor :rangeSpecifier
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateSpecifier = nil, rangeSpecifier = nil, valueList = [])
    @attributeID = attributeID
    @dateSpecifier = dateSpecifier
    @rangeSpecifier = rangeSpecifier
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchDetailsType
class SearchDetailsType
  @@schema_type = "SearchDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["buyItNowEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyItNowEnabled")]],
    ["picture", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Picture")]],
    ["recentListing", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RecentListing")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :buyItNowEnabled
  attr_accessor :picture
  attr_accessor :recentListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyItNowEnabled = nil, picture = nil, recentListing = nil)
    @buyItNowEnabled = buyItNowEnabled
    @picture = picture
    @recentListing = recentListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationFilterType
class SearchLocationFilterType
  @@schema_type = "SearchLocationFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["countryCode", ["CountryCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CountryCode")]],
    ["itemLocation", ["ItemLocationCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemLocation")]],
    ["searchLocation", ["SearchLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchLocation")]],
    ["currency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Currency")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :countryCode
  attr_accessor :itemLocation
  attr_accessor :searchLocation
  attr_accessor :currency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(countryCode = nil, itemLocation = nil, searchLocation = nil, currency = nil)
    @countryCode = countryCode
    @itemLocation = itemLocation
    @searchLocation = searchLocation
    @currency = currency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationType
class SearchLocationType
  @@schema_type = "SearchLocationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["regionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegionID")]],
    ["siteLocation", ["SiteLocationType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteLocation")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :regionID
  attr_accessor :siteLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, siteLocation = nil)
    @regionID = regionID
    @siteLocation = siteLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchRequestType
class SearchRequestType
  @@schema_type = "SearchRequestType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["attributeSetID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AttributeSetID")]],
    ["productFinderID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductFinderID")]],
    ["searchAttributes", ["SearchAttributesType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchAttributes")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :searchAttributes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetID = nil, productFinderID = nil, searchAttributes = [])
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @searchAttributes = searchAttributes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemArrayType
class SearchResultItemArrayType < ::Array
  @@schema_type = "SearchResultItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["SearchResultItem", ["SearchResultItemType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultItem")]]]
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemType
class SearchResultItemType
  @@schema_type = "SearchResultItemType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["itemSpecific", ["NameValueListArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemSpecific")]],
    ["searchResultValues", ["SearchResultValuesCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchResultValues")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :item
  attr_accessor :itemSpecific
  attr_accessor :searchResultValues
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, itemSpecific = nil, searchResultValues = [])
    @item = item
    @itemSpecific = itemSpecific
    @searchResultValues = searchResultValues
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchStoreFilterType
class SearchStoreFilterType
  @@schema_type = "SearchStoreFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["storeSearch", ["StoreSearchCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreSearch")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :storeName
  attr_accessor :storeSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeName = nil, storeSearch = nil)
    @storeName = storeName
    @storeSearch = storeSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFavoriteItemPreferencesType
class SellerFavoriteItemPreferencesType
  @@schema_type = "SellerFavoriteItemPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["searchKeywords", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchKeywords")]],
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["listingType", ["ListingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingType")]],
    ["searchSortOrder", ["StoreItemListSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SearchSortOrder")]],
    ["minPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinPrice")]],
    ["maxPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MaxPrice")]],
    ["favoriteItemID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FavoriteItemID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :searchKeywords
  attr_accessor :storeCategoryID
  attr_accessor :listingType
  attr_accessor :searchSortOrder
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :favoriteItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchKeywords = nil, storeCategoryID = nil, listingType = nil, searchSortOrder = nil, minPrice = nil, maxPrice = nil, favoriteItemID = [])
    @searchKeywords = searchKeywords
    @storeCategoryID = storeCategoryID
    @listingType = listingType
    @searchSortOrder = searchSortOrder
    @minPrice = minPrice
    @maxPrice = maxPrice
    @favoriteItemID = favoriteItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentPreferencesType
class SellerPaymentPreferencesType
  @@schema_type = "SellerPaymentPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["alwaysUseThisPaymentAddress", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AlwaysUseThisPaymentAddress")]],
    ["displayPayNowButton", ["DisplayPayNowButtonCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayPayNowButton")]],
    ["payPalPreferred", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalPreferred")]],
    ["defaultPayPalEmailAddress", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DefaultPayPalEmailAddress")]],
    ["payPalAlwaysOn", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalAlwaysOn")]],
    ["sellerPaymentAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentAddress")]],
    ["uPSRateOption", ["UPSRateOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UPSRateOption")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :alwaysUseThisPaymentAddress
  attr_accessor :displayPayNowButton
  attr_accessor :payPalPreferred
  attr_accessor :defaultPayPalEmailAddress
  attr_accessor :payPalAlwaysOn
  attr_accessor :sellerPaymentAddress
  attr_accessor :uPSRateOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alwaysUseThisPaymentAddress = nil, displayPayNowButton = nil, payPalPreferred = nil, defaultPayPalEmailAddress = nil, payPalAlwaysOn = nil, sellerPaymentAddress = nil, uPSRateOption = nil)
    @alwaysUseThisPaymentAddress = alwaysUseThisPaymentAddress
    @displayPayNowButton = displayPayNowButton
    @payPalPreferred = payPalPreferred
    @defaultPayPalEmailAddress = defaultPayPalEmailAddress
    @payPalAlwaysOn = payPalAlwaysOn
    @sellerPaymentAddress = sellerPaymentAddress
    @uPSRateOption = uPSRateOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentType
class SellerPaymentType
  @@schema_type = "SellerPaymentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["itemID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemID")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["orderID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OrderID")]],
    ["sellerInventoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInventoryID")]],
    ["privateNotes", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrivateNotes")]],
    ["externalProductID", ["ExternalProductIDType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalProductID")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]],
    ["paymentType", ["PaymentTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentType")]],
    ["transactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionPrice")]],
    ["shippingReimbursement", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingReimbursement")]],
    ["commission", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Commission")]],
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["paidTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaidTime")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :sellerInventoryID
  attr_accessor :privateNotes
  attr_accessor :externalProductID
  attr_accessor :title
  attr_accessor :paymentType
  attr_accessor :transactionPrice
  attr_accessor :shippingReimbursement
  attr_accessor :commission
  attr_accessor :amountPaid
  attr_accessor :paidTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, orderID = nil, sellerInventoryID = nil, privateNotes = nil, externalProductID = nil, title = nil, paymentType = nil, transactionPrice = nil, shippingReimbursement = nil, commission = nil, amountPaid = nil, paidTime = nil)
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @sellerInventoryID = sellerInventoryID
    @privateNotes = privateNotes
    @externalProductID = externalProductID
    @title = title
    @paymentType = paymentType
    @transactionPrice = transactionPrice
    @shippingReimbursement = shippingReimbursement
    @commission = commission
    @amountPaid = amountPaid
    @paidTime = paidTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerType
class SellerType
  @@schema_type = "SellerType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["paisaPayStatus", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaisaPayStatus")]],
    ["allowPaymentEdit", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllowPaymentEdit")]],
    ["billingCurrency", ["CurrencyCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BillingCurrency")]],
    ["checkoutEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutEnabled")]],
    ["cIPBankAccountStored", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CIPBankAccountStored")]],
    ["goodStanding", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GoodStanding")]],
    ["liveAuctionAuthorized", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LiveAuctionAuthorized")]],
    ["merchandizingPref", ["MerchandizingPrefCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MerchandizingPref")]],
    ["qualifiesForB2BVAT", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QualifiesForB2BVAT")]],
    ["sellerGuaranteeLevel", ["SellerGuaranteeLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerGuaranteeLevel")]],
    ["sellerLevel", ["SellerLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerLevel")]],
    ["sellerPaymentAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaymentAddress")]],
    ["schedulingInfo", ["SchedulingInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SchedulingInfo")]],
    ["storeOwner", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreOwner")]],
    ["storeURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreURL")]],
    ["sellerBusinessType", ["SellerBusinessCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerBusinessType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :paisaPayStatus
  attr_accessor :allowPaymentEdit
  attr_accessor :billingCurrency
  attr_accessor :checkoutEnabled
  attr_accessor :cIPBankAccountStored
  attr_accessor :goodStanding
  attr_accessor :liveAuctionAuthorized
  attr_accessor :merchandizingPref
  attr_accessor :qualifiesForB2BVAT
  attr_accessor :sellerGuaranteeLevel
  attr_accessor :sellerLevel
  attr_accessor :sellerPaymentAddress
  attr_accessor :schedulingInfo
  attr_accessor :storeOwner
  attr_accessor :storeURL
  attr_accessor :sellerBusinessType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paisaPayStatus = nil, allowPaymentEdit = nil, billingCurrency = nil, checkoutEnabled = nil, cIPBankAccountStored = nil, goodStanding = nil, liveAuctionAuthorized = nil, merchandizingPref = nil, qualifiesForB2BVAT = nil, sellerGuaranteeLevel = nil, sellerLevel = nil, sellerPaymentAddress = nil, schedulingInfo = nil, storeOwner = nil, storeURL = nil, sellerBusinessType = nil)
    @paisaPayStatus = paisaPayStatus
    @allowPaymentEdit = allowPaymentEdit
    @billingCurrency = billingCurrency
    @checkoutEnabled = checkoutEnabled
    @cIPBankAccountStored = cIPBankAccountStored
    @goodStanding = goodStanding
    @liveAuctionAuthorized = liveAuctionAuthorized
    @merchandizingPref = merchandizingPref
    @qualifiesForB2BVAT = qualifiesForB2BVAT
    @sellerGuaranteeLevel = sellerGuaranteeLevel
    @sellerLevel = sellerLevel
    @sellerPaymentAddress = sellerPaymentAddress
    @schedulingInfo = schedulingInfo
    @storeOwner = storeOwner
    @storeURL = storeURL
    @sellerBusinessType = sellerBusinessType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductDetailsType
class SellingManagerProductDetailsType
  @@schema_type = "SellingManagerProductDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["productName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductName")]],
    ["partNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PartNumber")]],
    ["productPartNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ProductPartNumber")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :productName
  attr_accessor :partNumber
  attr_accessor :productPartNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productName = nil, partNumber = nil, productPartNumber = nil)
    @productName = productName
    @partNumber = partNumber
    @productPartNumber = productPartNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingStatusType
class SellingStatusType
  @@schema_type = "SellingStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["bidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidCount")]],
    ["bidIncrement", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidIncrement")]],
    ["convertedCurrentPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedCurrentPrice")]],
    ["currentPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CurrentPrice")]],
    ["highBidder", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HighBidder")]],
    ["leadCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeadCount")]],
    ["minimumToBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MinimumToBid")]],
    ["quantitySold", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantitySold")]],
    ["reserveMet", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReserveMet")]],
    ["secondChanceEligible", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SecondChanceEligible")]],
    ["bidderCount", ["SOAP::SOAPLong", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BidderCount")]],
    ["listingStatus", ["ListingStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingStatus")]],
    ["finalValueFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinalValueFee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :bidCount
  attr_accessor :bidIncrement
  attr_accessor :convertedCurrentPrice
  attr_accessor :currentPrice
  attr_accessor :highBidder
  attr_accessor :leadCount
  attr_accessor :minimumToBid
  attr_accessor :quantitySold
  attr_accessor :reserveMet
  attr_accessor :secondChanceEligible
  attr_accessor :bidderCount
  attr_accessor :listingStatus
  attr_accessor :finalValueFee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidCount = nil, bidIncrement = nil, convertedCurrentPrice = nil, currentPrice = nil, highBidder = nil, leadCount = nil, minimumToBid = nil, quantitySold = nil, reserveMet = nil, secondChanceEligible = nil, bidderCount = nil, listingStatus = nil, finalValueFee = nil)
    @bidCount = bidCount
    @bidIncrement = bidIncrement
    @convertedCurrentPrice = convertedCurrentPrice
    @currentPrice = currentPrice
    @highBidder = highBidder
    @leadCount = leadCount
    @minimumToBid = minimumToBid
    @quantitySold = quantitySold
    @reserveMet = reserveMet
    @secondChanceEligible = secondChanceEligible
    @bidderCount = bidderCount
    @listingStatus = listingStatus
    @finalValueFee = finalValueFee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingSummaryType
class SellingSummaryType
  @@schema_type = "SellingSummaryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["activeAuctionCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ActiveAuctionCount")]],
    ["auctionSellingCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuctionSellingCount")]],
    ["auctionBidCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AuctionBidCount")]],
    ["totalAuctionSellingValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalAuctionSellingValue")]],
    ["totalSoldCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalSoldCount")]],
    ["totalSoldValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalSoldValue")]],
    ["soldDurationInDays", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SoldDurationInDays")]]]

  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentType
class ShipmentType
  @@schema_type = "ShipmentType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["estimatedDeliveryDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EstimatedDeliveryDate")]],
    ["insuredValue", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuredValue")]],
    ["packageDepth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageDepth")]],
    ["packageLength", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageLength")]],
    ["packageWidth", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PackageWidth")]],
    ["payPalShipmentID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PayPalShipmentID")]],
    ["shipmentID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentID")]],
    ["postageTotal", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostageTotal")]],
    ["printedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PrintedTime")]],
    ["shipFromAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipFromAddress")]],
    ["shippingAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingAddress")]],
    ["shippingCarrierUsed", ["ShippingCarrierCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingCarrierUsed")]],
    ["shippingFeature", ["ShippingFeatureCodeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingFeature")]],
    ["shippingPackage", ["ShippingPackageCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingPackage")]],
    ["shippingServiceUsed", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceUsed")]],
    ["shipmentTrackingNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackingNumber")]],
    ["weightMajor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMajor")]],
    ["weightMinor", ["MeasureType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WeightMinor")]],
    ["itemTransactionID", ["ItemTransactionIDType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemTransactionID")]],
    ["deliveryDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryDate")]],
    ["deliveryStatus", ["ShipmentDeliveryStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DeliveryStatus")]],
    ["refundGrantedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundGrantedTime")]],
    ["refundRequestedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RefundRequestedTime")]],
    ["status", ["ShipmentStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :estimatedDeliveryDate
  attr_accessor :insuredValue
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :payPalShipmentID
  attr_accessor :shipmentID
  attr_accessor :postageTotal
  attr_accessor :printedTime
  attr_accessor :shipFromAddress
  attr_accessor :shippingAddress
  attr_accessor :shippingCarrierUsed
  attr_accessor :shippingFeature
  attr_accessor :shippingPackage
  attr_accessor :shippingServiceUsed
  attr_accessor :shipmentTrackingNumber
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :itemTransactionID
  attr_accessor :deliveryDate
  attr_accessor :deliveryStatus
  attr_accessor :refundGrantedTime
  attr_accessor :refundRequestedTime
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(estimatedDeliveryDate = nil, insuredValue = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, payPalShipmentID = nil, shipmentID = nil, postageTotal = nil, printedTime = nil, shipFromAddress = nil, shippingAddress = nil, shippingCarrierUsed = nil, shippingFeature = [], shippingPackage = nil, shippingServiceUsed = nil, shipmentTrackingNumber = nil, weightMajor = nil, weightMinor = nil, itemTransactionID = [], deliveryDate = nil, deliveryStatus = nil, refundGrantedTime = nil, refundRequestedTime = nil, status = nil)
    @estimatedDeliveryDate = estimatedDeliveryDate
    @insuredValue = insuredValue
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @payPalShipmentID = payPalShipmentID
    @shipmentID = shipmentID
    @postageTotal = postageTotal
    @printedTime = printedTime
    @shipFromAddress = shipFromAddress
    @shippingAddress = shippingAddress
    @shippingCarrierUsed = shippingCarrierUsed
    @shippingFeature = shippingFeature
    @shippingPackage = shippingPackage
    @shippingServiceUsed = shippingServiceUsed
    @shipmentTrackingNumber = shipmentTrackingNumber
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @itemTransactionID = itemTransactionID
    @deliveryDate = deliveryDate
    @deliveryStatus = deliveryStatus
    @refundGrantedTime = refundGrantedTime
    @refundRequestedTime = refundRequestedTime
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingDetailsType
class ShippingDetailsType
  @@schema_type = "ShippingDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["allowPaymentEdit", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AllowPaymentEdit")]],
    ["applyShippingDiscount", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ApplyShippingDiscount")]],
    ["calculatedShippingRate", ["CalculatedShippingRateType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CalculatedShippingRate")]],
    ["carrierShippingFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CarrierShippingFee")]],
    ["changePaymentInstructions", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChangePaymentInstructions")]],
    ["insuranceFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceFee")]],
    ["insuranceOption", ["InsuranceOptionCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceOption")]],
    ["insuranceTotal", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceTotal")]],
    ["insuranceWanted", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InsuranceWanted")]],
    ["paymentEdited", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentEdited")]],
    ["paymentInstructions", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentInstructions")]],
    ["salesTax", ["SalesTaxType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTax")]],
    ["sellerPostalCode", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPostalCode")]],
    ["shippingRateErrorMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRateErrorMessage")]],
    ["shippingRateType", ["ShippingRateTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingRateType")]],
    ["shippingServiceOptions", ["ShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceOptions")]],
    ["internationalShippingServiceOption", ["InternationalShippingServiceOptionsType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalShippingServiceOption")]],
    ["shippingType", ["ShippingTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingType")]],
    ["sellingManagerSalesRecordNumber", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingManagerSalesRecordNumber")]],
    ["thirdPartyCheckout", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThirdPartyCheckout")]],
    ["taxTable", ["TaxTableType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxTable")]],
    ["getItFast", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GetItFast")]],
    ["shipmentTrackingNumber", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShipmentTrackingNumber")]],
    ["shippingServiceUsed", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceUsed")]],
    ["defaultShippingCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DefaultShippingCost")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :allowPaymentEdit
  attr_accessor :applyShippingDiscount
  attr_accessor :calculatedShippingRate
  attr_accessor :carrierShippingFee
  attr_accessor :changePaymentInstructions
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_accessor :insuranceTotal
  attr_accessor :insuranceWanted
  attr_accessor :paymentEdited
  attr_accessor :paymentInstructions
  attr_accessor :salesTax
  attr_accessor :sellerPostalCode
  attr_accessor :shippingRateErrorMessage
  attr_accessor :shippingRateType
  attr_accessor :shippingServiceOptions
  attr_accessor :internationalShippingServiceOption
  attr_accessor :shippingType
  attr_accessor :sellingManagerSalesRecordNumber
  attr_accessor :thirdPartyCheckout
  attr_accessor :taxTable
  attr_accessor :getItFast
  attr_accessor :shipmentTrackingNumber
  attr_accessor :shippingServiceUsed
  attr_accessor :defaultShippingCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(allowPaymentEdit = nil, applyShippingDiscount = nil, calculatedShippingRate = nil, carrierShippingFee = nil, changePaymentInstructions = nil, insuranceFee = nil, insuranceOption = nil, insuranceTotal = nil, insuranceWanted = nil, paymentEdited = nil, paymentInstructions = nil, salesTax = nil, sellerPostalCode = nil, shippingRateErrorMessage = nil, shippingRateType = nil, shippingServiceOptions = [], internationalShippingServiceOption = [], shippingType = nil, sellingManagerSalesRecordNumber = nil, thirdPartyCheckout = nil, taxTable = nil, getItFast = nil, shipmentTrackingNumber = nil, shippingServiceUsed = nil, defaultShippingCost = nil)
    @allowPaymentEdit = allowPaymentEdit
    @applyShippingDiscount = applyShippingDiscount
    @calculatedShippingRate = calculatedShippingRate
    @carrierShippingFee = carrierShippingFee
    @changePaymentInstructions = changePaymentInstructions
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @insuranceTotal = insuranceTotal
    @insuranceWanted = insuranceWanted
    @paymentEdited = paymentEdited
    @paymentInstructions = paymentInstructions
    @salesTax = salesTax
    @sellerPostalCode = sellerPostalCode
    @shippingRateErrorMessage = shippingRateErrorMessage
    @shippingRateType = shippingRateType
    @shippingServiceOptions = shippingServiceOptions
    @internationalShippingServiceOption = internationalShippingServiceOption
    @shippingType = shippingType
    @sellingManagerSalesRecordNumber = sellingManagerSalesRecordNumber
    @thirdPartyCheckout = thirdPartyCheckout
    @taxTable = taxTable
    @getItFast = getItFast
    @shipmentTrackingNumber = shipmentTrackingNumber
    @shippingServiceUsed = shippingServiceUsed
    @defaultShippingCost = defaultShippingCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingLocationDetailsType
class ShippingLocationDetailsType
  @@schema_type = "ShippingLocationDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingLocation", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingLocation")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :shippingLocation
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingLocation = nil, description = nil)
    @shippingLocation = shippingLocation
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceDetailsType
class ShippingServiceDetailsType
  @@schema_type = "ShippingServiceDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["expeditedService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpeditedService")]],
    ["internationalService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "InternationalService")]],
    ["shippingService", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceID")]],
    ["shippingTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMax")]],
    ["shippingTimeMin", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMin")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :description
  attr_accessor :expeditedService
  attr_accessor :internationalService
  attr_accessor :shippingService
  attr_accessor :shippingServiceID
  attr_accessor :shippingTimeMax
  attr_accessor :shippingTimeMin
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, expeditedService = nil, internationalService = nil, shippingService = nil, shippingServiceID = nil, shippingTimeMax = nil, shippingTimeMin = nil)
    @description = description
    @expeditedService = expeditedService
    @internationalService = internationalService
    @shippingService = shippingService
    @shippingServiceID = shippingServiceID
    @shippingTimeMax = shippingTimeMax
    @shippingTimeMin = shippingTimeMin
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceOptionsType
class ShippingServiceOptionsType
  @@schema_type = "ShippingServiceOptionsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["shippingInsuranceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingInsuranceCost")]],
    ["shippingService", ["ShippingServiceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingService")]],
    ["shippingServiceCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceCost")]],
    ["shippingServiceAdditionalCost", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceAdditionalCost")]],
    ["shippingServicePriority", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServicePriority")]],
    ["expeditedService", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExpeditedService")]],
    ["shippingTimeMin", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMin")]],
    ["shippingTimeMax", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTimeMax")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :shippingInsuranceCost
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :expeditedService
  attr_accessor :shippingTimeMin
  attr_accessor :shippingTimeMax
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingInsuranceCost = nil, shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, expeditedService = nil, shippingTimeMin = nil, shippingTimeMax = nil)
    @shippingInsuranceCost = shippingInsuranceCost
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @expeditedService = expeditedService
    @shippingTimeMin = shippingTimeMin
    @shippingTimeMax = shippingTimeMax
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermRequiredDefinitionType
class ShippingTermRequiredDefinitionType
  @@schema_type = "ShippingTermRequiredDefinitionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDefaultsType
class SiteDefaultsType
  @@schema_type = "SiteDefaultsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["listingDuration", ["ListingDurationReferenceType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ListingDuration")]],
    ["shippingTermsRequired", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingTermsRequired")]],
    ["bestOfferEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferEnabled")]],
    ["homePageFeaturedEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePageFeaturedEnabled")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :homePageFeaturedEnabled
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, homePageFeaturedEnabled = nil)
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDetailsType
class SiteDetailsType
  @@schema_type = "SiteDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["siteID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :site
  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, siteID = nil)
    @site = site
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteHostedPictureType
class SiteHostedPictureType
  @@schema_type = "SiteHostedPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["photoDisplay", ["PhotoDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhotoDisplay")]],
    ["galleryType", ["GalleryTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :pictureURL
  attr_accessor :photoDisplay
  attr_accessor :galleryType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = [], photoDisplay = nil, galleryType = nil)
    @pictureURL = pictureURL
    @photoDisplay = photoDisplay
    @galleryType = galleryType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteLocationType
class SiteLocationType
  @@schema_type = "SiteLocationType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["siteID", ["SiteIDFilterCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(siteID = nil)
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteWideCharacteristicsType
class SiteWideCharacteristicsType
  @@schema_type = "SiteWideCharacteristicsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["characteristicsSet", ["CharacteristicsSetType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharacteristicsSet")]],
    ["excludeCategoryID", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeCategoryID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :characteristicsSet
  attr_accessor :excludeCategoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(characteristicsSet = nil, excludeCategoryID = [])
    @characteristicsSet = characteristicsSet
    @excludeCategoryID = excludeCategoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SpellingSuggestionType
class SpellingSuggestionType
  @@schema_type = "SpellingSuggestionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["matchingItemCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MatchingItemCount")]],
    ["text", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Text")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :matchingItemCount
  attr_accessor :text
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(matchingItemCount = nil, text = [])
    @matchingItemCount = matchingItemCount
    @text = text
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeArrayType
class StoreColorSchemeArrayType < ::Array
  @@schema_type = "StoreColorSchemeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["ColorScheme", ["StoreColorSchemeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorScheme")]]]
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeType
class StoreColorSchemeType
  @@schema_type = "StoreColorSchemeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["colorSchemeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorSchemeID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["color", ["StoreColorType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Color")]],
    ["font", ["StoreFontType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Font")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :colorSchemeID
  attr_accessor :name
  attr_accessor :color
  attr_accessor :font
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(colorSchemeID = nil, name = nil, color = nil, font = nil)
    @colorSchemeID = colorSchemeID
    @name = name
    @color = color
    @font = font
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorType
class StoreColorType
  @@schema_type = "StoreColorType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["primary", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Primary")]],
    ["secondary", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Secondary")]],
    ["accent", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Accent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :primary
  attr_accessor :secondary
  attr_accessor :accent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(primary = nil, secondary = nil, accent = nil)
    @primary = primary
    @secondary = secondary
    @accent = accent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryArrayType
class StoreCustomCategoryArrayType < ::Array
  @@schema_type = "StoreCustomCategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["CustomCategory", ["StoreCustomCategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomCategory")]]]
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryType
class StoreCustomCategoryType
  @@schema_type = "StoreCustomCategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["childrenCategories", ["StoreCustomCategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ChildrenCategories")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :categoryID
  attr_accessor :name
  attr_accessor :order
  attr_accessor :childrenCategories
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, name = nil, order = nil, childrenCategories = nil)
    @categoryID = categoryID
    @name = name
    @order = order
    @childrenCategories = childrenCategories
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkType
class StoreCustomListingHeaderLinkType
  @@schema_type = "StoreCustomListingHeaderLinkType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["linkID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkID")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["linkType", ["StoreCustomListingHeaderLinkCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :linkID
  attr_accessor :order
  attr_accessor :linkType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(linkID = nil, order = nil, linkType = nil)
    @linkID = linkID
    @order = order
    @linkType = linkType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderType
class StoreCustomListingHeaderType
  @@schema_type = "StoreCustomListingHeaderType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["displayType", ["StoreCustomListingHeaderDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayType")]],
    ["hasLogo", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasLogo")]],
    ["hasSearchBox", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HasSearchBox")]],
    ["linkToInclude", ["StoreCustomListingHeaderLinkType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LinkToInclude")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :displayType
  attr_accessor :hasLogo
  attr_accessor :hasSearchBox
  attr_accessor :linkToInclude
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, hasLogo = nil, hasSearchBox = nil, linkToInclude = [])
    @displayType = displayType
    @hasLogo = hasLogo
    @hasSearchBox = hasSearchBox
    @linkToInclude = linkToInclude
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageArrayType
class StoreCustomPageArrayType < ::Array
  @@schema_type = "StoreCustomPageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["CustomPage", ["StoreCustomPageType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomPage")]]]
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageType
class StoreCustomPageType
  @@schema_type = "StoreCustomPageType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["pageID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PageID")]],
    ["uRLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLPath")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["status", ["StoreCustomPageStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["content", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Content")]],
    ["leftNav", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LeftNav")]],
    ["previewEnabled", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PreviewEnabled")]],
    ["order", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Order")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :pageID
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :status
  attr_accessor :content
  attr_accessor :leftNav
  attr_accessor :previewEnabled
  attr_accessor :order
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, pageID = nil, uRLPath = nil, uRL = nil, status = nil, content = nil, leftNav = nil, previewEnabled = nil, order = nil)
    @name = name
    @pageID = pageID
    @uRLPath = uRLPath
    @uRL = uRL
    @status = status
    @content = content
    @leftNav = leftNav
    @previewEnabled = previewEnabled
    @order = order
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontType
class StoreFontType
  @@schema_type = "StoreFontType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["nameFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameFace")]],
    ["nameSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameSize")]],
    ["nameColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NameColor")]],
    ["titleFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleFace")]],
    ["titleSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleSize")]],
    ["titleColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TitleColor")]],
    ["descFace", ["StoreFontFaceCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescFace")]],
    ["descSize", ["StoreFontSizeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescSize")]],
    ["descColor", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DescColor")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :nameFace
  attr_accessor :nameSize
  attr_accessor :nameColor
  attr_accessor :titleFace
  attr_accessor :titleSize
  attr_accessor :titleColor
  attr_accessor :descFace
  attr_accessor :descSize
  attr_accessor :descColor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(nameFace = nil, nameSize = nil, nameColor = nil, titleFace = nil, titleSize = nil, titleColor = nil, descFace = nil, descSize = nil, descColor = nil)
    @nameFace = nameFace
    @nameSize = nameSize
    @nameColor = nameColor
    @titleFace = titleFace
    @titleSize = titleSize
    @titleColor = titleColor
    @descFace = descFace
    @descSize = descSize
    @descColor = descColor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoArrayType
class StoreLogoArrayType < ::Array
  @@schema_type = "StoreLogoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Logo", ["StoreLogoType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Logo")]]]
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoType
class StoreLogoType
  @@schema_type = "StoreLogoType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["logoID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LogoID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :logoID
  attr_accessor :name
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(logoID = nil, name = nil, uRL = nil)
    @logoID = logoID
    @name = name
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorePreferencesType
class StorePreferencesType
  @@schema_type = "StorePreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["vacationPreferences", ["StoreVacationPreferencesType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VacationPreferences")]]]

  attr_accessor :vacationPreferences

  def initialize(vacationPreferences = nil)
    @vacationPreferences = vacationPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionArrayType
class StoreSubscriptionArrayType < ::Array
  @@schema_type = "StoreSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Subscription", ["StoreSubscriptionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Subscription")]]]
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionType
class StoreSubscriptionType
  @@schema_type = "StoreSubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["level", ["StoreSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Level")]],
    ["fee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Fee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :level
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, fee = nil)
    @level = level
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeArrayType
class StoreThemeArrayType
  @@schema_type = "StoreThemeArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["theme", ["StoreThemeType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Theme")]],
    ["genericColorSchemeArray", ["StoreColorSchemeArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GenericColorSchemeArray")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :theme
  attr_accessor :genericColorSchemeArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(theme = [], genericColorSchemeArray = nil)
    @theme = theme
    @genericColorSchemeArray = genericColorSchemeArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeType
class StoreThemeType
  @@schema_type = "StoreThemeType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["themeID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["colorScheme", ["StoreColorSchemeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ColorScheme")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :themeID
  attr_accessor :name
  attr_accessor :colorScheme
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(themeID = nil, name = nil, colorScheme = nil)
    @themeID = themeID
    @name = name
    @colorScheme = colorScheme
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreType
class StoreType
  @@schema_type = "StoreType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["name", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Name")]],
    ["uRLPath", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLPath")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["subscriptionLevel", ["StoreSubscriptionLevelCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SubscriptionLevel")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["logo", ["StoreLogoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Logo")]],
    ["theme", ["StoreThemeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Theme")]],
    ["headerStyle", ["StoreHeaderStyleCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HeaderStyle")]],
    ["homePage", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HomePage")]],
    ["itemListLayout", ["StoreItemListLayoutCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemListLayout")]],
    ["itemListSortOrder", ["StoreItemListSortOrderCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ItemListSortOrder")]],
    ["customHeaderLayout", ["StoreCustomHeaderLayoutCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomHeaderLayout")]],
    ["customHeader", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomHeader")]],
    ["exportListings", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExportListings")]],
    ["customCategories", ["StoreCustomCategoryArrayType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomCategories")]],
    ["customListingHeader", ["StoreCustomListingHeaderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CustomListingHeader")]],
    ["merchDisplay", ["MerchDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MerchDisplay")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :name
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :subscriptionLevel
  attr_accessor :description
  attr_accessor :logo
  attr_accessor :theme
  attr_accessor :headerStyle
  attr_accessor :homePage
  attr_accessor :itemListLayout
  attr_accessor :itemListSortOrder
  attr_accessor :customHeaderLayout
  attr_accessor :customHeader
  attr_accessor :exportListings
  attr_accessor :customCategories
  attr_accessor :customListingHeader
  attr_accessor :merchDisplay
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRLPath = nil, uRL = nil, subscriptionLevel = nil, description = nil, logo = nil, theme = nil, headerStyle = nil, homePage = nil, itemListLayout = nil, itemListSortOrder = nil, customHeaderLayout = nil, customHeader = nil, exportListings = nil, customCategories = nil, customListingHeader = nil, merchDisplay = nil)
    @name = name
    @uRLPath = uRLPath
    @uRL = uRL
    @subscriptionLevel = subscriptionLevel
    @description = description
    @logo = logo
    @theme = theme
    @headerStyle = headerStyle
    @homePage = homePage
    @itemListLayout = itemListLayout
    @itemListSortOrder = itemListSortOrder
    @customHeaderLayout = customHeaderLayout
    @customHeader = customHeader
    @exportListings = exportListings
    @customCategories = customCategories
    @customListingHeader = customListingHeader
    @merchDisplay = merchDisplay
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreVacationPreferencesType
class StoreVacationPreferencesType
  @@schema_type = "StoreVacationPreferencesType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["onVacation", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "OnVacation")]],
    ["returnDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ReturnDate")]],
    ["hideFixedPriceStoreItems", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "HideFixedPriceStoreItems")]],
    ["messageItem", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageItem")]],
    ["messageStore", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStore")]],
    ["displayMessageStoreCustomText", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DisplayMessageStoreCustomText")]],
    ["messageStoreCustomText", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "MessageStoreCustomText")]]]

  attr_accessor :onVacation
  attr_accessor :returnDate
  attr_accessor :hideFixedPriceStoreItems
  attr_accessor :messageItem
  attr_accessor :messageStore
  attr_accessor :displayMessageStoreCustomText
  attr_accessor :messageStoreCustomText

  def initialize(onVacation = nil, returnDate = nil, hideFixedPriceStoreItems = nil, messageItem = nil, messageStore = nil, displayMessageStoreCustomText = nil, messageStoreCustomText = nil)
    @onVacation = onVacation
    @returnDate = returnDate
    @hideFixedPriceStoreItems = hideFixedPriceStoreItems
    @messageItem = messageItem
    @messageStore = messageStore
    @displayMessageStoreCustomText = displayMessageStoreCustomText
    @messageStoreCustomText = messageStoreCustomText
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorefrontType
class StorefrontType
  @@schema_type = "StorefrontType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["storeCategoryID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategoryID")]],
    ["storeCategory2ID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreCategory2ID")]],
    ["storeURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreURL")]],
    ["storeName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StoreName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :storeCategoryID
  attr_accessor :storeCategory2ID
  attr_accessor :storeURL
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeCategoryID = nil, storeCategory2ID = nil, storeURL = nil, storeName = nil)
    @storeCategoryID = storeCategoryID
    @storeCategory2ID = storeCategory2ID
    @storeURL = storeURL
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SubscriptionType
class SubscriptionType
  @@schema_type = "SubscriptionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["siteID", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteID")]],
    ["active", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Active")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :eIASToken
  attr_accessor :siteID
  attr_accessor :active
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eIASToken = nil, siteID = nil, active = nil)
    @eIASToken = eIASToken
    @siteID = siteID
    @active = active
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryArrayType
class SuggestedCategoryArrayType
  @@schema_type = "SuggestedCategoryArrayType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["suggestedCategory", ["SuggestedCategoryType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedCategory")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :suggestedCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(suggestedCategory = [])
    @suggestedCategory = suggestedCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryType
class SuggestedCategoryType
  @@schema_type = "SuggestedCategoryType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["category", ["CategoryType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Category")]],
    ["percentItemFound", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PercentItemFound")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :category
  attr_accessor :percentItemFound
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(category = nil, percentItemFound = nil)
    @category = category
    @percentItemFound = percentItemFound
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxJurisdictionType
class TaxJurisdictionType
  @@schema_type = "TaxJurisdictionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["jurisdictionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "JurisdictionID")]],
    ["salesTaxPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SalesTaxPercent")]],
    ["shippingIncludedInTax", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingIncludedInTax")]],
    ["jurisdictionName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "JurisdictionName")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :jurisdictionID
  attr_accessor :salesTaxPercent
  attr_accessor :shippingIncludedInTax
  attr_accessor :jurisdictionName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(jurisdictionID = nil, salesTaxPercent = nil, shippingIncludedInTax = nil, jurisdictionName = nil)
    @jurisdictionID = jurisdictionID
    @salesTaxPercent = salesTaxPercent
    @shippingIncludedInTax = shippingIncludedInTax
    @jurisdictionName = jurisdictionName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxTableType
class TaxTableType < ::Array
  @@schema_type = "TaxJurisdictionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["TaxJurisdiction", ["TaxJurisdictionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TaxJurisdiction")]]]
end

# {urn:ebay:apis:eBLBaseComponents}ThemeGroupType
class ThemeGroupType
  @@schema_type = "ThemeGroupType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["groupID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupID")]],
    ["groupName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GroupName")]],
    ["themeID", ["SOAP::SOAPInt[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeID")]],
    ["themeTotal", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ThemeTotal")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :groupID
  attr_accessor :groupName
  attr_accessor :themeID
  attr_accessor :themeTotal
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, groupName = nil, themeID = [], themeTotal = nil)
    @groupID = groupID
    @groupName = groupName
    @themeID = themeID
    @themeTotal = themeTotal
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionArrayType
class TransactionArrayType < ::Array
  @@schema_type = "TransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["Transaction", ["TransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Transaction")]]]
end

# {urn:ebay:apis:eBLBaseComponents}TransactionStatusType
class TransactionStatusType
  @@schema_type = "TransactionStatusType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["eBayPaymentStatus", "PaymentStatusCodeType"],
    ["checkoutStatus", ["CheckoutStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CheckoutStatus")]],
    ["lastTimeModified", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "LastTimeModified")]],
    ["paymentMethodUsed", ["BuyerPaymentMethodCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaymentMethodUsed")]],
    ["completeStatus", ["CompleteStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CompleteStatus")]],
    ["buyerSelectedShipping", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerSelectedShipping")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :eBayPaymentStatus
  attr_accessor :checkoutStatus
  attr_accessor :lastTimeModified
  attr_accessor :paymentMethodUsed
  attr_accessor :completeStatus
  attr_accessor :buyerSelectedShipping
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, checkoutStatus = nil, lastTimeModified = nil, paymentMethodUsed = nil, completeStatus = nil, buyerSelectedShipping = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @checkoutStatus = checkoutStatus
    @lastTimeModified = lastTimeModified
    @paymentMethodUsed = paymentMethodUsed
    @completeStatus = completeStatus
    @buyerSelectedShipping = buyerSelectedShipping
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionType
class TransactionType
  @@schema_type = "TransactionType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["amountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AmountPaid")]],
    ["adjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AdjustmentAmount")]],
    ["convertedAdjustmentAmount", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedAdjustmentAmount")]],
    ["buyer", ["UserType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Buyer")]],
    ["shippingDetails", ["ShippingDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingDetails")]],
    ["convertedAmountPaid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedAmountPaid")]],
    ["convertedTransactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ConvertedTransactionPrice")]],
    ["createdDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CreatedDate")]],
    ["depositType", ["DepositTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DepositType")]],
    ["item", ["ItemType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Item")]],
    ["quantityPurchased", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "QuantityPurchased")]],
    ["status", ["TransactionStatusType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["transactionID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionID")]],
    ["transactionPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TransactionPrice")]],
    ["bestOfferSale", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BestOfferSale")]],
    ["vATPercent", ["SOAP::SOAPDecimal", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["externalTransaction", ["ExternalTransactionType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExternalTransaction")]],
    ["sellingManagerProductDetails", ["SellingManagerProductDetailsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellingManagerProductDetails")]],
    ["shippingServiceSelected", ["ShippingServiceOptionsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippingServiceSelected")]],
    ["buyerMessage", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerMessage")]],
    ["dutchAuctionBid", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "DutchAuctionBid")]],
    ["buyerPaidStatus", ["PaidStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerPaidStatus")]],
    ["sellerPaidStatus", ["PaidStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerPaidStatus")]],
    ["paidTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PaidTime")]],
    ["shippedTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ShippedTime")]],
    ["totalPrice", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "TotalPrice")]],
    ["feedbackLeft", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackLeft")]],
    ["feedbackReceived", ["FeedbackInfoType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackReceived")]],
    ["containingOrder", ["OrderType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ContainingOrder")]],
    ["finalValueFee", ["AmountType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FinalValueFee")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :amountPaid
  attr_accessor :adjustmentAmount
  attr_accessor :convertedAdjustmentAmount
  attr_accessor :buyer
  attr_accessor :shippingDetails
  attr_accessor :convertedAmountPaid
  attr_accessor :convertedTransactionPrice
  attr_accessor :createdDate
  attr_accessor :depositType
  attr_accessor :item
  attr_accessor :quantityPurchased
  attr_accessor :status
  attr_accessor :transactionID
  attr_accessor :transactionPrice
  attr_accessor :bestOfferSale
  attr_accessor :vATPercent
  attr_accessor :externalTransaction
  attr_accessor :sellingManagerProductDetails
  attr_accessor :shippingServiceSelected
  attr_accessor :buyerMessage
  attr_accessor :dutchAuctionBid
  attr_accessor :buyerPaidStatus
  attr_accessor :sellerPaidStatus
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_accessor :totalPrice
  attr_accessor :feedbackLeft
  attr_accessor :feedbackReceived
  attr_accessor :containingOrder
  attr_accessor :finalValueFee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPaid = nil, adjustmentAmount = nil, convertedAdjustmentAmount = nil, buyer = nil, shippingDetails = nil, convertedAmountPaid = nil, convertedTransactionPrice = nil, createdDate = nil, depositType = nil, item = nil, quantityPurchased = nil, status = nil, transactionID = nil, transactionPrice = nil, bestOfferSale = nil, vATPercent = nil, externalTransaction = [], sellingManagerProductDetails = nil, shippingServiceSelected = nil, buyerMessage = nil, dutchAuctionBid = nil, buyerPaidStatus = nil, sellerPaidStatus = nil, paidTime = nil, shippedTime = nil, totalPrice = nil, feedbackLeft = nil, feedbackReceived = nil, containingOrder = nil, finalValueFee = nil)
    @amountPaid = amountPaid
    @adjustmentAmount = adjustmentAmount
    @convertedAdjustmentAmount = convertedAdjustmentAmount
    @buyer = buyer
    @shippingDetails = shippingDetails
    @convertedAmountPaid = convertedAmountPaid
    @convertedTransactionPrice = convertedTransactionPrice
    @createdDate = createdDate
    @depositType = depositType
    @item = item
    @quantityPurchased = quantityPurchased
    @status = status
    @transactionID = transactionID
    @transactionPrice = transactionPrice
    @bestOfferSale = bestOfferSale
    @vATPercent = vATPercent
    @externalTransaction = externalTransaction
    @sellingManagerProductDetails = sellingManagerProductDetails
    @shippingServiceSelected = shippingServiceSelected
    @buyerMessage = buyerMessage
    @dutchAuctionBid = dutchAuctionBid
    @buyerPaidStatus = buyerPaidStatus
    @sellerPaidStatus = sellerPaidStatus
    @paidTime = paidTime
    @shippedTime = shippedTime
    @totalPrice = totalPrice
    @feedbackLeft = feedbackLeft
    @feedbackReceived = feedbackReceived
    @containingOrder = containingOrder
    @finalValueFee = finalValueFee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}URLDetailsType
class URLDetailsType
  @@schema_type = "URLDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["uRLType", ["URLTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URLType")]],
    ["uRL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "URL")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :uRLType
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRLType = nil, uRL = nil)
    @uRLType = uRLType
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdFilterType
class UserIdFilterType
  @@schema_type = "UserIdFilterType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["excludeSellers", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ExcludeSellers")]],
    ["includeSellers", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IncludeSellers")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :excludeSellers
  attr_accessor :includeSellers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(excludeSellers = [], includeSellers = [])
    @excludeSellers = excludeSellers
    @includeSellers = includeSellers
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserType
class UserType
  @@schema_type = "UserType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["aboutMePage", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "AboutMePage")]],
    ["eIASToken", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "EIASToken")]],
    ["email", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Email")]],
    ["feedbackScore", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackScore")]],
    ["uniqueNegativeFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniqueNegativeFeedbackCount")]],
    ["uniquePositiveFeedbackCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UniquePositiveFeedbackCount")]],
    ["positiveFeedbackPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PositiveFeedbackPercent")]],
    ["feedbackPrivate", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackPrivate")]],
    ["feedbackRatingStar", ["FeedbackRatingStarCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FeedbackRatingStar")]],
    ["iDVerified", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "IDVerified")]],
    ["eBayGoodStanding", "SOAP::SOAPBoolean"],
    ["newUser", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "NewUser")]],
    ["registrationAddress", ["AddressType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationAddress")]],
    ["registrationDate", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RegistrationDate")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["status", ["UserStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Status")]],
    ["userID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserID")]],
    ["userIDChanged", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIDChanged")]],
    ["userIDLastChanged", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "UserIDLastChanged")]],
    ["vATStatus", ["VATStatusCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATStatus")]],
    ["buyerInfo", ["BuyerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BuyerInfo")]],
    ["sellerInfo", ["SellerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SellerInfo")]],
    ["charityAffiliations", ["CharityAffiliationsType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharityAffiliations")]],
    ["charitySeller", ["CharitySellerType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CharitySeller")]],
    ["siteVerified", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SiteVerified")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :aboutMePage
  attr_accessor :eIASToken
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackPrivate
  attr_accessor :feedbackRatingStar
  attr_accessor :iDVerified
  attr_accessor :eBayGoodStanding
  attr_accessor :newUser
  attr_accessor :registrationAddress
  attr_accessor :registrationDate
  attr_accessor :site
  attr_accessor :status
  attr_accessor :userID
  attr_accessor :userIDChanged
  attr_accessor :userIDLastChanged
  attr_accessor :vATStatus
  attr_accessor :buyerInfo
  attr_accessor :sellerInfo
  attr_accessor :charityAffiliations
  attr_accessor :charitySeller
  attr_accessor :siteVerified
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(aboutMePage = nil, eIASToken = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, positiveFeedbackPercent = nil, feedbackPrivate = nil, feedbackRatingStar = nil, iDVerified = nil, eBayGoodStanding = nil, newUser = nil, registrationAddress = nil, registrationDate = nil, site = nil, status = nil, userID = nil, userIDChanged = nil, userIDLastChanged = nil, vATStatus = nil, buyerInfo = nil, sellerInfo = nil, charityAffiliations = nil, charitySeller = nil, siteVerified = nil)
    @aboutMePage = aboutMePage
    @eIASToken = eIASToken
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackPrivate = feedbackPrivate
    @feedbackRatingStar = feedbackRatingStar
    @iDVerified = iDVerified
    @eBayGoodStanding = eBayGoodStanding
    @newUser = newUser
    @registrationAddress = registrationAddress
    @registrationDate = registrationDate
    @site = site
    @status = status
    @userID = userID
    @userIDChanged = userIDChanged
    @userIDLastChanged = userIDLastChanged
    @vATStatus = vATStatus
    @buyerInfo = buyerInfo
    @sellerInfo = sellerInfo
    @charityAffiliations = charityAffiliations
    @charitySeller = charitySeller
    @siteVerified = siteVerified
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VATDetailsType
class VATDetailsType
  @@schema_type = "VATDetailsType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["businessSeller", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "BusinessSeller")]],
    ["restrictedToBusiness", ["SOAP::SOAPBoolean", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "RestrictedToBusiness")]],
    ["vATPercent", ["SOAP::SOAPFloat", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "VATPercent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :businessSeller
  attr_accessor :restrictedToBusiness
  attr_accessor :vATPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(businessSeller = nil, restrictedToBusiness = nil, vATPercent = nil)
    @businessSeller = businessSeller
    @restrictedToBusiness = restrictedToBusiness
    @vATPercent = vATPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValType
class ValType
  @@schema_type = "ValType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["valueLiteral", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueLiteral")]],
    ["suggestedValueLiteral", ["SOAP::SOAPString[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SuggestedValueLiteral")]],
    ["valueID", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ValueID")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :valueLiteral
  attr_accessor :suggestedValueLiteral
  attr_accessor :valueID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(valueLiteral = nil, suggestedValueLiteral = [], valueID = nil)
    @valueLiteral = valueLiteral
    @suggestedValueLiteral = suggestedValueLiteral
    @valueID = valueID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VendorHostedPictureType
class VendorHostedPictureType
  @@schema_type = "VendorHostedPictureType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["pictureURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PictureURL")]],
    ["selfHostedURL", ["SOAP::SOAPAnyURI[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "SelfHostedURL")]],
    ["photoDisplay", ["PhotoDisplayCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PhotoDisplay")]],
    ["galleryURL", ["SOAP::SOAPAnyURI", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryURL")]],
    ["galleryType", ["GalleryTypeCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "GalleryType")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :pictureURL
  attr_accessor :selfHostedURL
  attr_accessor :photoDisplay
  attr_accessor :galleryURL
  attr_accessor :galleryType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, selfHostedURL = [], photoDisplay = nil, galleryURL = nil, galleryType = nil)
    @pictureURL = pictureURL
    @selfHostedURL = selfHostedURL
    @photoDisplay = photoDisplay
    @galleryURL = galleryURL
    @galleryType = galleryType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostArrayType
class WantItNowPostArrayType < ::Array
  @@schema_type = "WantItNowPostType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [["WantItNowPost", ["WantItNowPostType[]", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "WantItNowPost")]]]
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostType
class WantItNowPostType
  @@schema_type = "WantItNowPostType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["categoryID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "CategoryID")]],
    ["description", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Description")]],
    ["postID", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "PostID")]],
    ["site", ["SiteCodeType", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Site")]],
    ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "StartTime")]],
    ["responseCount", ["SOAP::SOAPInt", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "ResponseCount")]],
    ["title", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "Title")]]]

  attr_accessor :categoryID
  attr_accessor :description
  attr_accessor :postID
  attr_accessor :site
  attr_accessor :startTime
  attr_accessor :responseCount
  attr_accessor :title

  def initialize(categoryID = nil, description = nil, postID = nil, site = nil, startTime = nil, responseCount = nil, title = nil)
    @categoryID = categoryID
    @description = description
    @postID = postID
    @site = site
    @startTime = startTime
    @responseCount = responseCount
    @title = title
  end
end

# {urn:ebay:apis:eBLBaseComponents}XSLFileType
class XSLFileType
  @@schema_type = "XSLFileType"
  @@schema_ns = "urn:ebay:apis:eBLBaseComponents"
  @@schema_element = [
    ["fileName", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileName")]],
    ["fileVersion", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileVersion")]],
    ["fileContent", ["SOAP::SOAPString", XSD::QName.new("urn:ebay:apis:eBLBaseComponents", "FileContent")]],
    ["any", [nil, XSD::QName.new("http://www.w3.org/2001/XMLSchema", "anyType")]]]

  attr_accessor :fileName
  attr_accessor :fileVersion
  attr_accessor :fileContent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(fileName = nil, fileVersion = nil, fileContent = nil)
    @fileName = fileName
    @fileVersion = fileVersion
    @fileContent = fileContent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AckCodeType
module AckCodeType
  CustomCode = "CustomCode"
  Failure = "Failure"
  PartialFailure = "PartialFailure"
  Success = "Success"
  Warning = "Warning"
end

# {urn:ebay:apis:eBLBaseComponents}DetailLevelCodeType
module DetailLevelCodeType
  ItemReturnAttributes = "ItemReturnAttributes"
  ItemReturnDescription = "ItemReturnDescription"
  ReturnAll = "ReturnAll"
  ReturnHeaders = "ReturnHeaders"
  ReturnMessages = "ReturnMessages"
  ReturnSummary = "ReturnSummary"
end

# {urn:ebay:apis:eBLBaseComponents}ErrorClassificationCodeType
module ErrorClassificationCodeType
  CustomCode = "CustomCode"
  RequestError = "RequestError"
  SystemError = "SystemError"
end

# {urn:ebay:apis:eBLBaseComponents}ErrorHandlingCodeType
module ErrorHandlingCodeType
  AllOrNothing = "AllOrNothing"
  BestEffort = "BestEffort"
  FailOnError = "FailOnError"
  Legacy = "Legacy"
end

# {urn:ebay:apis:eBLBaseComponents}InvocationStatusType
module InvocationStatusType
  CustomCode = "CustomCode"
  Failure = "Failure"
  InProgress = "InProgress"
  Success = "Success"
end

# {urn:ebay:apis:eBLBaseComponents}SeverityCodeType
module SeverityCodeType
  CustomCode = "CustomCode"
  Error = "Error"
  Warning = "Warning"
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleCurrentStatusCodeType
module AccessRuleCurrentStatusCodeType
  CustomCode = "CustomCode"
  DailyLimitExceeded = "DailyLimitExceeded"
  DailySoftLimitExceeded = "DailySoftLimitExceeded"
  HourlyLimitExceeded = "HourlyLimitExceeded"
  HourlySoftLimitExceeded = "HourlySoftLimitExceeded"
  NotSet = "NotSet"
  PeriodicLimitExceeded = "PeriodicLimitExceeded"
  PeriodicSoftLimitExceeded = "PeriodicSoftLimitExceeded"
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleStatusCodeType
module AccessRuleStatusCodeType
  ApplicationBlocked = "ApplicationBlocked"
  CustomCode = "CustomCode"
  RuleOff = "RuleOff"
  RuleOn = "RuleOn"
end

# {urn:ebay:apis:eBLBaseComponents}AccountDetailEntryCodeType
module AccountDetailEntryCodeType
  AWCredit = "AWCredit"
  AWDebit = "AWDebit"
  AWMemo = "AWMemo"
  AccountStateSwitch = "AccountStateSwitch"
  AllFeesCredit = "AllFeesCredit"
  AutoPmntReqExempt = "AutoPmntReqExempt"
  AutoPmntReqRein = "AutoPmntReqRein"
  AutoTraderOff = "AutoTraderOff"
  AutoTraderOn = "AutoTraderOn"
  BBAdminCredit = "BBAdminCredit"
  BBAdminDebit = "BBAdminDebit"
  BonusPointsAddition = "BonusPointsAddition"
  BonusPointsCashPayout = "BonusPointsCashPayout"
  BonusPointsPaymentAutomatic = "BonusPointsPaymentAutomatic"
  BonusPointsPaymentManual = "BonusPointsPaymentManual"
  BonusPointsPaymentReversal = "BonusPointsPaymentReversal"
  BonusPointsReduction = "BonusPointsReduction"
  BorderFee = "BorderFee"
  BorderFeeCredit = "BorderFeeCredit"
  BulkUserSuspension = "BulkUserSuspension"
  BuyItNowCredit = "BuyItNowCredit"
  BuyItNowFee = "BuyItNowFee"
  CCNotOnFilePerCustReq = "CCNotOnFilePerCustReq"
  CCPaymentRejected = "CCPaymentRejected"
  ChargeBack = "ChargeBack"
  ChargeBackReversal = "ChargeBackReversal"
  Chargeoff = "Chargeoff"
  ChargeoffBankruptcy = "ChargeoffBankruptcy"
  ChargeoffDeceased = "ChargeoffDeceased"
  ChargeoffOther = "ChargeoffOther"
  ChargeoffRecovery = "ChargeoffRecovery"
  ChargeoffSuspended = "ChargeoffSuspended"
  ChargeoffWacko = "ChargeoffWacko"
  CreditAABasic = "CreditAABasic"
  CreditAAPro = "CreditAAPro"
  CreditBold = "CreditBold"
  CreditCardNotOnFile = "CreditCardNotOnFile"
  CreditCardOnFile = "CreditCardOnFile"
  CreditCategoryFeatured = "CreditCategoryFeatured"
  CreditCourtesy = "CreditCourtesy"
  CreditDuplicateListing = "CreditDuplicateListing"
  CreditEquifaxRealtimeFee = "CreditEquifaxRealtimeFee"
  CreditFeatured = "CreditFeatured"
  CreditFeaturedGallery = "CreditFeaturedGallery"
  CreditFinalValue = "CreditFinalValue"
  CreditFinalValueFixedPrice = "CreditFinalValueFixedPrice"
  CreditGallery = "CreditGallery"
  CreditGiftIcon = "CreditGiftIcon"
  CreditHighlight = "CreditHighlight"
  CreditIPIXPhoto = "CreditIPIXPhoto"
  CreditIPIXSlideShow = "CreditIPIXSlideShow"
  CreditInsertion = "CreditInsertion"
  CreditInsertionFee = "CreditInsertionFee"
  CreditInsertionFixedPrice = "CreditInsertionFixedPrice"
  CreditLargePicture = "CreditLargePicture"
  CreditNoSale = "CreditNoSale"
  CreditPCGS = "CreditPCGS"
  CreditPSA = "CreditPSA"
  CreditPartialSale = "CreditPartialSale"
  CreditPicturePackFull = "CreditPicturePackFull"
  CreditPicturePackPartial = "CreditPicturePackPartial"
  CreditPictureShow = "CreditPictureShow"
  CreditRealEstate30DaysListing = "CreditRealEstate30DaysListing"
  CreditReserve = "CreditReserve"
  CreditSMBasic = "CreditSMBasic"
  CreditSMBasicPro = "CreditSMBasicPro"
  CreditSchedule = "CreditSchedule"
  CreditSearchableMobileDE = "CreditSearchableMobileDE"
  CreditSoftOutage = "CreditSoftOutage"
  CreditTenDayAuction = "CreditTenDayAuction"
  CreditTransferFrom = "CreditTransferFrom"
  CrediteBayStores = "CrediteBayStores"
  CustomCode = "CustomCode"
  DebitTransferTo = "DebitTransferTo"
  DirectDebitNotOnFile = "DirectDebitNotOnFile"
  DirectDebitOnFile = "DirectDebitOnFile"
  DirectDebitReturnedItem = "DirectDebitReturnedItem"
  DirectDebitReversal = "DirectDebitReversal"
  EBayCredit = "eBayCredit"
  EBayDebit = "eBayDebit"
  EBayStoreInventorySubscriptionCredit = "eBayStoreInventorySubscriptionCredit"
  EBayVISACredit = "eBayVISACredit"
  EOMRestriction = "EOMRestriction"
  ElectronicInvoiceOff = "ElectronicInvoiceOff"
  ElectronicInvoiceOn = "ElectronicInvoiceOn"
  EmailMarketingCredit = "EmailMarketingCredit"
  EmailMarketingFee = "EmailMarketingFee"
  EquifaxRealtimeFee = "EquifaxRealtimeFee"
  ExtendedAcutionCredit = "ExtendedAcutionCredit"
  ExtendedAuctionFee = "ExtendedAuctionFee"
  FVFCreditReversal = "FVFCreditReversal"
  FVFCreditReversalAutomatic = "FVFCreditReversalAutomatic"
  FeeBold = "FeeBold"
  FeeCategoryFeatured = "FeeCategoryFeatured"
  FeeFeatured = "FeeFeatured"
  FeeFeaturedGallery = "FeeFeaturedGallery"
  FeeFinalValue = "FeeFinalValue"
  FeeFinalValueFixedPrice = "FeeFinalValueFixedPrice"
  FeeGallery = "FeeGallery"
  FeeGiftIcon = "FeeGiftIcon"
  FeeHighlight = "FeeHighlight"
  FeeIPIXPhoto = "FeeIPIXPhoto"
  FeeIPIXSlideShow = "FeeIPIXSlideShow"
  FeeInsertion = "FeeInsertion"
  FeeInsertionFixedPrice = "FeeInsertionFixedPrice"
  FeeLargePicture = "FeeLargePicture"
  FeeNSFCheck = "FeeNSFCheck"
  FeePartialSale = "FeePartialSale"
  FeePicturePack = "FeePicturePack"
  FeePictureShow = "FeePictureShow"
  FeeRealEstate30DaysListing = "FeeRealEstate30DaysListing"
  FeeRedepositCheck = "FeeRedepositCheck"
  FeeReserve = "FeeReserve"
  FeeReturnCheckClose = "FeeReturnCheckClose"
  FeeReturnedCheck = "FeeReturnedCheck"
  FeeSchedule = "FeeSchedule"
  FeeSearchableMobileDE = "FeeSearchableMobileDE"
  FeeTenDayAuction = "FeeTenDayAuction"
  FinalEntry = "FinalEntry"
  FinanceCharge = "FinanceCharge"
  FinanceChargeReversal = "FinanceChargeReversal"
  FixedPriceDurationCredit = "FixedPriceDurationCredit"
  FixedPriceDurationFee = "FixedPriceDurationFee"
  FlagDDDDPending = "FlagDDDDPending"
  FlagDDPaymentConfirmed = "FlagDDPaymentConfirmed"
  ForeignFundsCheckReversal = "ForeignFundsCheckReversal"
  ForeignFundsConvert = "ForeignFundsConvert"
  InvoiceCreditBalance = "InvoiceCreditBalance"
  Invoiced = "Invoiced"
  InvoicedCreditCard = "InvoicedCreditCard"
  ItemMoveFee = "ItemMoveFee"
  LAAudioVideoFee = "LAAudioVideoFee"
  LAAudioVideoFeeRefund = "LAAudioVideoFeeRefund"
  LABuyerPremiumPercentageFee = "LABuyerPremiumPercentageFee"
  LABuyerPremiumPercentageFeeRefund = "LABuyerPremiumPercentageFeeRefund"
  LACatalogFee = "LACatalogFee"
  LACatalogInsertionRefund = "LACatalogInsertionRefund"
  LACatalogItemFeeRefund = "LACatalogItemFeeRefund"
  LAExtraItem = "LAExtraItem"
  LAFinalValueFee = "LAFinalValueFee"
  LAFinalValueFeeRefund = "LAFinalValueFeeRefund"
  ListingDesignerCredit = "ListingDesignerCredit"
  ListingDesignerFee = "ListingDesignerFee"
  Memo = "Memo"
  Merged = "Merged"
  OutageCredit = "OutageCredit"
  PaperInvoiceOff = "PaperInvoiceOff"
  PaperInvoiceOn = "PaperInvoiceOn"
  PayPalChargeBack = "PayPalChargeBack"
  PayPalFailed = "PayPalFailed"
  PayPalOTPPend = "PayPalOTPPend"
  PayPalOTPSucc = "PayPalOTPSucc"
  PayPalRefund = "PayPalRefund"
  PaymentAdjustmentCredit = "PaymentAdjustmentCredit"
  PaymentAdjustmentDebit = "PaymentAdjustmentDebit"
  PaymentCC = "PaymentCC"
  PaymentCCOnce = "PaymentCCOnce"
  PaymentCash = "PaymentCash"
  PaymentCheck = "PaymentCheck"
  PaymentDirectDebit = "PaymentDirectDebit"
  PaymentElectronicTransfer = "PaymentElectronicTransfer"
  PaymentElectronicTransferReversal = "PaymentElectronicTransferReversal"
  PaymentEquifaxCredit = "PaymentEquifaxCredit"
  PaymentEquifaxDebit = "PaymentEquifaxDebit"
  PaymentGiftCertificate = "PaymentGiftCertificate"
  PaymentHomeBanking = "PaymentHomeBanking"
  PaymentMoneyOrder = "PaymentMoneyOrder"
  PaymentWireTransfer = "PaymentWireTransfer"
  PaypalOffFile = "PaypalOffFile"
  PaypalOnFile = "PaypalOnFile"
  PaypalOnFileByCSR = "PaypalOnFileByCSR"
  PictureManagerSubscriptionFee = "PictureManagerSubscriptionFee"
  PictureManagerSubscriptionFeeCredit = "PictureManagerSubscriptionFeeCredit"
  ProPackBundleFee = "ProPackBundleFee"
  ProPackBundleFeeCredit = "ProPackBundleFeeCredit"
  PromotionalCredit = "PromotionalCredit"
  ReferrerCredit = "ReferrerCredit"
  ReferrerDebit = "ReferrerDebit"
  RefundCC = "RefundCC"
  RefundCheck = "RefundCheck"
  RevertUserState = "RevertUserState"
  SMProListingDesignerCredit = "SMProListingDesignerCredit"
  SMProListingDesignerFee = "SMProListingDesignerFee"
  SalesReportsPlusCredit = "SalesReportsPlusCredit"
  SalesReportsPlusFee = "SalesReportsPlusFee"
  SellerReportsBasicCredit = "SellerReportsBasicCredit"
  SellerReportsBasicFee = "SellerReportsBasicFee"
  SellerReportsPlusCredit = "SellerReportsPlusCredit"
  SellerReportsPlusFee = "SellerReportsPlusFee"
  SetOnHold = "SetOnHold"
  StoresGTCCredit = "StoresGTCCredit"
  StoresGTCFee = "StoresGTCFee"
  StoresReferralCredit = "StoresReferralCredit"
  StoresReferralFee = "StoresReferralFee"
  StoresSuccessfulListingFee = "StoresSuccessfulListingFee"
  StoresSuccessfulListingFeeCredit = "StoresSuccessfulListingFeeCredit"
  SubscriptionAABasic = "SubscriptionAABasic"
  SubscriptionAAPro = "SubscriptionAAPro"
  SubscriptionSMBasic = "SubscriptionSMBasic"
  SubscriptionSMBasicPro = "SubscriptionSMBasicPro"
  SubscriptioneBayStores = "SubscriptioneBayStores"
  SubtitleFee = "SubtitleFee"
  SubtitleFeeCredit = "SubtitleFeeCredit"
  SwitchCurrency = "SwitchCurrency"
  TemporaryCredit = "TemporaryCredit"
  TemporaryCreditReversal = "TemporaryCreditReversal"
  TradingLimitOverrideOff = "TradingLimitOverrideOff"
  TradingLimitOverrideOn = "TradingLimitOverrideOn"
  Unknown = "Unknown"
  VATCredit = "VATCredit"
  VATDebit = "VATDebit"
  VATStatusChangeApproved = "VATStatusChangeApproved"
  VATStatusChangePending = "VATStatusChangePending"
  VATStatusChange_Denied = "VATStatusChange_Denied"
  VATStatusDeletedByCSR = "VATStatusDeletedByCSR"
  VATStatusDeletedByUser = "VATStatusDeletedByUser"
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntrySortTypeCodeType
module AccountEntrySortTypeCodeType
  AccountEntryCreatedTimeAscending = "AccountEntryCreatedTimeAscending"
  AccountEntryCreatedTimeDescending = "AccountEntryCreatedTimeDescending"
  AccountEntryFeeTypeAscending = "AccountEntryFeeTypeAscending"
  AccountEntryFeeTypeDescending = "AccountEntryFeeTypeDescending"
  AccountEntryItemNumberAscending = "AccountEntryItemNumberAscending"
  AccountEntryItemNumberDescending = "AccountEntryItemNumberDescending"
  CustomCode = "CustomCode"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}AccountHistorySelectionCodeType
module AccountHistorySelectionCodeType
  BetweenSpecifiedDates = "BetweenSpecifiedDates"
  CustomCode = "CustomCode"
  LastInvoice = "LastInvoice"
  SpecifiedInvoice = "SpecifiedInvoice"
end

# {urn:ebay:apis:eBLBaseComponents}AccountStateCodeType
module AccountStateCodeType
  Active = "Active"
  CustomCode = "CustomCode"
  Inactive = "Inactive"
  Pending = "Pending"
end

# {urn:ebay:apis:eBLBaseComponents}AddressOwnerCodeType
module AddressOwnerCodeType
  CustomCode = "CustomCode"
  EBay = "eBay"
  PayPal = "PayPal"
end

# {urn:ebay:apis:eBLBaseComponents}AddressRecordTypeCodeType
module AddressRecordTypeCodeType
  Business = "Business"
  CustomCode = "CustomCode"
  Residential = "Residential"
end

# {urn:ebay:apis:eBLBaseComponents}AddressStatusCodeType
module AddressStatusCodeType
  Confirmed = "Confirmed"
  CustomCode = "CustomCode"
  None = "None"
  Unconfirmed = "Unconfirmed"
end

# {urn:ebay:apis:eBLBaseComponents}AuctionTypeCodeType
module AuctionTypeCodeType
  AdType = "Ad type"
  Chinese = "Chinese"
  CustomCode = "CustomCode"
  Dutch = "Dutch"
  FixedPriceItem = "Fixed Price Item"
  Live = "Live"
  PersonalOffer = "Personal Offer"
  StoresFixedPrice = "Stores Fixed-price"
  Unknown = "Unknown"
end

# {urn:ebay:apis:eBLBaseComponents}BalanceCodeType
module BalanceCodeType
  CustomCode = "CustomCode"
  Other = "Other"
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferActionCodeType
module BestOfferActionCodeType
  Accept = "Accept"
  CustomCode = "CustomCode"
  Decline = "Decline"
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferStatusCodeType
module BestOfferStatusCodeType
  Accepted = "Accepted"
  Active = "Active"
  AdminEnded = "AdminEnded"
  All = "All"
  CustomCode = "CustomCode"
  Declined = "Declined"
  Expired = "Expired"
  Pending = "Pending"
  Retracted = "Retracted"
end

# {urn:ebay:apis:eBLBaseComponents}BidActionCodeType
module BidActionCodeType
  Absentee = "Absentee"
  AutoCancel = "AutoCancel"
  AutoRetraction = "AutoRetraction"
  Bid = "Bid"
  BuyItNow = "BuyItNow"
  Cancelled = "Cancelled"
  CustomCode = "CustomCode"
  NotUsed = "NotUsed"
  Purchase = "Purchase"
  Retraction = "Retraction"
  Unknown = "Unknown"
end

# {urn:ebay:apis:eBLBaseComponents}BidderTypeCodeType
module BidderTypeCodeType
  AllBidder = "AllBidder"
  CustomCode = "CustomCode"
  HighBidder = "HighBidder"
end

# {urn:ebay:apis:eBLBaseComponents}BulkCatalogListerStatusCodeType
module BulkCatalogListerStatusCodeType
  Active = "Active"
  CustomCode = "CustomCode"
  OnHold = "OnHold"
  OnWatch = "OnWatch"
  Preapproved = "Preapproved"
  Suspended = "Suspended"
  WatchWarn = "WatchWarn"
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPaymentMethodCodeType
module BuyerPaymentMethodCodeType
  AmEx = "AmEx"
  CCAccepted = "CCAccepted"
  COD = "COD"
  CODPrePayDelivery = "CODPrePayDelivery"
  CashInPerson = "CashInPerson"
  CashOnPickup = "CashOnPickup"
  CustomCode = "CustomCode"
  Discover = "Discover"
  Escrow = "Escrow"
  LoanCheck = "LoanCheck"
  MOCC = "MOCC"
  MoneyXferAccepted = "MoneyXferAccepted"
  MoneyXferAcceptedInCheckout = "MoneyXferAcceptedInCheckout"
  None = "None"
  Other = "Other"
  OtherOnlinePayments = "OtherOnlinePayments"
  PaisaPayAccepted = "PaisaPayAccepted"
  PayPal = "PayPal"
  PaymentSeeDescription = "PaymentSeeDescription"
  PersonalCheck = "PersonalCheck"
  PostalTransfer = "PostalTransfer"
  PrePayDelivery = "PrePayDelivery"
  VisaMC = "VisaMC"
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionCodeType
module BuyerProtectionCodeType
  CustomCode = "CustomCode"
  ItemEligible = "ItemEligible"
  ItemIneligible = "ItemIneligible"
  ItemMarkedEligible = "ItemMarkedEligible"
  ItemMarkedIneligible = "ItemMarkedIneligible"
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingChargeOptionCodeType
module CalculatedShippingChargeOptionCodeType
  ChargeEachItem = "ChargeEachItem"
  ChargeEntireOrder = "ChargeEntireOrder"
  CustomCode = "CustomCode"
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateOptionCodeType
module CalculatedShippingRateOptionCodeType
  CombinedItemWeight = "CombinedItemWeight"
  CustomCode = "CustomCode"
  IndividualItemWeight = "IndividualItemWeight"
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureDetailLevelCodeType
module CategoryFeatureDetailLevelCodeType
  CustomCode = "CustomCode"
  ReturnAll = "ReturnAll"
  ReturnFeatureDefinitions = "ReturnFeatureDefinitions"
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsOrderCodeType
module CategoryListingsOrderCodeType
  CustomCode = "CustomCode"
  DistanceSort = "DistanceSort"
  ItemsBy24Hr = "ItemsBy24Hr"
  ItemsEndIn5Hr = "ItemsEndIn5Hr"
  ItemsEndToday = "ItemsEndToday"
  NoFilter = "NoFilter"
  SortByPriceAsc = "SortByPriceAsc"
  SortByPriceDesc = "SortByPriceDesc"
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsSearchCodeType
module CategoryListingsSearchCodeType
  CustomCode = "CustomCode"
  Featured = "Featured"
  SuperFeatured = "SuperFeatured"
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSearchCodeType
module CharacteristicsSearchCodeType
  CustomCode = "CustomCode"
  Multi = "Multi"
  Single = "Single"
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationTypeCodeType
module CharityAffiliationTypeCodeType
  Community = "Community"
  CustomCode = "CustomCode"
  Direct = "Direct"
  Remove = "Remove"
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerStatusCodeType
module CharitySellerStatusCodeType
  Closed = "Closed"
  CreditCardAboutToExpire = "CreditCardAboutToExpire"
  CreditCardExpired = "CreditCardExpired"
  CustomCode = "CustomCode"
  DirectDebitRejected = "DirectDebitRejected"
  NotRegisteredLostDirectSellerStatus = "NotRegisteredLostDirectSellerStatus"
  Registered = "Registered"
  RegisteredNoCreditCard = "RegisteredNoCreditCard"
  Suspended = "Suspended"
  TokenExpired = "TokenExpired"
end

# {urn:ebay:apis:eBLBaseComponents}CharityStatusCodeType
module CharityStatusCodeType
  CustomCode = "CustomCode"
  NoLongerValid = "NoLongerValid"
  Valid = "Valid"
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutMethodCodeType
module CheckoutMethodCodeType
  CustomCode = "CustomCode"
  LogosIneBayListing = "LogosIneBayListing"
  Other = "Other"
  ThirdPartyCheckout = "ThirdPartyCheckout"
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusCodeType
module CheckoutStatusCodeType
  BuyerRequestsTotal = "BuyerRequestsTotal"
  CheckoutComplete = "CheckoutComplete"
  CheckoutIncomplete = "CheckoutIncomplete"
  CustomCode = "CustomCode"
  SellerResponded = "SellerResponded"
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentOptionCodeType
module CombinedPaymentOptionCodeType
  CustomCode = "CustomCode"
  DiscountSpecified = "DiscountSpecified"
  NoCombinedPayment = "NoCombinedPayment"
  SpecifyDiscountLater = "SpecifyDiscountLater"
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPeriodCodeType
module CombinedPaymentPeriodCodeType
  CustomCode = "CustomCode"
  Days_14 = "Days_14"
  Days_3 = "Days_3"
  Days_30 = "Days_30"
  Days_5 = "Days_5"
  Days_7 = "Days_7"
end

# {urn:ebay:apis:eBLBaseComponents}CommentTypeCodeType
module CommentTypeCodeType
  CustomCode = "CustomCode"
  Negative = "Negative"
  Neutral = "Neutral"
  Positive = "Positive"
  Withdrawn = "Withdrawn"
end

# {urn:ebay:apis:eBLBaseComponents}CompleteStatusCodeType
module CompleteStatusCodeType
  Complete = "Complete"
  CustomCode = "CustomCode"
  Incomplete = "Incomplete"
end

# {urn:ebay:apis:eBLBaseComponents}CountryCodeType
module CountryCodeType
  AA = "AA"
  AD = "AD"
  AE = "AE"
  AF = "AF"
  AG = "AG"
  AI = "AI"
  AL = "AL"
  AM = "AM"
  AN = "AN"
  AO = "AO"
  AQ = "AQ"
  AR = "AR"
  AS = "AS"
  AT = "AT"
  AU = "AU"
  AW = "AW"
  AZ = "AZ"
  BA = "BA"
  BB = "BB"
  BD = "BD"
  BE = "BE"
  BF = "BF"
  BG = "BG"
  BH = "BH"
  BI = "BI"
  BJ = "BJ"
  BM = "BM"
  BN = "BN"
  BO = "BO"
  BR = "BR"
  BS = "BS"
  BT = "BT"
  BV = "BV"
  BW = "BW"
  BY = "BY"
  BZ = "BZ"
  CA = "CA"
  CC = "CC"
  CD = "CD"
  CF = "CF"
  CG = "CG"
  CH = "CH"
  CI = "CI"
  CK = "CK"
  CL = "CL"
  CM = "CM"
  CN = "CN"
  CO = "CO"
  CR = "CR"
  CU = "CU"
  CV = "CV"
  CX = "CX"
  CY = "CY"
  CZ = "CZ"
  CustomCode = "CustomCode"
  DE = "DE"
  DJ = "DJ"
  DK = "DK"
  DM = "DM"
  DO = "DO"
  DZ = "DZ"
  EC = "EC"
  EE = "EE"
  EG = "EG"
  EH = "EH"
  ER = "ER"
  ES = "ES"
  ET = "ET"
  FI = "FI"
  FJ = "FJ"
  FK = "FK"
  FM = "FM"
  FO = "FO"
  FR = "FR"
  GA = "GA"
  GB = "GB"
  GD = "GD"
  GE = "GE"
  GF = "GF"
  GH = "GH"
  GI = "GI"
  GL = "GL"
  GM = "GM"
  GN = "GN"
  GP = "GP"
  GQ = "GQ"
  GR = "GR"
  GS = "GS"
  GT = "GT"
  GU = "GU"
  GW = "GW"
  GY = "GY"
  HK = "HK"
  HM = "HM"
  HN = "HN"
  HR = "HR"
  HT = "HT"
  HU = "HU"
  ID = "ID"
  IE = "IE"
  IL = "IL"
  IN = "IN"
  IO = "IO"
  IQ = "IQ"
  IR = "IR"
  IS = "IS"
  IT = "IT"
  JM = "JM"
  JO = "JO"
  JP = "JP"
  KE = "KE"
  KG = "KG"
  KH = "KH"
  KI = "KI"
  KM = "KM"
  KN = "KN"
  KP = "KP"
  KR = "KR"
  KW = "KW"
  KY = "KY"
  KZ = "KZ"
  LA = "LA"
  LB = "LB"
  LC = "LC"
  LI = "LI"
  LK = "LK"
  LR = "LR"
  LS = "LS"
  LT = "LT"
  LU = "LU"
  LV = "LV"
  LY = "LY"
  MA = "MA"
  MC = "MC"
  MD = "MD"
  MG = "MG"
  MH = "MH"
  MK = "MK"
  ML = "ML"
  MM = "MM"
  MN = "MN"
  MO = "MO"
  MP = "MP"
  MQ = "MQ"
  MR = "MR"
  MS = "MS"
  MT = "MT"
  MU = "MU"
  MV = "MV"
  MW = "MW"
  MX = "MX"
  MY = "MY"
  MZ = "MZ"
  NA = "NA"
  NC = "NC"
  NE = "NE"
  NF = "NF"
  NG = "NG"
  NI = "NI"
  NL = "NL"
  NO = "NO"
  NP = "NP"
  NR = "NR"
  NU = "NU"
  NZ = "NZ"
  OM = "OM"
  PA = "PA"
  PE = "PE"
  PF = "PF"
  PG = "PG"
  PH = "PH"
  PK = "PK"
  PL = "PL"
  PM = "PM"
  PN = "PN"
  PR = "PR"
  PS = "PS"
  PT = "PT"
  PW = "PW"
  PY = "PY"
  QA = "QA"
  QM = "QM"
  QN = "QN"
  QO = "QO"
  QP = "QP"
  RE = "RE"
  RO = "RO"
  RU = "RU"
  RW = "RW"
  SA = "SA"
  SB = "SB"
  SC = "SC"
  SD = "SD"
  SE = "SE"
  SG = "SG"
  SH = "SH"
  SI = "SI"
  SJ = "SJ"
  SK = "SK"
  SL = "SL"
  SM = "SM"
  SN = "SN"
  SO = "SO"
  SR = "SR"
  ST = "ST"
  SV = "SV"
  SY = "SY"
  SZ = "SZ"
  TC = "TC"
  TD = "TD"
  TF = "TF"
  TG = "TG"
  TH = "TH"
  TJ = "TJ"
  TK = "TK"
  TM = "TM"
  TN = "TN"
  TO = "TO"
  TP = "TP"
  TR = "TR"
  TT = "TT"
  TV = "TV"
  TW = "TW"
  TZ = "TZ"
  UA = "UA"
  UG = "UG"
  UM = "UM"
  US = "US"
  UY = "UY"
  UZ = "UZ"
  VA = "VA"
  VC = "VC"
  VE = "VE"
  VG = "VG"
  VI = "VI"
  VN = "VN"
  VU = "VU"
  WF = "WF"
  WS = "WS"
  YE = "YE"
  YT = "YT"
  YU = "YU"
  ZA = "ZA"
  ZM = "ZM"
  ZW = "ZW"
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyCodeType
module CurrencyCodeType
  ADP = "ADP"
  AED = "AED"
  AFA = "AFA"
  ALL = "ALL"
  AMD = "AMD"
  ANG = "ANG"
  AOA = "AOA"
  ARS = "ARS"
  AUD = "AUD"
  AWG = "AWG"
  AZM = "AZM"
  BAM = "BAM"
  BBD = "BBD"
  BDT = "BDT"
  BGL = "BGL"
  BGN = "BGN"
  BHD = "BHD"
  BIF = "BIF"
  BMD = "BMD"
  BND = "BND"
  BOB = "BOB"
  BOV = "BOV"
  BRL = "BRL"
  BSD = "BSD"
  BTN = "BTN"
  BWP = "BWP"
  BYR = "BYR"
  BZD = "BZD"
  CAD = "CAD"
  CDF = "CDF"
  CHF = "CHF"
  CLF = "CLF"
  CLP = "CLP"
  CNY = "CNY"
  COP = "COP"
  CRC = "CRC"
  CUP = "CUP"
  CVE = "CVE"
  CYP = "CYP"
  CZK = "CZK"
  CustomCode = "CustomCode"
  DJF = "DJF"
  DKK = "DKK"
  DOP = "DOP"
  DZD = "DZD"
  ECS = "ECS"
  ECV = "ECV"
  EEK = "EEK"
  EGP = "EGP"
  ERN = "ERN"
  ETB = "ETB"
  EUR = "EUR"
  FJD = "FJD"
  FKP = "FKP"
  GBP = "GBP"
  GEL = "GEL"
  GHC = "GHC"
  GIP = "GIP"
  GMD = "GMD"
  GNF = "GNF"
  GTQ = "GTQ"
  GWP = "GWP"
  GYD = "GYD"
  HKD = "HKD"
  HNL = "HNL"
  HRK = "HRK"
  HTG = "HTG"
  HUF = "HUF"
  IDR = "IDR"
  ILS = "ILS"
  INR = "INR"
  IQD = "IQD"
  IRR = "IRR"
  ISK = "ISK"
  JMD = "JMD"
  JOD = "JOD"
  JPY = "JPY"
  KES = "KES"
  KGS = "KGS"
  KHR = "KHR"
  KMF = "KMF"
  KPW = "KPW"
  KRW = "KRW"
  KWD = "KWD"
  KYD = "KYD"
  KZT = "KZT"
  LAK = "LAK"
  LBP = "LBP"
  LKR = "LKR"
  LRD = "LRD"
  LSL = "LSL"
  LTL = "LTL"
  LVL = "LVL"
  LYD = "LYD"
  MAD = "MAD"
  MDL = "MDL"
  MGF = "MGF"
  MKD = "MKD"
  MMK = "MMK"
  MNT = "MNT"
  MOP = "MOP"
  MRO = "MRO"
  MTL = "MTL"
  MUR = "MUR"
  MVR = "MVR"
  MWK = "MWK"
  MXN = "MXN"
  MXV = "MXV"
  MYR = "MYR"
  MZM = "MZM"
  NAD = "NAD"
  NGN = "NGN"
  NIO = "NIO"
  NOK = "NOK"
  NPR = "NPR"
  NZD = "NZD"
  OMR = "OMR"
  PAB = "PAB"
  PEN = "PEN"
  PGK = "PGK"
  PHP = "PHP"
  PKR = "PKR"
  PLN = "PLN"
  PYG = "PYG"
  QAR = "QAR"
  ROL = "ROL"
  RUB = "RUB"
  RUR = "RUR"
  RWF = "RWF"
  SAR = "SAR"
  SBD = "SBD"
  SCR = "SCR"
  SDD = "SDD"
  SEK = "SEK"
  SGD = "SGD"
  SHP = "SHP"
  SIT = "SIT"
  SKK = "SKK"
  SLL = "SLL"
  SOS = "SOS"
  SRG = "SRG"
  STD = "STD"
  SVC = "SVC"
  SYP = "SYP"
  SZL = "SZL"
  THB = "THB"
  TJS = "TJS"
  TMM = "TMM"
  TND = "TND"
  TOP = "TOP"
  TPE = "TPE"
  TRL = "TRL"
  TTD = "TTD"
  TWD = "TWD"
  TZS = "TZS"
  UAH = "UAH"
  UGX = "UGX"
  USD = "USD"
  USN = "USN"
  USS = "USS"
  UYU = "UYU"
  UZS = "UZS"
  VEB = "VEB"
  VND = "VND"
  VUV = "VUV"
  WST = "WST"
  XAF = "XAF"
  XCD = "XCD"
  XOF = "XOF"
  XPF = "XPF"
  YER = "YER"
  YUM = "YUM"
  ZAR = "ZAR"
  ZMK = "ZMK"
  ZWD = "ZWD"
end

# {urn:ebay:apis:eBLBaseComponents}DateSpecifierCodeType
module DateSpecifierCodeType
  CustomCode = "CustomCode"
  D = "D"
  M = "M"
  Y = "Y"
end

# {urn:ebay:apis:eBLBaseComponents}DepositTypeCodeType
module DepositTypeCodeType
  CustomCode = "CustomCode"
  FastDeposit = "FastDeposit"
  None = "None"
  OtherMethod = "OtherMethod"
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateCodeType
module DescriptionTemplateCodeType
  CustomCode = "CustomCode"
  Layout = "Layout"
  Theme = "Theme"
end

# {urn:ebay:apis:eBLBaseComponents}DetailNameCodeType
module DetailNameCodeType
  CountryDetails = "CountryDetails"
  CurrencyDetails = "CurrencyDetails"
  CustomCode = "CustomCode"
  PaymentOptionDetails = "PaymentOptionDetails"
  RegionDetails = "RegionDetails"
  ShippingLocationDetails = "ShippingLocationDetails"
  ShippingServiceDetails = "ShippingServiceDetails"
  SiteDetails = "SiteDetails"
  TaxJurisdiction = "TaxJurisdiction"
  URLDetails = "URLDetails"
end

# {urn:ebay:apis:eBLBaseComponents}DisplayPayNowButtonCodeType
module DisplayPayNowButtonCodeType
  CustomCode = "CustomCode"
  ShowPayNowButtonForAllPaymentMethods = "ShowPayNowButtonForAllPaymentMethods"
  ShowPayNowButtonForPayPalOnly = "ShowPayNowButtonForPayPalOnly"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeActivityCodeType
module DisputeActivityCodeType
  CameToAgreementNeedFVFCredit = "CameToAgreementNeedFVFCredit"
  CustomCode = "CustomCode"
  MutualAgreementOrNoBuyerResponse = "MutualAgreementOrNoBuyerResponse"
  SellerAddInformation = "SellerAddInformation"
  SellerComment = "SellerComment"
  SellerCompletedTransaction = "SellerCompletedTransaction"
  SellerEndCommunication = "SellerEndCommunication"
  SellerOffersRefund = "SellerOffersRefund"
  SellerPaymentNotReceived = "SellerPaymentNotReceived"
  SellerShippedItem = "SellerShippedItem"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeCreditEligibilityCodeType
module DisputeCreditEligibilityCodeType
  CustomCode = "CustomCode"
  Eligible = "Eligible"
  InEligible = "InEligible"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeExplanationCodeType
module DisputeExplanationCodeType
  BuyerHasNotResponded = "BuyerHasNotResponded"
  BuyerNoLongerRegistered = "BuyerNoLongerRegistered"
  BuyerPurchasingMistake = "BuyerPurchasingMistake"
  BuyerRefusedToPay = "BuyerRefusedToPay"
  BuyerReturnedItemForRefund = "BuyerReturnedItemForRefund"
  CustomCode = "CustomCode"
  OtherExplanation = "OtherExplanation"
  PaymentMethodNotSupported = "PaymentMethodNotSupported"
  ShipCountryNotSupported = "ShipCountryNotSupported"
  ShippingAddressNotConfirmed = "ShippingAddressNotConfirmed"
  UnableToResolveTerms = "UnableToResolveTerms"
  Unspecified = "Unspecified"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterTypeCodeType
module DisputeFilterTypeCodeType
  AllInvolvedClosedDisputes = "AllInvolvedClosedDisputes"
  AllInvolvedDisputes = "AllInvolvedDisputes"
  CustomCode = "CustomCode"
  DisputesAwaitingMyResponse = "DisputesAwaitingMyResponse"
  DisputesAwaitingOtherPartyResponse = "DisputesAwaitingOtherPartyResponse"
  EligibleForCredit = "EligibleForCredit"
  ItemNotReceivedDisputes = "ItemNotReceivedDisputes"
  UnpaidItemDisputes = "UnpaidItemDisputes"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageSourceCodeType
module DisputeMessageSourceCodeType
  Buyer = "Buyer"
  CustomCode = "CustomCode"
  EBay = "eBay"
  Seller = "Seller"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeReasonCodeType
module DisputeReasonCodeType
  BuyerHasNotPaid = "BuyerHasNotPaid"
  CustomCode = "CustomCode"
  ItemNotReceived = "ItemNotReceived"
  SignificantlyNotAsDescribed = "SignificantlyNotAsDescribed"
  TransactionMutuallyCanceled = "TransactionMutuallyCanceled"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeRecordTypeCodeType
module DisputeRecordTypeCodeType
  CustomCode = "CustomCode"
  ItemNotReceived = "ItemNotReceived"
  UnpaidItem = "UnpaidItem"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionReasonCodeType
module DisputeResolutionReasonCodeType
  BuyerPaidAuctionFees = "BuyerPaidAuctionFees"
  CameToAgreement = "CameToAgreement"
  ComputerTechnicalProblem = "ComputerTechnicalProblem"
  CustomCode = "CustomCode"
  FamilyEmergency = "FamilyEmergency"
  FirstInfraction = "FirstInfraction"
  ItemReturned = "ItemReturned"
  NoContact = "NoContact"
  OtherResolution = "OtherResolution"
  ProofGivenInFeedback = "ProofGivenInFeedback"
  ProofOfPayment = "ProofOfPayment"
  SellerReceivedPayment = "SellerReceivedPayment"
  Unresolved = "Unresolved"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionRecordTypeCodeType
module DisputeResolutionRecordTypeCodeType
  AppealBuyerStrike = "AppealBuyerStrike"
  CustomCode = "CustomCode"
  FVFCredit = "FVFCredit"
  FVFCreditNotGranted = "FVFCreditNotGranted"
  GenerateCSTicketForSuspend = "GenerateCSTicketForSuspend"
  InsertionFeeCredit = "InsertionFeeCredit"
  ReverseFVFCredit = "ReverseFVFCredit"
  ReverseInsertionFeeCredit = "ReverseInsertionFeeCredit"
  StrikeBuyer = "StrikeBuyer"
  SuspendBuyer = "SuspendBuyer"
  UnsuspendBuyer = "UnsuspendBuyer"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeSortTypeCodeType
module DisputeSortTypeCodeType
  CustomCode = "CustomCode"
  DisputeCreatedTimeAscending = "DisputeCreatedTimeAscending"
  DisputeCreatedTimeDescending = "DisputeCreatedTimeDescending"
  DisputeCreditEligibilityAscending = "DisputeCreditEligibilityAscending"
  DisputeCreditEligibilityDescending = "DisputeCreditEligibilityDescending"
  DisputeStatusAscending = "DisputeStatusAscending"
  DisputeStatusDescending = "DisputeStatusDescending"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStateCodeType
module DisputeStateCodeType
  BuyerFirstResponseNoPayOption = "BuyerFirstResponseNoPayOption"
  BuyerFirstResponseNoPayOptionLateResponse = "BuyerFirstResponseNoPayOptionLateResponse"
  BuyerFirstResponsePayOption = "BuyerFirstResponsePayOption"
  BuyerFirstResponsePayOptionLateResponse = "BuyerFirstResponsePayOptionLateResponse"
  Closed = "Closed"
  CustomCode = "CustomCode"
  Locked = "Locked"
  MutualAgreementOrBuyerReturningItem = "MutualAgreementOrBuyerReturningItem"
  MutualCommunicationNoPayOption = "MutualCommunicationNoPayOption"
  MutualCommunicationPayOption = "MutualCommunicationPayOption"
  MutualWithdrawalAgreement = "MutualWithdrawalAgreement"
  MutualWithdrawalAgreementLate = "MutualWithdrawalAgreementLate"
  NotAsDescribedMutualCommunication = "NotAsDescribedMutualCommunication"
  NotAsDescribedNoSellerResponse = "NotAsDescribedNoSellerResponse"
  NotReceivedMutualCommunication = "NotReceivedMutualCommunication"
  NotReceivedNoSellerResponse = "NotReceivedNoSellerResponse"
  PendingResolve = "PendingResolve"
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStatusCodeType
module DisputeStatusCodeType
  Closed = "Closed"
  ClosedFVFCreditNoStrike = "ClosedFVFCreditNoStrike"
  ClosedFVFCreditStrike = "ClosedFVFCreditStrike"
  ClosedNoFVFCreditNoStrike = "ClosedNoFVFCreditNoStrike"
  ClosedNoFVFCreditStrike = "ClosedNoFVFCreditStrike"
  CustomCode = "CustomCode"
  FVFCreditReversedAfterClosing = "FVFCreditReversedAfterClosing"
  StrikeAppealedAfterClosing = "StrikeAppealedAfterClosing"
  StrikeAppealedAndFVFCreditReversed = "StrikeAppealedAndFVFCreditReversed"
  WaitingForBuyerResponse = "WaitingForBuyerResponse"
  WaitingForSellerResponse = "WaitingForSellerResponse"
end

# {urn:ebay:apis:eBLBaseComponents}EnableCodeType
module EnableCodeType
  CustomCode = "CustomCode"
  Disable = "Disable"
  Enable = "Enable"
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionLogoTypeCodeType
module EndOfAuctionLogoTypeCodeType
  CustomCode = "CustomCode"
  Customized = "Customized"
  None = "None"
  Store = "Store"
  WinningBidderNotice = "WinningBidderNotice"
end

# {urn:ebay:apis:eBLBaseComponents}EndReasonCodeType
module EndReasonCodeType
  CustomCode = "CustomCode"
  Incorrect = "Incorrect"
  LostOrBroken = "LostOrBroken"
  NotAvailable = "NotAvailable"
  OtherListingError = "OtherListingError"
end

# {urn:ebay:apis:eBLBaseComponents}EscrowCodeType
module EscrowCodeType
  ByBuyer = "ByBuyer"
  BySeller = "BySeller"
  CustomCode = "CustomCode"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductCodeType
module ExternalProductCodeType
  CustomCode = "CustomCode"
  EAN = "EAN"
  ISBN = "ISBN"
  ProductID = "ProductID"
  UPC = "UPC"
end

# {urn:ebay:apis:eBLBaseComponents}FeatureIDCodeType
module FeatureIDCodeType
  BestOfferEnabled = "BestOfferEnabled"
  CustomCode = "CustomCode"
  DutchBINEnabled = "DutchBINEnabled"
  HomePageFeaturedEnabled = "HomePageFeaturedEnabled"
  ListingDurations = "ListingDurations"
  ShippingTermsRequired = "ShippingTermsRequired"
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingStarCodeType
module FeedbackRatingStarCodeType
  Blue = "Blue"
  CustomCode = "CustomCode"
  Green = "Green"
  None = "None"
  Purple = "Purple"
  PurpleShooting = "PurpleShooting"
  Red = "Red"
  RedShooting = "RedShooting"
  Turquoise = "Turquoise"
  TurquoiseShooting = "TurquoiseShooting"
  Yellow = "Yellow"
  YellowShooting = "YellowShooting"
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackResponseCodeType
module FeedbackResponseCodeType
  FollowUp = "FollowUp"
  Reply = "Reply"
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCodeType
module FlatRateInsuranceRangeCodeType
  CustomCode = "CustomCode"
  FlatRateInsuranceRange1 = "FlatRateInsuranceRange1"
  FlatRateInsuranceRange2 = "FlatRateInsuranceRange2"
  FlatRateInsuranceRange3 = "FlatRateInsuranceRange3"
  FlatRateInsuranceRange4 = "FlatRateInsuranceRange4"
  FlatRateInsuranceRange5 = "FlatRateInsuranceRange5"
  FlatRateInsuranceRange6 = "FlatRateInsuranceRange6"
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingRateOptionCodeType
module FlatShippingRateOptionCodeType
  ChargeAmountForEachAdditionalItem = "ChargeAmountForEachAdditionalItem"
  CustomCode = "CustomCode"
  DeductAmountFromEachAdditionalItem = "DeductAmountFromEachAdditionalItem"
  ShipAdditionalItemsFree = "ShipAdditionalItemsFree"
end

# {urn:ebay:apis:eBLBaseComponents}GallerySortFilterCodeType
module GallerySortFilterCodeType
  CustomCode = "CustomCode"
  ShowAnyItems = "ShowAnyItems"
  ShowItemsWithGalleryImagesFirst = "ShowItemsWithGalleryImagesFirst"
  ShowOnlyItemsWithGalleryImages = "ShowOnlyItemsWithGalleryImages"
end

# {urn:ebay:apis:eBLBaseComponents}GalleryTypeCodeType
module GalleryTypeCodeType
  CustomCode = "CustomCode"
  Featured = "Featured"
  Gallery = "Gallery"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}GeneralPaymentMethodCodeType
module GeneralPaymentMethodCodeType
  ACH = "ACH"
  Creditcard = "Creditcard"
  CustomCode = "CustomCode"
  Echeck = "Echeck"
  Other = "Other"
  PayPalBalance = "PayPalBalance"
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersModeCodeType
module GetAllBiddersModeCodeType
  CustomCode = "CustomCode"
  EndedListing = "EndedListing"
  SecondChanceEligibleEndedListing = "SecondChanceEligibleEndedListing"
  ViewAll = "ViewAll"
end

# {urn:ebay:apis:eBLBaseComponents}GiftServicesCodeType
module GiftServicesCodeType
  CustomCode = "CustomCode"
  GiftExpressShipping = "GiftExpressShipping"
  GiftShipToRecipient = "GiftShipToRecipient"
  GiftWrap = "GiftWrap"
end

# {urn:ebay:apis:eBLBaseComponents}GranularityLevelCodeType
module GranularityLevelCodeType
  Coarse = "Coarse"
  Fine = "Fine"
  Medium = "Medium"
end

# {urn:ebay:apis:eBLBaseComponents}HitCounterCodeType
module HitCounterCodeType
  CustomCode = "CustomCode"
  GreenLED = "GreenLED"
  Hidden = "Hidden"
  HonestyStyle = "HonestyStyle"
  NoHitCounter = "NoHitCounter"
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceOptionCodeType
module InsuranceOptionCodeType
  CustomCode = "CustomCode"
  IncludedInShippingHandling = "IncludedInShippingHandling"
  NotOffered = "NotOffered"
  NotOfferedOnSite = "NotOfferedOnSite"
  Optional = "Optional"
  Required = "Required"
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceSelectedCodeType
module InsuranceSelectedCodeType
  CustomCode = "CustomCode"
  IncludedInShippingHandling = "IncludedInShippingHandling"
  NotOffered = "NotOffered"
  OfferedNotSelected = "OfferedNotSelected"
  OfferedSelected = "OfferedSelected"
  Required = "Required"
end

# {urn:ebay:apis:eBLBaseComponents}ItemFormatSortFilterCodeType
module ItemFormatSortFilterCodeType
  CustomCode = "CustomCode"
  ShowAnyItems = "ShowAnyItems"
  ShowItemsWithBINFirst = "ShowItemsWithBINFirst"
  ShowOnlyItemsWithBIN = "ShowOnlyItemsWithBIN"
  ShowOnlyStoreItems = "ShowOnlyStoreItems"
end

# {urn:ebay:apis:eBLBaseComponents}ItemLocationCodeType
module ItemLocationCodeType
  CustomCode = "CustomCode"
  ItemAvailableIn = "ItemAvailableIn"
  ItemLocatedIn = "ItemLocatedIn"
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortFilterCodeType
module ItemSortFilterCodeType
  CustomCode = "CustomCode"
  EndingLast = "EndingLast"
  EndingSoonest = "EndingSoonest"
  HighestPrice = "HighestPrice"
  LowestPrice = "LowestPrice"
  NewlyListed = "NewlyListed"
  RandomlySelected = "RandomlySelected"
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortTypeCodeType
module ItemSortTypeCodeType
  BestOffer = "BestOffer"
  BestOfferCount = "BestOfferCount"
  BestOfferCountDescending = "BestOfferCountDescending"
  BestOfferDescending = "BestOfferDescending"
  BidCount = "BidCount"
  BidCountDescending = "BidCountDescending"
  BidderCount = "BidderCount"
  BidderCountDescending = "BidderCountDescending"
  BuyerEmail = "BuyerEmail"
  BuyerEmailDescending = "BuyerEmailDescending"
  BuyerPostalCode = "BuyerPostalCode"
  BuyerPostalCodeDescending = "BuyerPostalCodeDescending"
  BuyerUserID = "BuyerUserID"
  BuyerUserIDDescending = "BuyerUserIDDescending"
  CurrentPrice = "CurrentPrice"
  CurrentPriceDescending = "CurrentPriceDescending"
  CustomCode = "CustomCode"
  EndTime = "EndTime"
  EndTimeDescending = "EndTimeDescending"
  FeedbackLeft = "FeedbackLeft"
  FeedbackLeftDescending = "FeedbackLeftDescending"
  FeedbackReceived = "FeedbackReceived"
  FeedbackReceivedDescending = "FeedbackReceivedDescending"
  HighBidderUserID = "HighBidderUserID"
  HighBidderUserIDDescending = "HighBidderUserIDDescending"
  ItemID = "ItemID"
  ItemIDDescending = "ItemIDDescending"
  ListingDuration = "ListingDuration"
  ListingDurationDescending = "ListingDurationDescending"
  ListingType = "ListingType"
  ListingTypeDescending = "ListingTypeDescending"
  MaxBid = "MaxBid"
  MaxBidDescending = "MaxBidDescending"
  Price = "Price"
  PriceDescending = "PriceDescending"
  Quantity = "Quantity"
  QuantityAvailable = "QuantityAvailable"
  QuantityAvailableDescending = "QuantityAvailableDescending"
  QuantityDescending = "QuantityDescending"
  QuantityPurchased = "QuantityPurchased"
  QuantityPurchasedDescending = "QuantityPurchasedDescending"
  QuantitySold = "QuantitySold"
  QuantitySoldDescending = "QuantitySoldDescending"
  QuestionCount = "QuestionCount"
  QuestionCountDescending = "QuestionCountDescending"
  ReservePrice = "ReservePrice"
  ReservePriceDescending = "ReservePriceDescending"
  SellerEmail = "SellerEmail"
  SellerEmailDescending = "SellerEmailDescending"
  SellerUserID = "SellerUserID"
  SellerUserIDDescending = "SellerUserIDDescending"
  ShippingServiceCost = "ShippingServiceCost"
  ShippingServiceCostDescending = "ShippingServiceCostDescending"
  StartPrice = "StartPrice"
  StartPriceDescending = "StartPriceDescending"
  StartTime = "StartTime"
  StartTimeDescending = "StartTimeDescending"
  TimeLeft = "TimeLeft"
  TimeLeftDescending = "TimeLeftDescending"
  Title = "Title"
  TitleDescending = "TitleDescending"
  TotalPrice = "TotalPrice"
  TotalPriceDescending = "TotalPriceDescending"
  UserID = "UserID"
  UserIDDescending = "UserIDDescending"
  WatchCount = "WatchCount"
  WatchCountDescending = "WatchCountDescending"
end

# {urn:ebay:apis:eBLBaseComponents}ItemTypeFilterCodeType
module ItemTypeFilterCodeType
  AllItems = "AllItems"
  AuctionItemsOnly = "AuctionItemsOnly"
  CustomCode = "CustomCode"
  FixedPricedItem = "FixedPricedItem"
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationCodeType
module ListingDurationCodeType
  CustomCode = "CustomCode"
  Days_1 = "Days_1"
  Days_10 = "Days_10"
  Days_120 = "Days_120"
  Days_21 = "Days_21"
  Days_3 = "Days_3"
  Days_30 = "Days_30"
  Days_5 = "Days_5"
  Days_60 = "Days_60"
  Days_7 = "Days_7"
  Days_90 = "Days_90"
  GTC = "GTC"
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementsCodeType
module ListingEnhancementsCodeType
  BoldTitle = "BoldTitle"
  Border = "Border"
  CustomCode = "CustomCode"
  Featured = "Featured"
  Highlight = "Highlight"
  HomePageFeatured = "HomePageFeatured"
  ProPackBundle = "ProPackBundle"
end

# {urn:ebay:apis:eBLBaseComponents}ListingFlowCodeType
module ListingFlowCodeType
  AddItem = "AddItem"
  CustomCode = "CustomCode"
  RelistItem = "RelistItem"
  ReviseItem = "ReviseItem"
end

# {urn:ebay:apis:eBLBaseComponents}ListingStatusCodeType
module ListingStatusCodeType
  Active = "Active"
  Completed = "Completed"
  Custom = "Custom"
  CustomCode = "CustomCode"
  Ended = "Ended"
end

# {urn:ebay:apis:eBLBaseComponents}ListingTypeCodeType
module ListingTypeCodeType
  AdType = "AdType"
  Auction = "Auction"
  Chinese = "Chinese"
  CustomCode = "CustomCode"
  Dutch = "Dutch"
  FixedPriceItem = "FixedPriceItem"
  Half = "Half"
  Live = "Live"
  PersonalOffer = "PersonalOffer"
  StoresFixedPrice = "StoresFixedPrice"
  Unknown = "Unknown"
end

# {urn:ebay:apis:eBLBaseComponents}LogoTypeCodeType
module LogoTypeCodeType
  Custom = "Custom"
  CustomCode = "CustomCode"
  Store = "Store"
  WinningBidderNotice = "WinningBidderNotice"
end

# {urn:ebay:apis:eBLBaseComponents}MailOptionsTypeCodeType
module MailOptionsTypeCodeType
  CustomCode = "CustomCode"
  DoNotSendEmail = "DoNotSendEmail"
  EmailCopyToSender = "EmailCopyToSender"
  HideSenderEmailAddress = "HideSenderEmailAddress"
end

# {urn:ebay:apis:eBLBaseComponents}MerchDisplayCodeType
module MerchDisplayCodeType
  CustomCode = "CustomCode"
  DefaultTheme = "DefaultTheme"
  StoreTheme = "StoreTheme"
end

# {urn:ebay:apis:eBLBaseComponents}MerchandizingPrefCodeType
module MerchandizingPrefCodeType
  CustomCode = "CustomCode"
  OptIn = "OptIn"
  OptOut = "OptOut"
end

# {urn:ebay:apis:eBLBaseComponents}MessageStatusTypeCodeType
module MessageStatusTypeCodeType
  Answered = "Answered"
  CustomCode = "CustomCode"
  Unanswered = "Unanswered"
end

# {urn:ebay:apis:eBLBaseComponents}MessageTypeCodeType
module MessageTypeCodeType
  AskSellerQuestion = "AskSellerQuestion"
  ContactEbayMember = "ContactEbayMember"
  CustomCode = "CustomCode"
  ResponseToASQQuestion = "ResponseToASQQuestion"
end

# {urn:ebay:apis:eBLBaseComponents}ModifyActionCodeType
module ModifyActionCodeType
  Add = "Add"
  CustomCode = "CustomCode"
  Delete = "Delete"
  Update = "Update"
end

# {urn:ebay:apis:eBLBaseComponents}ModifyCodeType
module ModifyCodeType
  CustomCode = "CustomCode"
  Dropped = "Dropped"
  Modify = "Modify"
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertResolutionStatusCode
module MyMessagesAlertResolutionStatusCode
  ResolvedByAutoResolution = "ResolvedByAutoResolution"
  ResolvedByUser = "ResolvedByUser"
  Unresolved = "Unresolved"
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderOperationCodeType
module MyMessagesFolderOperationCodeType
  CustomCode = "CustomCode"
  Display = "Display"
  Remove = "Remove"
  Rename = "Rename"
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventTypeCodeType
module NotificationEventTypeCodeType
  AskSellerQuestion = "AskSellerQuestion"
  AuctionCheckoutComplete = "AuctionCheckoutComplete"
  BestOffer = "BestOffer"
  BuyerResponseDispute = "BuyerResponseDispute"
  CheckoutBuyerRequestsTotal = "CheckoutBuyerRequestsTotal"
  CustomCode = "CustomCode"
  EndOfAuction = "EndOfAuction"
  Feedback = "Feedback"
  FeedbackForSeller = "FeedbackForSeller"
  FixedPriceEndOfTransaction = "FixedPriceEndOfTransaction"
  FixedPriceTransaction = "FixedPriceTransaction"
  INRBuyerClosedDispute = "INRBuyerClosedDispute"
  INRBuyerOpenedDispute = "INRBuyerOpenedDispute"
  INRBuyerRespondedToDispute = "INRBuyerRespondedToDispute"
  INRSellerRespondedToDispute = "INRSellerRespondedToDispute"
  ItemListed = "ItemListed"
  ItemRevised = "ItemRevised"
  MyMessagesAlert = "MyMessagesAlert"
  MyMessagesAlertHeader = "MyMessagesAlertHeader"
  MyMessagesM2MMessage = "MyMessagesM2MMessage"
  MyMessagesM2MMessageHeader = "MyMessagesM2MMessageHeader"
  MyMessageseBayMessage = "MyMessageseBayMessage"
  MyMessageseBayMessageHeader = "MyMessageseBayMessageHeader"
  None = "None"
  OutBid = "OutBid"
  SecondChanceOffer = "SecondChanceOffer"
  SellerClosedDispute = "SellerClosedDispute"
  SellerOpenedDispute = "SellerOpenedDispute"
  SellerRespondedToDispute = "SellerRespondedToDispute"
end

# {urn:ebay:apis:eBLBaseComponents}NotificationPayloadTypeCodeType
module NotificationPayloadTypeCodeType
  CustomCode = "CustomCode"
  EBLSchemaSOAP = "eBLSchemaSOAP"
  NonSchemaSOAP = "NonSchemaSOAP"
end

# {urn:ebay:apis:eBLBaseComponents}NotificationRoleCodeType
module NotificationRoleCodeType
  Application = "Application"
  CustomCode = "CustomCode"
  User = "User"
end

# {urn:ebay:apis:eBLBaseComponents}OperationTypeCodeType
module OperationTypeCodeType
  CustomCode = "CustomCode"
  ItemRules = "ItemRules"
  ReplaceAllDefaultRules = "ReplaceAllDefaultRules"
end

# {urn:ebay:apis:eBLBaseComponents}OrderRoleCodeType
module OrderRoleCodeType
  Buyer = "Buyer"
  CustomCode = "CustomCode"
  Seller = "Seller"
end

# {urn:ebay:apis:eBLBaseComponents}OrderStatusCodeType
module OrderStatusCodeType
  Active = "Active"
  Cancelled = "Cancelled"
  Completed = "Completed"
  CustomCode = "CustomCode"
  Inactive = "Inactive"
end

# {urn:ebay:apis:eBLBaseComponents}PaidStatusCodeType
module PaidStatusCodeType
  BuyerHasNotCompletedCheckout = "BuyerHasNotCompletedCheckout"
  CustomCode = "CustomCode"
  EscrowPaymentCancelled = "EscrowPaymentCancelled"
  MarkedAsPaid = "MarkedAsPaid"
  NotPaid = "NotPaid"
  PaidWithEscrow = "PaidWithEscrow"
  PaidWithPaisaPay = "PaidWithPaisaPay"
  PaidWithPayPal = "PaidWithPayPal"
  PaymentPending = "PaymentPending"
  PaymentPendingWithEscrow = "PaymentPendingWithEscrow"
  PaymentPendingWithPaisaPay = "PaymentPendingWithPaisaPay"
  PaymentPendingWithPayPal = "PaymentPendingWithPayPal"
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMethodSearchCodeType
module PaymentMethodSearchCodeType
  PaisaPay = "PaisaPay"
  PayPal = "PayPal"
  PayPalOrPaisaPay = "PayPalOrPaisaPay"
end

# {urn:ebay:apis:eBLBaseComponents}PaymentStatusCodeType
module PaymentStatusCodeType
  BuyerCreditCardFailed = "BuyerCreditCardFailed"
  BuyerECheckBounced = "BuyerECheckBounced"
  BuyerFailedPaymentReportedBySeller = "BuyerFailedPaymentReportedBySeller"
  CustomCode = "CustomCode"
  NoPaymentFailure = "NoPaymentFailure"
  PayPalPaymentInProcess = "PayPalPaymentInProcess"
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTypeCodeType
module PaymentTypeCodeType
  CustomCode = "CustomCode"
  Refund = "Refund"
  Sale = "Sale"
end

# {urn:ebay:apis:eBLBaseComponents}PhotoDisplayCodeType
module PhotoDisplayCodeType
  CustomCode = "CustomCode"
  None = "None"
  PicturePack = "PicturePack"
  SiteHostedPictureShow = "SiteHostedPictureShow"
  SlideShow = "SlideShow"
  SuperSize = "SuperSize"
  SuperSizePictureShow = "SuperSizePictureShow"
  VendorHostedPictureShow = "VendorHostedPictureShow"
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerActionCodeType
module PictureManagerActionCodeType
  Add = "Add"
  Change = "Change"
  CustomCode = "CustomCode"
  Delete = "Delete"
  Move = "Move"
  Rename = "Rename"
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailLevelCodeType
module PictureManagerDetailLevelCodeType
  CustomCode = "CustomCode"
  ReturnAll = "ReturnAll"
  ReturnPicture = "ReturnPicture"
  ReturnSubscription = "ReturnSubscription"
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayTypeCodeType
module PictureManagerPictureDisplayTypeCodeType
  BIBO = "BIBO"
  CustomCode = "CustomCode"
  Large = "Large"
  Original = "Original"
  Standard = "Standard"
  Supersize = "Supersize"
  Thumbnail = "Thumbnail"
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionLevelCodeType
module PictureManagerSubscriptionLevelCodeType
  CustomCode = "CustomCode"
  Free = "Free"
  Level1 = "Level1"
  Level2 = "Level2"
  Level3 = "Level3"
  Level4 = "Level4"
end

# {urn:ebay:apis:eBLBaseComponents}ProductUseCaseCodeType
module ProductUseCaseCodeType
  AddItem = "AddItem"
  CustomCode = "CustomCode"
  RelistItem = "RelistItem"
  ReviseItem = "ReviseItem"
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemPriceTypeCodeType
module PromotionItemPriceTypeCodeType
  AuctionPrice = "AuctionPrice"
  BuyItNowPrice = "BuyItNowPrice"
  CustomCode = "CustomCode"
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemSelectionCodeType
module PromotionItemSelectionCodeType
  Automatic = "Automatic"
  CustomCode = "CustomCode"
  Manual = "Manual"
end

# {urn:ebay:apis:eBLBaseComponents}PromotionMethodCodeType
module PromotionMethodCodeType
  CrossSell = "CrossSell"
  CustomCode = "CustomCode"
  UpSell = "UpSell"
end

# {urn:ebay:apis:eBLBaseComponents}PromotionSchemeCodeType
module PromotionSchemeCodeType
  CategoryProximity = "CategoryProximity"
  CustomCode = "CustomCode"
  DefaultRule = "DefaultRule"
  ItemToDefaultRule = "ItemToDefaultRule"
  ItemToItem = "ItemToItem"
  ItemToStoreCat = "ItemToStoreCat"
  StoreToStoreCat = "StoreToStoreCat"
end

# {urn:ebay:apis:eBLBaseComponents}PurchasePurposeTypeCodeType
module PurchasePurposeTypeCodeType
  AuctionItem = "AuctionItem"
  BuyNowItem = "BuyNowItem"
  CustomCode = "CustomCode"
  Donation = "Donation"
  EBayBilling = "eBayBilling"
  GiftCertificates = "GiftCertificates"
  Other = "Other"
  ShoppingCart = "ShoppingCart"
  Subscription = "Subscription"
end

# {urn:ebay:apis:eBLBaseComponents}QuantityOperatorCodeType
module QuantityOperatorCodeType
  CustomCode = "CustomCode"
  Equal = "Equal"
  GreaterThan = "GreaterThan"
  GreaterThanOrEqual = "GreaterThanOrEqual"
  LessThan = "LessThan"
  LessThanOrEqual = "LessThanOrEqual"
end

# {urn:ebay:apis:eBLBaseComponents}QuestionTypeCodeType
module QuestionTypeCodeType
  CustomCode = "CustomCode"
  General = "General"
  MultipleItemShipping = "MultipleItemShipping"
  Payment = "Payment"
  Shipping = "Shipping"
end

# {urn:ebay:apis:eBLBaseComponents}RCSPaymentStatusCodeType
module RCSPaymentStatusCodeType
  Canceled = "Canceled"
  CustomCode = "CustomCode"
  Paid = "Paid"
  Pending = "Pending"
end

# {urn:ebay:apis:eBLBaseComponents}RangeCodeType
module RangeCodeType
  CustomCode = "CustomCode"
  High = "High"
  Low = "Low"
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationEngineCodeType
module RecommendationEngineCodeType
  CustomCode = "CustomCode"
  ListingAnalyzer = "ListingAnalyzer"
  ProductPricing = "ProductPricing"
  SIFFTAS = "SIFFTAS"
  SuggestedAttributes = "SuggestedAttributes"
end

# {urn:ebay:apis:eBLBaseComponents}RefundReasonCodeType
module RefundReasonCodeType
  BuyerRemorse = "BuyerRemorse"
  CannotShipProduct = "CannotShipProduct"
  CustomCode = "CustomCode"
  ItemBadQuality = "ItemBadQuality"
  ItemDamaged = "ItemDamaged"
  Other = "Other"
  WrongItemShipped = "WrongItemShipped"
end

# {urn:ebay:apis:eBLBaseComponents}RefundTypeCodeType
module RefundTypeCodeType
  CustomCode = "CustomCode"
  CustomOrPartial = "CustomOrPartial"
  Full = "Full"
  FullPlusShipping = "FullPlusShipping"
end

# {urn:ebay:apis:eBLBaseComponents}SearchFlagsCodeType
module SearchFlagsCodeType
  Charity = "Charity"
  CustomCode = "CustomCode"
  NowAndNew = "NowAndNew"
  PayPalBuyerPaymentOption = "PayPalBuyerPaymentOption"
  SearchInDescription = "SearchInDescription"
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultValuesCodeType
module SearchResultValuesCodeType
  CharityListing = "CharityListing"
  CustomCode = "CustomCode"
  Escrow = "Escrow"
  Gift = "Gift"
  New = "New"
  Picture = "Picture"
end

# {urn:ebay:apis:eBLBaseComponents}SearchSortOrderCodeType
module SearchSortOrderCodeType
  CustomCode = "CustomCode"
  SortByCountryAsc = "SortByCountryAsc"
  SortByCountryDesc = "SortByCountryDesc"
  SortByCurrentBid = "SortByCurrentBid"
  SortByCurrentBidAsc = "SortByCurrentBidAsc"
  SortByCurrentBidDesc = "SortByCurrentBidDesc"
  SortByDistanceAsc = "SortByDistanceAsc"
  SortByEndDate = "SortByEndDate"
  SortByEscrowAsc = "SortByEscrowAsc"
  SortByEscrowDesc = "SortByEscrowDesc"
  SortByListingDate = "SortByListingDate"
  SortByPayPalAsc = "SortByPayPalAsc"
  SortByPayPalDesc = "SortByPayPalDesc"
  SortByStartDate = "SortByStartDate"
end

# {urn:ebay:apis:eBLBaseComponents}SearchTypeCodeType
module SearchTypeCodeType
  All = "All"
  CustomCode = "CustomCode"
  Gallery = "Gallery"
end

# {urn:ebay:apis:eBLBaseComponents}SecondChanceOfferDurationCodeType
module SecondChanceOfferDurationCodeType
  CustomCode = "CustomCode"
  Days_1 = "Days_1"
  Days_3 = "Days_3"
  Days_5 = "Days_5"
  Days_7 = "Days_7"
end

# {urn:ebay:apis:eBLBaseComponents}SelectionModeCodeType
module SelectionModeCodeType
  Automatic = "Automatic"
  CustomCode = "CustomCode"
  Manual = "Manual"
end

# {urn:ebay:apis:eBLBaseComponents}SellerBusinessCodeType
module SellerBusinessCodeType
  Commercial = "Commercial"
  Private = "Private"
  Undefined = "Undefined"
end

# {urn:ebay:apis:eBLBaseComponents}SellerGuaranteeLevelCodeType
module SellerGuaranteeLevelCodeType
  CustomCode = "CustomCode"
  NotEligible = "NotEligible"
  Premium = "Premium"
  Regular = "Regular"
  Ultra = "Ultra"
end

# {urn:ebay:apis:eBLBaseComponents}SellerLevelCodeType
module SellerLevelCodeType
  Bronze = "Bronze"
  CustomCode = "CustomCode"
  Gold = "Gold"
  None = "None"
  Platinum = "Platinum"
  Silver = "Silver"
  Titanium = "Titanium"
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentMethodCodeType
module SellerPaymentMethodCodeType
  CreditCard = "CreditCard"
  CustomCode = "CustomCode"
  DirectDebit = "DirectDebit"
  DirectDebitPendingSignatureMandate = "DirectDebitPendingSignatureMandate"
  EBayDirectPay = "eBayDirectPay"
  NothingOnFile = "NothingOnFile"
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesActionCodeType
module SetUserNotesActionCodeType
  AddOrUpdate = "AddOrUpdate"
  Delete = "Delete"
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentDeliveryStatusCodeType
module ShipmentDeliveryStatusCodeType
  Canceled = "Canceled"
  Created = "Created"
  CustomCode = "CustomCode"
  Delivered = "Delivered"
  DroppedOff = "DroppedOff"
  InTransit = "InTransit"
  LabelPrinted = "LabelPrinted"
  Returned = "Returned"
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentStatusCodeType
module ShipmentStatusCodeType
  Active = "Active"
  Canceled = "Canceled"
  CustomCode = "CustomCode"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierCodeType
module ShippingCarrierCodeType
  CustomCode = "CustomCode"
  DHL = "DHL"
  DeutschePost = "DeutschePost"
  Hermes = "Hermes"
  ILoxx = "iLoxx"
  Other = "Other"
  UPS = "UPS"
  USPS = "USPS"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingFeatureCodeType
module ShippingFeatureCodeType
  CustomCode = "CustomCode"
  DeliveryConfirmation = "DeliveryConfirmation"
  NotDefined = "NotDefined"
  Other = "Other"
  SaturdayDelivery = "SaturdayDelivery"
  SignatureConfirmation = "SignatureConfirmation"
  StealthPostage = "StealthPostage"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingOptionCodeType
module ShippingOptionCodeType
  CustomCode = "CustomCode"
  SiteOnly = "SiteOnly"
  SitePlusRegions = "SitePlusRegions"
  WillNotShip = "WillNotShip"
  WorldWide = "WorldWide"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageCodeType
module ShippingPackageCodeType
  BulkyGoods = "BulkyGoods"
  Caravan = "Caravan"
  Cars = "Cars"
  CustomCode = "CustomCode"
  Europallet = "Europallet"
  ExtraLargePack = "ExtraLargePack"
  Furniture = "Furniture"
  IndustryVehicles = "IndustryVehicles"
  LargeEnvelope = "LargeEnvelope"
  Letter = "Letter"
  Motorbikes = "Motorbikes"
  None = "None"
  OneWayPallet = "OneWayPallet"
  PackageThickEnvelope = "PackageThickEnvelope"
  Roll = "Roll"
  UPSLetter = "UPSLetter"
  USPSFlatRateEnvelope = "USPSFlatRateEnvelope"
  USPSLargePack = "USPSLargePack"
  VeryLargePack = "VeryLargePack"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRateTypeCodeType
module ShippingRateTypeCodeType
  CustomCode = "CustomCode"
  DailyPickup = "DailyPickup"
  OnDemand = "OnDemand"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRegionCodeType
module ShippingRegionCodeType
  Africa = "Africa"
  Asia = "Asia"
  Caribbean = "Caribbean"
  CustomCode = "CustomCode"
  Europe = "Europe"
  EuropeanUnion = "EuropeanUnion"
  LatinAmerica = "LatinAmerica"
  MiddleEast = "MiddleEast"
  NorthAmerica = "NorthAmerica"
  Oceania = "Oceania"
  SouthAmerica = "SouthAmerica"
  WillNotShip = "WillNotShip"
  Worldwide = "Worldwide"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCodeType
module ShippingServiceCodeType
  AT_COD = "AT_COD"
  AT_ExpressOrCourier = "AT_ExpressOrCourier"
  AT_InsuredDispatch = "AT_InsuredDispatch"
  AT_InsuredExpressOrCourier = "AT_InsuredExpressOrCourier"
  AT_InsuredSpecialDispatch = "AT_InsuredSpecialDispatch"
  AT_Sonstige = "AT_Sonstige"
  AT_SonstigerVersandInternational = "AT_SonstigerVersandInternational"
  AT_SpecialDispatch = "AT_SpecialDispatch"
  AT_StandardDispatch = "AT_StandardDispatch"
  AT_UnversicherterExpressVersandInternational = "AT_UnversicherterExpressVersandInternational"
  AT_UnversicherterVersandInternational = "AT_UnversicherterVersandInternational"
  AT_VersicherterExpressVersandInternational = "AT_VersicherterExpressVersandInternational"
  AT_VersicherterVersandInternational = "AT_VersicherterVersandInternational"
  AT_Writing = "AT_Writing"
  AU_AirMailInternational = "AU_AirMailInternational"
  AU_Courier = "AU_Courier"
  AU_EMSInternationalCourierDocuments = "AU_EMSInternationalCourierDocuments"
  AU_EMSInternationalCourierParcels = "AU_EMSInternationalCourierParcels"
  AU_EconomyAirInternational = "AU_EconomyAirInternational"
  AU_ExpeditedInternational = "AU_ExpeditedInternational"
  AU_Express = "AU_Express"
  AU_ExpressPostInternationalDocuments = "AU_ExpressPostInternationalDocuments"
  AU_Other = "AU_Other"
  AU_OtherInternational = "AU_OtherInternational"
  AU_Registered = "AU_Registered"
  AU_Regular = "AU_Regular"
  AU_SeaMailInternational = "AU_SeaMailInternational"
  AU_StandardInternational = "AU_StandardInternational"
  BEFR_DHLInternational = "BEFR_DHLInternational"
  BEFR_DePostInternational = "BEFR_DePostInternational"
  BEFR_ExpeditedInternational = "BEFR_ExpeditedInternational"
  BEFR_FedExInternational = "BEFR_FedExInternational"
  BEFR_LaPosteInternational = "BEFR_LaPosteInternational"
  BEFR_Other = "BEFR_Other"
  BEFR_OtherInternational = "BEFR_OtherInternational"
  BEFR_ParcelPost = "BEFR_ParcelPost"
  BEFR_PriorityDelivery = "BEFR_PriorityDelivery"
  BEFR_RegisteredMail = "BEFR_RegisteredMail"
  BEFR_StandardDelivery = "BEFR_StandardDelivery"
  BEFR_StandardInternational = "BEFR_StandardInternational"
  BEFR_TPGPostTNTInternational = "BEFR_TPGPostTNTInternational"
  BEFR_UPSInternational = "BEFR_UPSInternational"
  BENL_DHLInternational = "BENL_DHLInternational"
  BENL_DePostInternational = "BENL_DePostInternational"
  BENL_ExpeditedInternational = "BENL_ExpeditedInternational"
  BENL_FedExInternational = "BENL_FedExInternational"
  BENL_LaPosteInternational = "BENL_LaPosteInternational"
  BENL_Other = "BENL_Other"
  BENL_OtherInternational = "BENL_OtherInternational"
  BENL_ParcelPost = "BENL_ParcelPost"
  BENL_PriorityDelivery = "BENL_PriorityDelivery"
  BENL_RegisteredMail = "BENL_RegisteredMail"
  BENL_StandardDelivery = "BENL_StandardDelivery"
  BENL_StandardInternational = "BENL_StandardInternational"
  BENL_TPGPostTNTInternational = "BENL_TPGPostTNTInternational"
  BENL_UPSInternational = "BENL_UPSInternational"
  CA_ExpeditedDelivery = "CA_ExpeditedDelivery"
  CA_ExpeditedInternational = "CA_ExpeditedInternational"
  CA_OtherInternational = "CA_OtherInternational"
  CA_PostExpeditedParcel = "CA_PostExpeditedParcel"
  CA_PostExpeditedParcelUSA = "CA_PostExpeditedParcelUSA"
  CA_PostInternationalParcelAir = "CA_PostInternationalParcelAir"
  CA_PostInternationalParcelSurface = "CA_PostInternationalParcelSurface"
  CA_PostLettermail = "CA_PostLettermail"
  CA_PostPriorityCourier = "CA_PostPriorityCourier"
  CA_PostRegularParcel = "CA_PostRegularParcel"
  CA_PostSmallPacketsUSA = "CA_PostSmallPacketsUSA"
  CA_PostXpresspost = "CA_PostXpresspost"
  CA_PostXpresspostInternational = "CA_PostXpresspostInternational"
  CA_PostXpresspostUSA = "CA_PostXpresspostUSA"
  CA_PurolatorInternational = "CA_PurolatorInternational"
  CA_SmallPacketsInternational = "CA_SmallPacketsInternational"
  CA_StandardDelivery = "CA_StandardDelivery"
  CA_StandardInternational = "CA_StandardInternational"
  CH_COD = "CH_COD"
  CH_EconomySendungenInternational = "CH_EconomySendungenInternational"
  CH_ExpressOrCourier = "CH_ExpressOrCourier"
  CH_InsuredDispatch = "CH_InsuredDispatch"
  CH_InsuredExpressOrCourier = "CH_InsuredExpressOrCourier"
  CH_InsuredSpecialDispatch = "CH_InsuredSpecialDispatch"
  CH_PrioritySendungenInternational = "CH_PrioritySendungenInternational"
  CH_Sonstige = "CH_Sonstige"
  CH_SonstigerVersandInternational = "CH_SonstigerVersandInternational"
  CH_SpecialDispatch = "CH_SpecialDispatch"
  CH_StandardDispatchAPost = "CH_StandardDispatchAPost"
  CH_StandardDispatchBPost = "CH_StandardDispatchBPost"
  CH_UrgentSendungenInternational = "CH_UrgentSendungenInternational"
  CH_Writing = "CH_Writing"
  CN_CODInternational = "CN_CODInternational"
  CN_DeliveryCompanyExpress = "CN_DeliveryCompanyExpress"
  CN_EMSInternational = "CN_EMSInternational"
  CN_ExpeditedInternational = "CN_ExpeditedInternational"
  CN_ExpressDeliveryOtherCities = "CN_ExpressDeliveryOtherCities"
  CN_ExpressDeliverySameCity = "CN_ExpressDeliverySameCity"
  CN_FastPostOffice = "CN_FastPostOffice"
  CN_OtherInternational = "CN_OtherInternational"
  CN_Others = "CN_Others"
  CN_OthersInternational = "CN_OthersInternational"
  CN_PersonalDelivery = "CN_PersonalDelivery"
  CN_PostOfficeExpress = "CN_PostOfficeExpress"
  CN_RegularLogisticsInternational = "CN_RegularLogisticsInternational"
  CN_RegularPackage = "CN_RegularPackage"
  CN_StandardInternational = "CN_StandardInternational"
  CN_StandardMailingInternational = "CN_StandardMailingInternational"
  CustomCode = "CustomCode"
  DE_COD = "DE_COD"
  DE_DHLPackchen = "DE_DHLPackchen"
  DE_DHLPackchenInternational = "DE_DHLPackchenInternational"
  DE_DHLPostpaket = "DE_DHLPostpaket"
  DE_DHLPostpaketInternational = "DE_DHLPostpaketInternational"
  DE_DeutschePostBrief = "DE_DeutschePostBrief"
  DE_DeutschePostBriefLandInternational = "DE_DeutschePostBriefLandInternational"
  DE_DeutschePostBriefLuftInternational = "DE_DeutschePostBriefLuftInternational"
  DE_DeutschePostBuchersendung = "DE_DeutschePostBuchersendung"
  DE_DeutschePostWarensendung = "DE_DeutschePostWarensendung"
  DE_ExpressOrCourier = "DE_ExpressOrCourier"
  DE_HermesPaketUnversichert = "DE_HermesPaketUnversichert"
  DE_HermesPaketVersichert = "DE_HermesPaketVersichert"
  DE_IloxxEuropaInternational = "DE_IloxxEuropaInternational"
  DE_IloxxStandard = "DE_IloxxStandard"
  DE_IloxxTransportXXL = "DE_IloxxTransportXXL"
  DE_IloxxUbernachtExpress = "DE_IloxxUbernachtExpress"
  DE_IloxxWorldWideInternational = "DE_IloxxWorldWideInternational"
  DE_InsuredDispatch = "DE_InsuredDispatch"
  DE_InsuredExpressOrCourier = "DE_InsuredExpressOrCourier"
  DE_InsuredSpecialDispatch = "DE_InsuredSpecialDispatch"
  DE_Sonstige = "DE_Sonstige"
  DE_SonstigerVersandInternational = "DE_SonstigerVersandInternational"
  DE_SpecialDispatch = "DE_SpecialDispatch"
  DE_StandardDispatch = "DE_StandardDispatch"
  DE_UnversicherterExpressVersandInternational = "DE_UnversicherterExpressVersandInternational"
  DE_UnversicherterVersand = "DE_UnversicherterVersand"
  DE_UnversicherterVersandInternational = "DE_UnversicherterVersandInternational"
  DE_VersicherterExpressVersandInternational = "DE_VersicherterExpressVersandInternational"
  DE_VersicherterVersandInternational = "DE_VersicherterVersandInternational"
  DE_Writing = "DE_Writing"
  ES_CartasInternacionalesDeMas20 = "ES_CartasInternacionalesDeMas20"
  ES_CartasInternacionalesHasta20 = "ES_CartasInternacionalesHasta20"
  ES_CartasNacionalesDeMas20 = "ES_CartasNacionalesDeMas20"
  ES_CartasNacionalesHasta20 = "ES_CartasNacionalesHasta20"
  ES_CartasPostalInternational = "ES_CartasPostalInternational"
  ES_EconomyPacketInternational = "ES_EconomyPacketInternational"
  ES_EmsPostalExpressInternational = "ES_EmsPostalExpressInternational"
  ES_ExpeditedInternational = "ES_ExpeditedInternational"
  ES_OtherInternational = "ES_OtherInternational"
  ES_Otros = "ES_Otros"
  ES_PaqueteAzulDeMas2kg = "ES_PaqueteAzulDeMas2kg"
  ES_PaqueteAzulHasta2kg = "ES_PaqueteAzulHasta2kg"
  ES_PaqueteInternacionalEconomico = "ES_PaqueteInternacionalEconomico"
  ES_StandardInternational = "ES_StandardInternational"
  ES_Urgente = "ES_Urgente"
  ExpeditedInternational = "ExpeditedInternational"
  FR_AuteModeDenvoiDeColis = "FR_AuteModeDenvoiDeColis"
  FR_Autre = "FR_Autre"
  FR_ChronopostClassicInternational = "FR_ChronopostClassicInternational"
  FR_ChronopostPremiumInternational = "FR_ChronopostPremiumInternational"
  FR_ChronoposteInternationalClassic = "FR_ChronoposteInternationalClassic"
  FR_Colieco = "FR_Colieco"
  FR_ColiposteColissimo = "FR_ColiposteColissimo"
  FR_ColiposteColissimoDirect = "FR_ColiposteColissimoDirect"
  FR_ColiposteColissimoRecommended = "FR_ColiposteColissimoRecommended"
  FR_DHLExpressEuropack = "FR_DHLExpressEuropack"
  FR_DHLInternational = "FR_DHLInternational"
  FR_Ecopli = "FR_Ecopli"
  FR_EmballageColissimoInternational = "FR_EmballageColissimoInternational"
  FR_ExpeditedInternational = "FR_ExpeditedInternational"
  FR_LaPosteColisPostalEconomyInternational = "FR_LaPosteColisPostalEconomyInternational"
  FR_LaPosteColisPostalPriorityInternational = "FR_LaPosteColisPostalPriorityInternational"
  FR_LaPosteInternationalEconomyCourier = "FR_LaPosteInternationalEconomyCourier"
  FR_LaPosteInternationalPriorityCourier = "FR_LaPosteInternationalPriorityCourier"
  FR_OtherInternational = "FR_OtherInternational"
  FR_PostOfficeLetter = "FR_PostOfficeLetter"
  FR_PostOfficeLetterFollowed = "FR_PostOfficeLetterFollowed"
  FR_PostOfficeLetterRecommended = "FR_PostOfficeLetterRecommended"
  FR_RemiseEnMainPropre = "FR_RemiseEnMainPropre"
  FR_StandardInternational = "FR_StandardInternational"
  FR_UPSExpressInternational = "FR_UPSExpressInternational"
  FR_UPSStandard = "FR_UPSStandard"
  FR_UPSStandardAgainstRefund = "FR_UPSStandardAgainstRefund"
  FR_UPSStandardInternational = "FR_UPSStandardInternational"
  FreightShipping = "FreightShipping"
  FreightShippingInternational = "FreightShippingInternational"
  IE_CollectionInPerson = "IE_CollectionInPerson"
  IE_CollectionInPersonInternational = "IE_CollectionInPersonInternational"
  IE_EMSSDSCourier = "IE_EMSSDSCourier"
  IE_EMSSDSCourierInternational = "IE_EMSSDSCourierInternational"
  IE_EconomySDSCourier = "IE_EconomySDSCourier"
  IE_EconomySDSCourierInternational = "IE_EconomySDSCourierInternational"
  IE_FirstClassLetterService = "IE_FirstClassLetterService"
  IE_InternationalEconomyService = "IE_InternationalEconomyService"
  IE_InternationalPriorityService = "IE_InternationalPriorityService"
  IE_OtherCourier = "IE_OtherCourier"
  IE_OtherCourierInternational = "IE_OtherCourierInternational"
  IE_RegisteredPost = "IE_RegisteredPost"
  IE_SellersStandardRate = "IE_SellersStandardRate"
  IE_SellersStandardRateInternational = "IE_SellersStandardRateInternational"
  IE_SwiftPostExpressInternational = "IE_SwiftPostExpressInternational"
  IE_SwiftPostInternational = "IE_SwiftPostInternational"
  IE_SwiftPostNational = "IE_SwiftPostNational"
  IN_BuyerPicksUpAndPays = "IN_BuyerPicksUpAndPays"
  IN_Courier = "IN_Courier"
  IN_ExpeditedInternational = "IN_ExpeditedInternational"
  IN_Express = "IN_Express"
  IN_FlatRateCOD = "IN_FlatRateCOD"
  IN_LocalCOD = "IN_LocalCOD"
  IN_NationalCOD = "IN_NationalCOD"
  IN_OtherInternational = "IN_OtherInternational"
  IN_Regular = "IN_Regular"
  IN_StandardInternational = "IN_StandardInternational"
  IT_ExpeditedInternational = "IT_ExpeditedInternational"
  IT_ExpressCourier = "IT_ExpressCourier"
  IT_InsuredMail = "IT_InsuredMail"
  IT_MailRegisteredLetter = "IT_MailRegisteredLetter"
  IT_MailRegisteredLetterWithMark = "IT_MailRegisteredLetterWithMark"
  IT_OtherInternational = "IT_OtherInternational"
  IT_PriorityMail = "IT_PriorityMail"
  IT_QuickMail = "IT_QuickMail"
  IT_QuickPackage1 = "IT_QuickPackage1"
  IT_QuickPackage3 = "IT_QuickPackage3"
  IT_RegularMail = "IT_RegularMail"
  IT_RegularPackage = "IT_RegularPackage"
  IT_StandardInternational = "IT_StandardInternational"
  InternationalNotSelected = "InternationalNotSelected"
  LocalDelivery = "LocalDelivery"
  NL_DHLInternational = "NL_DHLInternational"
  NL_DPDGBRInternational = "NL_DPDGBRInternational"
  NL_ExpeditedInternational = "NL_ExpeditedInternational"
  NL_FedExInternational = "NL_FedExInternational"
  NL_GLSBusinessInternational = "NL_GLSBusinessInternational"
  NL_Other = "NL_Other"
  NL_OtherInternational = "NL_OtherInternational"
  NL_ParcelPost = "NL_ParcelPost"
  NL_RegisteredMail = "NL_RegisteredMail"
  NL_StandardDelivery = "NL_StandardDelivery"
  NL_StandardInternational = "NL_StandardInternational"
  NL_TPGPostTNTInternational = "NL_TPGPostTNTInternational"
  NL_UPSInternational = "NL_UPSInternational"
  NotSelected = "NotSelected"
  Other = "Other"
  OtherInternational = "OtherInternational"
  ShippingMethodExpress = "ShippingMethodExpress"
  ShippingMethodStandard = "ShippingMethodStandard"
  StandardInternational = "StandardInternational"
  TW_COD = "TW_COD"
  TW_CPInternationalEMS = "TW_CPInternationalEMS"
  TW_CPInternationalLetterPost = "TW_CPInternationalLetterPost"
  TW_CPInternationalOceanShippingParcel = "TW_CPInternationalOceanShippingParcel"
  TW_CPInternationalParcelPost = "TW_CPInternationalParcelPost"
  TW_CPInternationalRegisteredLetterPost = "TW_CPInternationalRegisteredLetterPost"
  TW_CPInternationalRegisteredParcelPost = "TW_CPInternationalRegisteredParcelPost"
  TW_DwellingMatchCOD = "TW_DwellingMatchCOD"
  TW_DwellingMatchPost = "TW_DwellingMatchPost"
  TW_ExpressMail = "TW_ExpressMail"
  TW_FedExInternationalEconomy = "TW_FedExInternationalEconomy"
  TW_FedExInternationalPriority = "TW_FedExInternationalPriority"
  TW_Other = "TW_Other"
  TW_OtherInternational = "TW_OtherInternational"
  TW_ParcelPost = "TW_ParcelPost"
  TW_RegisteredMail = "TW_RegisteredMail"
  TW_SelfPickup = "TW_SelfPickup"
  TW_UPSWorldwideExpedited = "TW_UPSWorldwideExpedited"
  TW_UPSWorldwideExpress = "TW_UPSWorldwideExpress"
  TW_UPSWorldwideExpressPlus = "TW_UPSWorldwideExpressPlus"
  TW_UnregisteredMail = "TW_UnregisteredMail"
  UK_CollectInPerson = "UK_CollectInPerson"
  UK_CollectInPersonInternational = "UK_CollectInPersonInternational"
  UK_OtherCourier = "UK_OtherCourier"
  UK_OtherCourierOrDeliveryInternational = "UK_OtherCourierOrDeliveryInternational"
  UK_ParcelForceEuro48International = "UK_ParcelForceEuro48International"
  UK_ParcelForceInternationalDatapost = "UK_ParcelForceInternationalDatapost"
  UK_ParcelForceInternationalScheduled = "UK_ParcelForceInternationalScheduled"
  UK_ParcelForceIreland24International = "UK_ParcelForceIreland24International"
  UK_Parcelforce24 = "UK_Parcelforce24"
  UK_Parcelforce48 = "UK_Parcelforce48"
  UK_RoyalMailAirmailInternational = "UK_RoyalMailAirmailInternational"
  UK_RoyalMailAirsureInternational = "UK_RoyalMailAirsureInternational"
  UK_RoyalMailFirstClassRecorded = "UK_RoyalMailFirstClassRecorded"
  UK_RoyalMailFirstClassStandard = "UK_RoyalMailFirstClassStandard"
  UK_RoyalMailHMForcesMailInternational = "UK_RoyalMailHMForcesMailInternational"
  UK_RoyalMailInternationalSignedFor = "UK_RoyalMailInternationalSignedFor"
  UK_RoyalMailSecondClassRecorded = "UK_RoyalMailSecondClassRecorded"
  UK_RoyalMailSecondClassStandard = "UK_RoyalMailSecondClassStandard"
  UK_RoyalMailSpecialDelivery = "UK_RoyalMailSpecialDelivery"
  UK_RoyalMailStandardParcel = "UK_RoyalMailStandardParcel"
  UK_RoyalMailSurfaceMailInternational = "UK_RoyalMailSurfaceMailInternational"
  UK_SellersStandardInternationalRate = "UK_SellersStandardInternationalRate"
  UK_SellersStandardRate = "UK_SellersStandardRate"
  UPS2DayAirAM = "UPS2DayAirAM"
  UPS2ndDay = "UPS2ndDay"
  UPS3rdDay = "UPS3rdDay"
  UPSGround = "UPSGround"
  UPSNextDay = "UPSNextDay"
  UPSNextDayAir = "UPSNextDayAir"
  UPSStandardToCanada = "UPSStandardToCanada"
  UPSWorldWideExpedited = "UPSWorldWideExpedited"
  UPSWorldWideExpress = "UPSWorldWideExpress"
  UPSWorldWideExpressPlus = "UPSWorldWideExpressPlus"
  USPSAirmailLetter = "USPSAirmailLetter"
  USPSAirmailParcel = "USPSAirmailParcel"
  USPSEconomyLetter = "USPSEconomyLetter"
  USPSEconomyParcel = "USPSEconomyParcel"
  USPSExpressMail = "USPSExpressMail"
  USPSFirstClass = "USPSFirstClass"
  USPSGlobalExpress = "USPSGlobalExpress"
  USPSGlobalPriority = "USPSGlobalPriority"
  USPSGround = "USPSGround"
  USPSMedia = "USPSMedia"
  USPSParcel = "USPSParcel"
  USPSPriority = "USPSPriority"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermsCodeType
module ShippingTermsCodeType
  BuyerPays = "BuyerPays"
  CustomCode = "CustomCode"
  SellerPays = "SellerPays"
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTypeCodeType
module ShippingTypeCodeType
  Calculated = "Calculated"
  CustomCode = "CustomCode"
  Flat = "Flat"
  Free = "Free"
  Freight = "Freight"
  NotSpecified = "NotSpecified"
end

# {urn:ebay:apis:eBLBaseComponents}SiteCodeType
module SiteCodeType
  Australia = "Australia"
  Austria = "Austria"
  Belgium_Dutch = "Belgium_Dutch"
  Belgium_French = "Belgium_French"
  Canada = "Canada"
  China = "China"
  CustomCode = "CustomCode"
  EBayMotors = "eBayMotors"
  France = "France"
  Germany = "Germany"
  HongKong = "HongKong"
  India = "India"
  Ireland = "Ireland"
  Italy = "Italy"
  Malaysia = "Malaysia"
  Netherlands = "Netherlands"
  Philippines = "Philippines"
  Singapore = "Singapore"
  Spain = "Spain"
  Switzerland = "Switzerland"
  Taiwan = "Taiwan"
  UK = "UK"
  US = "US"
end

# {urn:ebay:apis:eBLBaseComponents}SiteIDFilterCodeType
module SiteIDFilterCodeType
  AvailableInCountryImplied = "AvailableInCountryImplied"
  BelgiumListing = "BelgiumListing"
  CustomCode = "CustomCode"
  ListedInCurrencyImplied = "ListedInCurrencyImplied"
  LocatedInCountryImplied = "LocatedInCountryImplied"
  SiteImplied = "SiteImplied"
end

# {urn:ebay:apis:eBLBaseComponents}SortOrderCodeType
module SortOrderCodeType
  Ascending = "Ascending"
  CustomCode = "CustomCode"
  Descending = "Descending"
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomHeaderLayoutCodeType
module StoreCustomHeaderLayoutCodeType
  CustomCode = "CustomCode"
  CustomHeaderShown = "CustomHeaderShown"
  NoHeader = "NoHeader"
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderDisplayCodeType
module StoreCustomListingHeaderDisplayCodeType
  CustomCode = "CustomCode"
  Full = "Full"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkCodeType
module StoreCustomListingHeaderLinkCodeType
  AboutMePage = "AboutMePage"
  CustomCategory = "CustomCategory"
  CustomCode = "CustomCode"
  CustomPage = "CustomPage"
  None = "None"
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageStatusCodeType
module StoreCustomPageStatusCodeType
  Active = "Active"
  CustomCode = "CustomCode"
  Delete = "Delete"
  Inactive = "Inactive"
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontFaceCodeType
module StoreFontFaceCodeType
  Arial = "Arial"
  Courier = "Courier"
  CustomCode = "CustomCode"
  Times = "Times"
  Verdana = "Verdana"
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontSizeCodeType
module StoreFontSizeCodeType
  CustomCode = "CustomCode"
  L = "L"
  M = "M"
  S = "S"
  XL = "XL"
  XS = "XS"
  XXL = "XXL"
  XXS = "XXS"
end

# {urn:ebay:apis:eBLBaseComponents}StoreHeaderStyleCodeType
module StoreHeaderStyleCodeType
  CustomCode = "CustomCode"
  Full = "Full"
  Minimized = "Minimized"
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListLayoutCodeType
module StoreItemListLayoutCodeType
  CustomCode = "CustomCode"
  GalleryView = "GalleryView"
  ListView = "ListView"
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListSortOrderCodeType
module StoreItemListSortOrderCodeType
  CustomCode = "CustomCode"
  EndingFirst = "EndingFirst"
  HighestPriced = "HighestPriced"
  LowestPriced = "LowestPriced"
  NewlyListed = "NewlyListed"
end

# {urn:ebay:apis:eBLBaseComponents}StoreSearchCodeType
module StoreSearchCodeType
  AllItemsInTheStore = "AllItemsInTheStore"
  AuctionItemsInTheStore = "AuctionItemsInTheStore"
  BuyItNowItemsInAllStores = "BuyItNowItemsInAllStores"
  BuyItNowItemsInTheStore = "BuyItNowItemsInTheStore"
  CustomCode = "CustomCode"
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionLevelCodeType
module StoreSubscriptionLevelCodeType
  Anchor = "Anchor"
  Basic = "Basic"
  Close = "Close"
  CustomCode = "CustomCode"
  Featured = "Featured"
end

# {urn:ebay:apis:eBLBaseComponents}TokenReturnMethodCodeType
module TokenReturnMethodCodeType
  CustomCode = "CustomCode"
  FetchToken = "FetchToken"
  Redirect = "Redirect"
end

# {urn:ebay:apis:eBLBaseComponents}TradingRoleCodeType
module TradingRoleCodeType
  Buyer = "Buyer"
  CustomCode = "CustomCode"
  Seller = "Seller"
end

# {urn:ebay:apis:eBLBaseComponents}UPSRateOptionCodeType
module UPSRateOptionCodeType
  CustomCode = "CustomCode"
  UPSDailyRates = "UPSDailyRates"
  UPSOnDemandRates = "UPSOnDemandRates"
end

# {urn:ebay:apis:eBLBaseComponents}URLTypeCodeType
module URLTypeCodeType
  CustomCode = "CustomCode"
  EBayStoreURL = "eBayStoreURL"
  LargeLogoURL = "LargeLogoURL"
  MediumLogoURL = "MediumLogoURL"
  MyeBayBiddingURL = "MyeBayBiddingURL"
  MyeBayNotWonURL = "MyeBayNotWonURL"
  MyeBayURL = "MyeBayURL"
  MyeBayWatchingURL = "MyeBayWatchingURL"
  MyeBayWonURL = "MyeBayWonURL"
  SmallLogoURL = "SmallLogoURL"
  ViewItemURL = "ViewItemURL"
  ViewUserURL = "ViewUserURL"
end

# {urn:ebay:apis:eBLBaseComponents}UnitCodeType
module UnitCodeType
  Cm = "cm"
  CustomCode = "CustomCode"
  Ft = "ft"
  Inches = "inches"
  Kg = "kg"
  Lbs = "lbs"
  Oz = "oz"
end

# {urn:ebay:apis:eBLBaseComponents}UserStatusCodeType
module UserStatusCodeType
  AccountOnHold = "AccountOnHold"
  Confirmed = "Confirmed"
  CreditCardVerify = "CreditCardVerify"
  CreditCardVerifyHalfOptIn = "CreditCardVerifyHalfOptIn"
  CreditCardVerifyPassport = "CreditCardVerifyPassport"
  CustomCode = "CustomCode"
  Deleted = "Deleted"
  Ghost = "Ghost"
  InMaintenance = "InMaintenance"
  Merged = "Merged"
  RegistrationCodeMailOut = "RegistrationCodeMailOut"
  Suspended = "Suspended"
  TermPending = "TermPending"
  Unconfirmed = "Unconfirmed"
  UnconfirmedExpress = "UnconfirmedExpress"
  UnconfirmedHalfOptIn = "UnconfirmedHalfOptIn"
  UnconfirmedPassport = "UnconfirmedPassport"
  Unknown = "Unknown"
end

# {urn:ebay:apis:eBLBaseComponents}VATStatusCodeType
module VATStatusCodeType
  CustomCode = "CustomCode"
  NoVATTax = "NoVATTax"
  VATExempt = "VATExempt"
  VATTax = "VATTax"
end
